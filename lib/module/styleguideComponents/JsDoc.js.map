{"version":3,"sources":["JsDoc.tsx"],"names":["plural","array","caption","length","list","map","item","description","join","paragraphs","fields","author","value","deprecated","link","see","since","version","getMarkdown","props","format","field","tag","filter","Boolean","JsDoc","markdown","propTypes","PropTypes"],"mappings":";;;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAqBC,OAArB;AAAA,SACbD,KAAK,CAACE,MAAN,KAAiB,CAAjB,GAAqBD,OAArB,GAAkCA,OAAlC,MADa;AAAA,CAAf;;AAEA,IAAME,IAAI,GAAG,SAAPA,IAAO,CAACH,KAAD;AAAA,SAAwBA,KAAK,CAACI,GAAN,CAAU,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,WAAf;AAAA,GAAV,EAAsCC,IAAtC,CAA2C,IAA3C,CAAxB;AAAA,CAAb;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACR,KAAD;AAAA,SAAwBA,KAAK,CAACI,GAAN,CAAU,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,WAAf;AAAA,GAAV,EAAsCC,IAAtC,CAA2C,MAA3C,CAAxB;AAAA,CAAnB;;AAEA,IAAME,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,WAA2BZ,MAAM,CAACY,KAAD,EAAQ,QAAR,CAAjC,UAAuDR,IAAI,CAACQ,KAAD,CAA3D;AAAA,GADK;AAEb,aAAS,kBAACA,KAAD;AAAA,6BAAwCA,KAAK,CAAC,CAAD,CAAL,WAAxC;AAAA,GAFI;AAGbC,EAAAA,UAAU,EAAE,oBAACD,KAAD;AAAA,gCAA2CA,KAAK,CAAC,CAAD,CAAL,CAASL,WAApD;AAAA,GAHC;AAIbO,EAAAA,IAAI,EAAE,cAACF,KAAD;AAAA,WAAwBH,UAAU,CAACG,KAAD,CAAlC;AAAA,GAJO;AAKbG,EAAAA,GAAG,EAAE,aAACH,KAAD;AAAA,WAAwBH,UAAU,CAACG,KAAD,CAAlC;AAAA,GALQ;AAMbI,EAAAA,KAAK,EAAE,eAACJ,KAAD;AAAA,uBAAkCA,KAAK,CAAC,CAAD,CAAL,CAASL,WAA3C;AAAA,GANM;AAObU,EAAAA,OAAO,EAAE,iBAACL,KAAD;AAAA,yBAAoCA,KAAK,CAAC,CAAD,CAAL,CAASL,WAA7C;AAAA;AAPI,CAAf;;AAUO,SAASW,WAAT,CAAqBC,KAArB,EAAsC;AAC3C,SAAO,qBAAIT,MAAJ,EAAY,UAACU,MAAD,EAAyCC,KAAzC,EAAmE;AACpF,QAAMC,GAAG,GAAGH,KAAK,CAACE,KAAD,CAAjB;AACA,WAAOC,GAAG,IAAIF,MAAM,CAACE,GAAD,CAApB;AACD,GAHM,EAIJC,MAJI,CAIGC,OAJH,EAKJhB,IALI,CAKC,MALD,CAAP;AAMD;;AAEc,SAASiB,KAAT,CAAeN,KAAf,EAAgC;AAC7C,MAAMO,QAAQ,GAAGR,WAAW,CAACC,KAAD,CAA5B;AACA,SAAOO,QAAQ,GAAG,gCAAC,oBAAD;AAAU,IAAA,IAAI,EAAEA,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAkC,IAAjD;AACD;;AAEDD,KAAK,CAACE,SAAN,GAAkB;AAChBhB,EAAAA,MAAM,EAAEiB,sBAAU3B,KADF;AAEhBY,EAAAA,UAAU,EAAEe,sBAAU3B,KAFN;AAGhBa,EAAAA,IAAI,EAAEc,sBAAU3B,KAHA;AAIhBc,EAAAA,GAAG,EAAEa,sBAAU3B,KAJC;AAKhBe,EAAAA,KAAK,EAAEY,sBAAU3B,KALD;AAMhBgB,EAAAA,OAAO,EAAEW,sBAAU3B;AANH,CAAlB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TagObject, TagProps } from 'react-docgen';\nimport map from 'lodash/map';\nimport Markdown from 'react-styleguidist/lib/client/rsg-components/Markdown';\n\nconst plural = (array: TagObject[], caption: string) =>\n  array.length === 1 ? caption : `${caption}s`;\nconst list = (array: TagObject[]) => array.map((item) => item.description).join(', ');\nconst paragraphs = (array: TagObject[]) => array.map((item) => item.description).join('\\n\\n');\n\nconst fields = {\n  author: (value: TagObject[]) => `${plural(value, 'Author')}: ${list(value)}`,\n  default: (value: TagObject[]) => `**Default**: ${value[0].default}`,\n  deprecated: (value: TagObject[]) => `**Deprecated:** ${value[0].description}`,\n  link: (value: TagObject[]) => paragraphs(value),\n  see: (value: TagObject[]) => paragraphs(value),\n  since: (value: TagObject[]) => `Since: ${value[0].description}`,\n  version: (value: TagObject[]) => `Version: ${value[0].description}`,\n};\n\nexport function getMarkdown(props: TagProps) {\n  return map(fields, (format: (value: TagObject[]) => string, field: keyof TagProps) => {\n    const tag = props[field];\n    return tag && format(tag);\n  })\n    .filter(Boolean)\n    .join('\\n\\n');\n}\n\nexport default function JsDoc(props: TagProps) {\n  const markdown = getMarkdown(props);\n  return markdown ? <Markdown text={markdown} /> : null;\n}\n\nJsDoc.propTypes = {\n  author: PropTypes.array,\n  deprecated: PropTypes.array,\n  link: PropTypes.array,\n  see: PropTypes.array,\n  since: PropTypes.array,\n  version: PropTypes.array,\n};\n"]}