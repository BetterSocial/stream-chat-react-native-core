{"version":3,"sources":["MentionsItem.tsx"],"names":["styles","StyleSheet","create","column","flex","justifyContent","paddingLeft","container","alignItems","flexDirection","paddingHorizontal","paddingVertical","name","fontSize","fontWeight","paddingBottom","tag","MentionsItem","item","id","image","online","theme","colors","accent_blue","black","grey","messageInput","suggestions","mention","avatarSize","nameStyle","color","displayName"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAEA;;AACA;;;;;AAKA,IAAMA,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,EAAE,CADA;AAENC,IAAAA,cAAc,EAAE,cAFV;AAGNC,IAAAA,WAAW,EAAE;AAHP,GADuB;AAM/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,eAAe,EAAE;AAJR,GANoB;AAY/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,UAAU,EAAE,MAFR;AAGJC,IAAAA,aAAa,EAAE;AAHX,GAZyB;AAiB/BC,EAAAA,GAAG,EAAE;AACHH,IAAAA,QAAQ,EAAE,EADP;AAEHC,IAAAA,UAAU,EAAE;AAFT;AAjB0B,CAAlB,CAAf;;AAkCO,IAAMG,YAAY,GAAG,SAAfA,YAAe,OAEC;AAAA,uBAD3BC,IAC2B;AAAA,MADnBC,EACmB,aADnBA,EACmB;AAAA,MADfC,KACe,aADfA,KACe;AAAA,MADRR,IACQ,aADRA,IACQ;AAAA,MADFS,MACE,aADFA,MACE;;AAC3B,kBASI,6BATJ;AAAA,kCACEC,KADF;AAAA,8CAEIC,MAFJ;AAAA,MAEcC,WAFd,yBAEcA,WAFd;AAAA,MAE2BC,KAF3B,yBAE2BA,KAF3B;AAAA,MAEkCC,IAFlC,yBAEkCA,IAFlC;AAAA,8CAGIC,YAHJ,CAIMC,WAJN,CAKQC,OALR;AAAA,MAKmBC,UALnB,yBAKmBA,UALnB;AAAA,MAK+B3B,MAL/B,yBAK+BA,MAL/B;AAAA,MAKuCI,SALvC,yBAKuCA,SALvC;AAAA,MAKwDwB,SALxD,yBAKkDnB,IALlD;AAAA,MAKmEI,GALnE,yBAKmEA,GALnE;;AAWA,SACE,gCAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAAChB,MAAM,CAACO,SAAR,EAAmBA,SAAnB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,gCAAC,cAAD;AAAQ,IAAA,KAAK,EAAEa,KAAf;AAAsB,IAAA,IAAI,EAAER,IAA5B;AAAkC,IAAA,MAAM,EAAES,MAA1C;AAAkD,IAAA,IAAI,EAAES,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,gCAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAAC9B,MAAM,CAACG,MAAR,EAAgBA,MAAhB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,gCAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACH,MAAM,CAACY,IAAR,EAAc;AAAEoB,MAAAA,KAAK,EAAEP;AAAT,KAAd,EAAgCM,SAAhC,CAAb;AAAyD,IAAA,MAAM,EAAC,oBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,IAAI,IAAIO,EADX,CADF,EAIE,gCAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACnB,MAAM,CAACgB,GAAR,EAAa;AAAEgB,MAAAA,KAAK,EAAEN;AAAT,KAAb,EAA8BV,GAA9B,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsDG,EAAtD,CAJF,CAFF,EAQE,gCAAC,sBAAD;AAAY,IAAA,QAAQ,EAAEK,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD,CA1BM;;;AA4BPP,YAAY,CAACgB,WAAb,GAA2B,kDAA3B","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport { Avatar } from '../Avatar/Avatar';\n\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { AtMentions } from '../../icons/AtMentions';\n\nimport type { SuggestionUser } from '../../contexts/suggestionsContext/SuggestionsContext';\nimport type { DefaultUserType } from '../../types/types';\n\nconst styles = StyleSheet.create({\n  column: {\n    flex: 1,\n    justifyContent: 'space-evenly',\n    paddingLeft: 8,\n  },\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n  },\n  name: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    paddingBottom: 2,\n  },\n  tag: {\n    fontSize: 12,\n    fontWeight: '600',\n  },\n});\n\nexport type MentionsItemProps<Us extends DefaultUserType = DefaultUserType> = {\n  /**\n   * A UserResponse of suggested UserTypes with these properties\n   *\n   * - id: User ID of the suggested mention user\n   * - image: Image to be shown as the Avatar for the user\n   * - name: Name of the suggested mention user\n   */\n  item: SuggestionUser<Us>;\n};\n\nexport const MentionsItem = <Us extends DefaultUserType = DefaultUserType>({\n  item: { id, image, name, online },\n}: MentionsItemProps<Us>) => {\n  const {\n    theme: {\n      colors: { accent_blue, black, grey },\n      messageInput: {\n        suggestions: {\n          mention: { avatarSize, column, container, name: nameStyle, tag },\n        },\n      },\n    },\n  } = useTheme();\n\n  return (\n    <View style={[styles.container, container]}>\n      <Avatar image={image} name={name} online={online} size={avatarSize} />\n      <View style={[styles.column, column]}>\n        <Text style={[styles.name, { color: black }, nameStyle]} testID='mentions-item-name'>\n          {name || id}\n        </Text>\n        <Text style={[styles.tag, { color: grey }, tag]}>{`@${id}`}</Text>\n      </View>\n      <AtMentions pathFill={accent_blue} />\n    </View>\n  );\n};\n\nMentionsItem.displayName = 'MentionsItem{messageInput{suggestions{mention}}}';\n"]}