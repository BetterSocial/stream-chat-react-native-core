{"version":3,"sources":["CommandsItem.tsx"],"names":["styles","StyleSheet","create","args","fontSize","container","alignItems","flexDirection","paddingHorizontal","paddingVertical","iconContainer","borderRadius","height","justifyContent","marginRight","width","title","fontWeight","paddingRight","Icon","name","theme","colors","accent_blue","white","messageInput","suggestions","command","backgroundColor","CommandsItem","item","black","grey","argsStyle","color","replace","char","toUpperCase","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { Flag, GiphyIcon, Imgur, Lightning, Mute, Sound, UserAdd, UserDelete } from '../../icons';\n\nimport type { SuggestionCommand } from '../../contexts/suggestionsContext/SuggestionsContext';\nimport type { DefaultCommandType } from '../../types/types';\n\nconst styles = StyleSheet.create({\n  args: {\n    fontSize: 14,\n  },\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n  },\n  iconContainer: {\n    alignItems: 'center',\n    borderRadius: 12,\n    height: 24,\n    justifyContent: 'center',\n    marginRight: 8,\n    width: 24,\n  },\n  title: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    paddingRight: 8,\n  },\n});\n\nconst Icon = <Co extends string = DefaultCommandType>({\n  name,\n}: {\n  name: SuggestionCommand<Co>['name'];\n}) => {\n  const {\n    theme: {\n      colors: { accent_blue, white },\n      messageInput: {\n        suggestions: {\n          command: { iconContainer },\n        },\n      },\n    },\n  } = useTheme();\n  switch (name) {\n    case 'ban':\n      return (\n        <View style={[styles.iconContainer, { backgroundColor: accent_blue }, iconContainer]}>\n          <UserDelete height={16} pathFill={white} width={16} />\n        </View>\n      );\n    case 'flag':\n      return (\n        <View style={[styles.iconContainer, { backgroundColor: accent_blue }, iconContainer]}>\n          <Flag pathFill={white} />\n        </View>\n      );\n    case 'giphy':\n      return (\n        <View style={[styles.iconContainer, { backgroundColor: accent_blue }, iconContainer]}>\n          <GiphyIcon />\n        </View>\n      );\n    case 'imgur':\n      return (\n        <View style={[styles.iconContainer, { backgroundColor: accent_blue }, iconContainer]}>\n          <Imgur />\n        </View>\n      );\n    case 'mute':\n      return (\n        <View style={[styles.iconContainer, { backgroundColor: accent_blue }, iconContainer]}>\n          <Mute height={16} pathFill={white} width={16} />\n        </View>\n      );\n    case 'unban':\n      return (\n        <View style={[styles.iconContainer, { backgroundColor: accent_blue }, iconContainer]}>\n          <UserAdd height={16} pathFill={white} width={16} />\n        </View>\n      );\n    case 'unmute':\n      return (\n        <View style={[styles.iconContainer, { backgroundColor: accent_blue }, iconContainer]}>\n          <Sound pathFill={white} />\n        </View>\n      );\n    default:\n      return (\n        <View style={[styles.iconContainer, { backgroundColor: accent_blue }, iconContainer]}>\n          <Lightning height={16} pathFill={white} width={16} />\n        </View>\n      );\n  }\n};\n\nexport type CommandsItemProps<Co extends string = DefaultCommandType> = {\n  /**\n   * A CommandResponse of suggested CommandTypes with these properties\n   *\n   * - args: Arguments which can be passed to the command\n   * - name: Name of the command\n   */\n  item: SuggestionCommand<Co>;\n};\n\nexport const CommandsItem = <Co extends string = DefaultCommandType>({\n  item: { args, name },\n}: CommandsItemProps<Co>) => {\n  const {\n    theme: {\n      colors: { black, grey },\n      messageInput: {\n        suggestions: {\n          command: { args: argsStyle, container, title },\n        },\n      },\n    },\n  } = useTheme();\n\n  return (\n    <View style={[styles.container, container]}>\n      <Icon name={name} />\n      <Text style={[styles.title, { color: black }, title]} testID='commands-item-title'>\n        {(name || '').replace(/^\\w/, (char) => char.toUpperCase())}\n      </Text>\n      <Text style={[styles.args, { color: grey }, argsStyle]} testID='commands-item-args'>\n        {`/${name} ${args}`}\n      </Text>\n    </View>\n  );\n};\n\nCommandsItem.displayName = 'CommandsItem{messageInput{suggestions{command}}}';\n"]}