{"version":3,"sources":["EmojisHeader.tsx"],"names":["styles","StyleSheet","create","container","alignItems","flexDirection","padding","title","fontSize","paddingLeft","EmojisHeader","theme","colors","accent_blue","grey","messageInput","suggestions","emojisHeader","titleStyle","t","color","displayName"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;;AAEA,IAAMA,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,aAAa,EAAE,KAFN;AAGTC,IAAAA,OAAO,EAAE;AAHA,GADoB;AAM/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,WAAW,EAAE;AAFR;AANwB,CAAlB,CAAf;;AAcO,IAAMC,YAAyC,GAAG,SAA5CA,YAA4C,OAAoB;AAAA,wBAAjBH,KAAiB;AAAA,MAAjBA,KAAiB,2BAAT,EAAS;;AAC3E,kBASI,6BATJ;AAAA,kCACEI,KADF;AAAA,8CAEIC,MAFJ;AAAA,MAEcC,WAFd,yBAEcA,WAFd;AAAA,MAE2BC,IAF3B,yBAE2BA,IAF3B;AAAA,8CAGIC,YAHJ,CAIMC,WAJN,CAKQC,YALR;AAAA,MAKwBd,SALxB,yBAKwBA,SALxB;AAAA,MAK0Ce,UAL1C,yBAKmCX,KALnC;;AAUA,8BAAc,gDAAd;AAAA,MAAQY,CAAR,yBAAQA,CAAR;;AAEA,SACE,gCAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACnB,MAAM,CAACG,SAAR,EAAmBA,SAAnB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,gCAAC,YAAD;AAAO,IAAA,QAAQ,EAAEU,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,gCAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACb,MAAM,CAACO,KAAR,EAAe;AAAEa,MAAAA,KAAK,EAAEN;AAAT,KAAf,EAAgCI,UAAhC,CAAb;AAA0D,IAAA,MAAM,EAAC,qBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,CAAC,CAAC,gBAAD,CAAD,YAA2BZ,KAA3B,QADH,CAFF,CADF;AAQD,CArBM;;;AAuBPG,YAAY,CAACW,WAAb,GAA2B,uDAA3B","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { useTranslationContext } from '../../contexts/translationContext/TranslationContext';\nimport { Smile } from '../../icons/Smile';\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    padding: 8,\n  },\n  title: {\n    fontSize: 14,\n    paddingLeft: 8,\n  },\n});\n\nexport type EmojisHeaderProps = { title: string };\n\nexport const EmojisHeader: React.FC<EmojisHeaderProps> = ({ title = '' }) => {\n  const {\n    theme: {\n      colors: { accent_blue, grey },\n      messageInput: {\n        suggestions: {\n          emojisHeader: { container, title: titleStyle },\n        },\n      },\n    },\n  } = useTheme();\n  const { t } = useTranslationContext();\n\n  return (\n    <View style={[styles.container, container]}>\n      <Smile pathFill={accent_blue} />\n      <Text style={[styles.title, { color: grey }, titleStyle]} testID='emojis-header-title'>\n        {t('Emoji matching') + ` \"${title}\"`}\n      </Text>\n    </View>\n  );\n};\n\nEmojisHeader.displayName = 'EmojisHeader{messageInput{suggestions{emojisHeader}}}';\n"]}