{"version":3,"sources":["useCreateChannelsContext.ts"],"names":["useCreateChannelsContext","additionalFlatListProps","channels","EmptyStateIndicator","error","FooterLoadingIndicator","forceUpdate","hasNextPage","HeaderErrorIndicator","HeaderNetworkDownIndicator","ListHeaderComponent","loadingChannels","LoadingErrorIndicator","LoadingIndicator","loadingNextPage","loadMoreThreshold","loadNextPage","maxUnreadCount","numberOfSkeletons","onSelect","Preview","PreviewAvatar","PreviewMessage","PreviewStatus","PreviewTitle","PreviewUnreadCount","refreshing","refreshList","reloadList","setFlatListRef","Skeleton","channelValueString","map","channel","data","name","Object","values","state","members","member","user","online","join","channelsContext"],"mappings":"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","sourcesContent":["import { useMemo } from 'react';\n\nimport type { ChannelsContextValue } from '../../../contexts/channelsContext/ChannelsContext';\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../../types/types';\n\nexport const useCreateChannelsContext = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>({\n  additionalFlatListProps,\n  channels,\n  EmptyStateIndicator,\n  error,\n  FooterLoadingIndicator,\n  forceUpdate,\n  hasNextPage,\n  HeaderErrorIndicator,\n  HeaderNetworkDownIndicator,\n  ListHeaderComponent,\n  loadingChannels,\n  LoadingErrorIndicator,\n  LoadingIndicator,\n  loadingNextPage,\n  loadMoreThreshold,\n  loadNextPage,\n  maxUnreadCount,\n  numberOfSkeletons,\n  onSelect,\n  Preview,\n  PreviewAvatar,\n  PreviewMessage,\n  PreviewStatus,\n  PreviewTitle,\n  PreviewUnreadCount,\n  refreshing,\n  refreshList,\n  reloadList,\n  setFlatListRef,\n  Skeleton,\n}: ChannelsContextValue<At, Ch, Co, Ev, Me, Re, Us>) => {\n  const channelValueString = channels\n    .map(\n      (channel) =>\n        `${channel.data?.name}${Object.values(channel.state.members)\n          .map((member) => member.user?.online)\n          .join()}`,\n    )\n    .join();\n\n  const channelsContext: ChannelsContextValue<At, Ch, Co, Ev, Me, Re, Us> = useMemo(\n    () => ({\n      additionalFlatListProps,\n      channels,\n      EmptyStateIndicator,\n      error,\n      FooterLoadingIndicator,\n      forceUpdate,\n      hasNextPage,\n      HeaderErrorIndicator,\n      HeaderNetworkDownIndicator,\n      ListHeaderComponent,\n      loadingChannels,\n      LoadingErrorIndicator,\n      LoadingIndicator,\n      loadingNextPage,\n      loadMoreThreshold,\n      loadNextPage,\n      maxUnreadCount,\n      numberOfSkeletons,\n      onSelect,\n      Preview,\n      PreviewAvatar,\n      PreviewMessage,\n      PreviewStatus,\n      PreviewTitle,\n      PreviewUnreadCount,\n      refreshing,\n      refreshList,\n      reloadList,\n      setFlatListRef,\n      Skeleton,\n    }),\n    [\n      channelValueString,\n      error,\n      forceUpdate,\n      hasNextPage,\n      loadingChannels,\n      loadingNextPage,\n      refreshing,\n    ],\n  );\n\n  return channelsContext;\n};\n"]}