{"version":3,"sources":["OverlayReactionList.tsx"],"names":["AnimatedCircle","Animated","createAnimatedComponent","Circle","styles","StyleSheet","create","notLastReaction","marginRight","reactionList","alignItems","borderRadius","flexDirection","justifyContent","paddingHorizontal","paddingVertical","position","selectedIcon","reactionData","Icon","LoveReaction","type","ThumbsUpReaction","ThumbsDownReaction","LOLReaction","WutReaction","ReactionButton","props","handleReaction","index","numberOfReactions","ownReactionTypes","setOverlay","showScreen","theme","colors","accent_blue","grey","overlay","reactionsList","reaction","reactionSize","selected","includes","animationScale","hasShown","scale","selectedOpacity","onTap","onEnd","triggerHaptic","value","duration","onFinish","onStart","result","iconStyle","transform","selectedStyle","opacity","bottom","Number","paddingBottom","left","paddingLeft","right","paddingRight","top","paddingTop","OverlayReactionListWithContext","alignment","fill","messageLayout","setReactionListHeight","supportedReactions","white_snow","screenPadding","padding","radius","reactionListHeight","reactionBubbleWidth","reactionListLayout","height","width","animatedStyle","insideLeftBound","x","insideRightBound","y","animatedBigCircleProps","cx","cy","r","animateSmallCircleProps","showScreenStyle","translateY","translateX","length","absoluteFill","layout","nativeEvent","layoutWidth","backgroundColor","map","areEqual","prevProps","nextProps","prevAlignment","prevOwnReactionTypes","nextAlignment","nextOwnReactionTypes","alignmentEqual","ownReactionTypesEqual","MemoizedOverlayReactionList","React","memo","OverlayReactionList","data","displayName"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAaA;;AAEA;;AAIA;;AAIA;;AAIA;;AACA;;AASA;;;;;;;;;AAcA,IAAMA,cAAc,GAAGC,kCAASC,uBAAT,GACnBD,kCAASC,uBAAT,CAAiCC,sBAAjC,CADmB,GAEnBA,sBAFJ;;AAIA,IAAMC,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,eAAe,EAAE;AACfC,IAAAA,WAAW,EAAE;AADE,GADc;AAI/BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,UAAU,EAAE,QADA;AAEZC,IAAAA,YAAY,EAAE,EAFF;AAGZC,IAAAA,aAAa,EAAE,KAHH;AAIZC,IAAAA,cAAc,EAAE,QAJJ;AAKZC,IAAAA,iBAAiB,EAAE,EALP;AAMZC,IAAAA,eAAe,EAAE,EANL;AAOZC,IAAAA,QAAQ,EAAE;AAPE,GAJiB;AAa/BC,EAAAA,YAAY,EAAE;AACZD,IAAAA,QAAQ,EAAE;AADE;AAbiB,CAAlB,CAAf;;AAkBA,IAAME,YAA4B,GAAG,CACnC;AACEC,EAAAA,IAAI,EAAEC,mBADR;AAEEC,EAAAA,IAAI,EAAE;AAFR,CADmC,EAKnC;AACEF,EAAAA,IAAI,EAAEG,uBADR;AAEED,EAAAA,IAAI,EAAE;AAFR,CALmC,EASnC;AACEF,EAAAA,IAAI,EAAEI,yBADR;AAEEF,EAAAA,IAAI,EAAE;AAFR,CATmC,EAanC;AACEF,EAAAA,IAAI,EAAEK,kBADR;AAEEH,EAAAA,IAAI,EAAE;AAFR,CAbmC,EAiBnC;AACEF,EAAAA,IAAI,EAAEM,kBADR;AAEEJ,EAAAA,IAAI,EAAE;AAFR,CAjBmC,CAArC;;AA0CO,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAS5BC,KAT4B,EAUzB;AACH,MACEC,cADF,GASID,KATJ,CACEC,cADF;AAAA,MAEET,IAFF,GASIQ,KATJ,CAEER,IAFF;AAAA,MAGEU,KAHF,GASIF,KATJ,CAGEE,KAHF;AAAA,MAIEC,iBAJF,GASIH,KATJ,CAIEG,iBAJF;AAAA,MAKEC,gBALF,GASIJ,KATJ,CAKEI,gBALF;AAAA,MAMEC,UANF,GASIL,KATJ,CAMEK,UANF;AAAA,MAOEC,UAPF,GASIN,KATJ,CAOEM,UAPF;AAAA,MAQEZ,IARF,GASIM,KATJ,CAQEN,IARF;;AAUA,kBAOI,6BAPJ;AAAA,kCACEa,KADF;AAAA,8CAEIC,MAFJ;AAAA,MAEcC,WAFd,yBAEcA,WAFd;AAAA,MAE2BC,IAF3B,yBAE2BA,IAF3B;AAAA,8CAGIC,OAHJ,CAIMC,aAJN;AAAA,MAIuBC,QAJvB,yBAIuBA,QAJvB;AAAA,MAIiCC,YAJjC,yBAIiCA,YAJjC;;AAQA,MAAMC,QAAQ,GAAGX,gBAAgB,CAACY,QAAjB,CAA0BtB,IAA1B,CAAjB;AACA,MAAMuB,cAAc,GAAG,2CAAe,CAAf,CAAvB;AACA,MAAMC,QAAQ,GAAG,2CAAe,CAAf,CAAjB;AACA,MAAMC,KAAK,GAAG,2CAAe,CAAf,CAAd;AACA,MAAMC,eAAe,GAAG,2CAAeL,QAAQ,GAAG,CAAH,GAAO,CAA9B,CAAxB;AAEA,MAAMM,KAAK,GAAG,sDACZ;AACEC,IAAAA,KAAK,EAAE,iBAAM;AACX,0CAAQC,qBAAR,EAAuB,aAAvB;AACAH,MAAAA,eAAe,CAACI,KAAhB,GAAwB,uCAAWT,QAAQ,GAAG,CAAH,GAAO,CAA1B,EAA6B;AAAEU,QAAAA,QAAQ,EAAE;AAAZ,OAA7B,EAAgD,YAAM;AAC5E,YAAIxB,cAAJ,EAAoB;AAClB,8CAAQA,cAAR,EAAwBP,IAAxB;AACD;;AACD,4CAAQW,UAAR,EAAoB,MAApB;AACD,OALuB,CAAxB;AAMD,KATH;AAUEqB,IAAAA,QAAQ,EAAE,oBAAM;AACd,kDAAgBP,KAAhB;AACAA,MAAAA,KAAK,CAACK,KAAN,GAAc,uCAAW,CAAX,EAAc;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAd,CAAd;AACD,KAbH;AAcEE,IAAAA,OAAO,EAAE,mBAAM;AACb,kDAAgBR,KAAhB;AACAA,MAAAA,KAAK,CAACK,KAAN,GAAc,uCAAW,GAAX,EAAgB;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAhB,CAAd;AACD;AAjBH,GADY,EAoBZ,CAACxB,cAAD,EAAiBc,QAAjB,EAA2BV,UAA3B,EAAuCX,IAAvC,CApBY,CAAd;AAuBA,kDACE,YAAM;AACJ,QAAIY,UAAU,CAACkB,KAAX,GAAmB,GAAnB,IAA0BN,QAAQ,CAACM,KAAT,KAAmB,CAAjD,EAAoD;AAClD,aAAO,CAAP;AACD;;AACD,WAAO,CAAP;AACD,GANH,EAOE,UAACI,MAAD,EAAY;AACV,QAAIV,QAAQ,CAACM,KAAT,KAAmB,CAAnB,IAAwBI,MAAM,KAAK,CAAvC,EAA0C;AACxCV,MAAAA,QAAQ,CAACM,KAAT,GAAiB,CAAjB;AACAP,MAAAA,cAAc,CAACO,KAAf,GAAuB,yCACrB,sCAAU,MAAMrB,iBAAiB,IAAID,KAAK,GAAG,CAAZ,CAAvB,CAAV,EAAkD,uCAAW,GAAX,EAAgB;AAAEuB,QAAAA,QAAQ,EAAE;AAAZ,OAAhB,CAAlD,CADqB,EAErB,uCAAW,GAAX,EAAgB;AAAEA,QAAAA,QAAQ,EAAE;AAAZ,OAAhB,CAFqB,EAGrB,uCAAW,CAAX,EAAc;AAAEA,QAAAA,QAAQ,EAAE;AAAZ,OAAd,CAHqB,CAAvB;AAKD;AACF,GAhBH,EAiBE,CAACvB,KAAD,EAAQC,iBAAR,CAjBF;AAoBA,MAAM0B,SAAS,GAAG,6CAChB;AAAA,WAAO;AACLC,MAAAA,SAAS,EAAE,CACT;AACEX,QAAAA,KAAK,EAAEF,cAAc,CAACO;AADxB,OADS,EAIT;AACEL,QAAAA,KAAK,EAAEA,KAAK,CAACK;AADf,OAJS;AADN,KAAP;AAAA,GADgB,EAWhB,EAXgB,CAAlB;AAcA,MAAMO,aAAa,GAAG,6CAA4B;AAAA,WAAO;AACvDC,MAAAA,OAAO,EAAEZ,eAAe,CAACI;AAD8B,KAAP;AAAA,GAA5B,CAAtB;AAIA,SACE,gCAAC,4CAAD;AACE,IAAA,OAAO,EAAE;AACPS,MAAAA,MAAM,EACJC,MAAM,CAACrB,QAAQ,CAACzB,eAAT,IAA4B,CAA7B,CAAN,IACA8C,MAAM,CAACrB,QAAQ,CAACsB,aAAT,IAA0B,CAA3B,CADN,IAEA1D,MAAM,CAACK,YAAP,CAAoBM,eAJf;AAKPgD,MAAAA,IAAI,EACF,CAACF,MAAM,CAACrB,QAAQ,CAAC1B,iBAAT,IAA8B,CAA/B,CAAN,IACC+C,MAAM,CAACrB,QAAQ,CAACwB,WAAT,IAAwB,CAAzB,CADP,IAEC5D,MAAM,CAACG,eAAP,CAAuBC,WAFzB,IAEwC,CARnC;AASPyD,MAAAA,KAAK,EACH,CAACJ,MAAM,CAACrB,QAAQ,CAAC1B,iBAAT,IAA8B,CAA/B,CAAN,IACC+C,MAAM,CAACrB,QAAQ,CAAC0B,YAAT,IAAyB,CAA1B,CADP,IAEC9D,MAAM,CAACG,eAAP,CAAuBC,WAFzB,IAEwC,CAZnC;AAaP2D,MAAAA,GAAG,EACDN,MAAM,CAACrB,QAAQ,CAACzB,eAAT,IAA4B,CAA7B,CAAN,IACA8C,MAAM,CAACrB,QAAQ,CAAC4B,UAAT,IAAuB,CAAxB,CADN,IAEAhE,MAAM,CAACK,YAAP,CAAoBM;AAhBf,KADX;AAmBE,IAAA,aAAa,EAAE,IAnBjB;AAoBE,IAAA,oBAAoB,EAAEiC,KApBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAsBE,gCAAC,iCAAD,CAAU,IAAV;AACE,IAAA,KAAK,EAAE,CAACnB,KAAK,KAAKC,iBAAiB,GAAG,CAA9B,GAAkC1B,MAAM,CAACG,eAAzC,GAA2D,EAA5D,EAAgEiC,QAAhE,EAA0EgB,SAA1E,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,gCAAC,IAAD;AAAM,IAAA,MAAM,EAAEf,YAAd;AAA4B,IAAA,QAAQ,EAAEJ,IAAtC;AAA4C,IAAA,KAAK,EAAEI,YAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,gCAAC,iCAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE,CAACrC,MAAM,CAACa,YAAR,EAAsByC,aAAtB,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,gCAAC,IAAD;AAAM,IAAA,MAAM,EAAEjB,YAAd;AAA4B,IAAA,QAAQ,EAAEL,WAAtC;AAAmD,IAAA,KAAK,EAAEK,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CAtBF,CADF;AAiCD,CAjIM;;;;AA2JP,IAAM4B,8BAA8B,GAAG,SAAjCA,8BAAiC,CASrC1C,KATqC,EAUlC;AACH,MACE2C,SADF,GAUI3C,KAVJ,CACE2C,SADF;AAAA,MAEEC,IAFF,GAUI5C,KAVJ,CAEE4C,IAFF;AAAA,MAGE3C,cAHF,GAUID,KAVJ,CAGEC,cAHF;AAAA,MAIE4C,aAJF,GAUI7C,KAVJ,CAIE6C,aAJF;AAAA,MAKEzC,gBALF,GAUIJ,KAVJ,CAKEI,gBALF;AAAA,MAME0C,qBANF,GAUI9C,KAVJ,CAME8C,qBANF;AAAA,MAOExC,UAPF,GAUIN,KAVJ,CAOEM,UAPF;AAAA,MAQED,UARF,GAUIL,KAVJ,CAQEK,UARF;AAAA,8BAUIL,KAVJ,CASE+C,kBATF;AAAA,MASEA,kBATF,sCASuBxD,YATvB;;AAYA,mBAQI,6BARJ;AAAA,oCACEgB,KADF;AAAA,MAEcyC,UAFd,oBAEIxC,MAFJ,CAEcwC,UAFd;AAAA,+CAGIrC,OAHJ;AAAA,MAIesC,aAJf,yBAIMC,OAJN;AAAA,qDAKMtC,aALN;AAAA,MAKuBuC,MALvB,0BAKuBA,MALvB;AAAA,MAK+BrE,YAL/B,0BAK+BA,YAL/B;;AAUA,MAAMsE,kBAAkB,GAAG,2CAAe,CAAf,CAA3B;AACA,MAAMC,mBAAmB,GAAG,2CAAe,CAAf,CAA5B;AACA,MAAMC,kBAAkB,GAAG,2CAAe;AACxCC,IAAAA,MAAM,EAAE,CADgC;AAExCC,IAAAA,KAAK,EAAE;AAFiC,GAAf,CAA3B;;AAKA,6BAAkB,uCAAlB;AAAA,MAAQA,KAAR,wBAAQA,KAAR;;AAEA,MAAMC,aAAa,GAAG,6CAA4B,YAAM;AACtD,QAAMzE,YAAY,GAAGF,YAAY,CAACE,YAAb,IAA6BP,MAAM,CAACK,YAAP,CAAoBE,YAAtE;AACA,QAAM0E,eAAe,GACnBb,aAAa,CAACrB,KAAd,CAAoBmC,CAApB,GAAwBL,kBAAkB,CAAC9B,KAAnB,CAAyBgC,KAAjD,GAAyDxE,YAAzD,GAAwEiE,aAD1E;AAEA,QAAMW,gBAAgB,GAAGf,aAAa,CAACrB,KAAd,CAAoBmC,CAApB,GAAwB3E,YAAxB,GAAuCwE,KAAK,GAAGP,aAAxE;AACA,QAAMb,IAAI,GAAG,CAACsB,eAAD,GACTT,aADS,GAET,CAACW,gBAAD,GACAJ,KAAK,GAAGP,aAAR,GAAwBK,kBAAkB,CAAC9B,KAAnB,CAAyBgC,KADjD,GAEAX,aAAa,CAACrB,KAAd,CAAoBmC,CAApB,GAAwBL,kBAAkB,CAAC9B,KAAnB,CAAyBgC,KAAjD,GAAyDxE,YAJ7D;AAKA,QAAMwD,GAAG,GAAGK,aAAa,CAACrB,KAAd,CAAoBqC,CAApB,GAAwBP,kBAAkB,CAAC9B,KAAnB,CAAyB+B,MAAjD,GAA0DJ,MAAM,GAAG,CAA/E;AAEA,WAAO;AACLf,MAAAA,IAAI,EAAJA,IADK;AAELI,MAAAA,GAAG,EAAHA;AAFK,KAAP;AAID,GAhBqB,CAAtB;AAkBA,MAAMsB,sBAAsB,GAAG,6CAA8B;AAAA,WAAO;AAClEC,MAAAA,EAAE,EAAElB,aAAa,CAACrB,KAAd,CAAoBmC,CAApB,GAAwBR,MAAM,GAAG,CAD6B;AAElEa,MAAAA,EAAE,EAAEnB,aAAa,CAACrB,KAAd,CAAoBqC,CAApB,GAAwBV,MAAM,GAAG,CAF6B;AAGlEP,MAAAA,IAAI,EAAEA,IAAI,IAAII,UAHoD;AAIlEiB,MAAAA,CAAC,EAAEd,MAAM,GAAG;AAJsD,KAAP;AAAA,GAA9B,CAA/B;AAOA,MAAMe,uBAAuB,GAAG,6CAA8B;AAAA,WAAO;AACnEH,MAAAA,EAAE,EAAElB,aAAa,CAACrB,KAAd,CAAoBmC,CAApB,GAAwBR,MADuC;AAEnEa,MAAAA,EAAE,EAAEnB,aAAa,CAACrB,KAAd,CAAoBqC,CAF2C;AAGnEjB,MAAAA,IAAI,EAAEA,IAAI,IAAII,UAHqD;AAInEiB,MAAAA,CAAC,EAAEd;AAJgE,KAAP;AAAA,GAA9B,CAAhC;AAOA,MAAMgB,eAAe,GAAG,6CACtB;AAAA,WAAO;AACLrC,MAAAA,SAAS,EAAE,CACT;AACEsC,QAAAA,UAAU,EAAE,wCAAY9D,UAAU,CAACkB,KAAvB,EAA8B,CAAC,CAAD,EAAI,CAAJ,CAA9B,EAAsC,CAAC,CAAC4B,kBAAkB,CAAC5B,KAApB,GAA4B,CAA7B,EAAgC,CAAhC,CAAtC;AADd,OADS,EAIT;AACE6C,QAAAA,UAAU,EAAE,wCACV/D,UAAU,CAACkB,KADD,EAEV,CAAC,CAAD,EAAI,CAAJ,CAFU,EAGV,CACEmB,SAAS,KAAK,MAAd,GAAuB,CAACU,mBAAmB,CAAC7B,KAArB,GAA6B,CAApD,GAAwD6B,mBAAmB,CAAC7B,KAApB,GAA4B,CADtF,EAEE,CAFF,CAHU;AADd,OAJS,EAcT;AACEL,QAAAA,KAAK,EAAE,wCAAYb,UAAU,CAACkB,KAAvB,EAA8B,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,CAA9B,EAA2C,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAA3C;AADT,OAdS;AADN,KAAP;AAAA,GADsB,EAqBtB,CAACmB,SAAD,CArBsB,CAAxB;AAwBA,MAAMxC,iBAAiB,GAAG4C,kBAAkB,CAACuB,MAA7C;AAEA,SACE,gCAAC,iBAAD;AAAM,IAAA,KAAK,EAAE5F,wBAAW6F,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,gCAAC,iCAAD,CAAU,IAAV;AACE,IAAA,QAAQ,EAAE,wBAAiC;AAAA,UAAfC,MAAe,QAA9BC,WAA8B,CAAfD,MAAe;AACzCnB,MAAAA,mBAAmB,CAAC7B,KAApB,GAA4BgD,MAAM,CAAChB,KAAnC;AACD,KAHH;AAIE,IAAA,KAAK,EAAEW,eAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,gCAAC,0BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,gCAAC,cAAD;AAAgB,IAAA,aAAa,EAAEL,sBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,gCAAC,cAAD;AAAgB,IAAA,aAAa,EAAEI,uBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,EAUE,gCAAC,iCAAD,CAAU,IAAV;AACE,IAAA,QAAQ,EAAE,yBAIJ;AAAA,wCAHJO,WAGI,CAFFD,MAEE;AAAA,UAFQjB,MAER,yBAFQA,MAER;AAAA,UAFuBmB,WAEvB,yBAFgBlB,KAEhB;AACJF,MAAAA,kBAAkB,CAAC9B,KAAnB,GAA2B;AAAE+B,QAAAA,MAAM,EAANA,MAAF;AAAUC,QAAAA,KAAK,EAAEkB;AAAjB,OAA3B;AACAtB,MAAAA,kBAAkB,CAAC5B,KAAnB,GAA2B+B,MAA3B;AACAT,MAAAA,qBAAqB,CAACS,MAAD,CAArB;AACD,KATH;AAUE,IAAA,KAAK,EAAE,CACL9E,MAAM,CAACK,YADF,EAEL;AAAE6F,MAAAA,eAAe,EAAE3B;AAAnB,KAFK,EAGLS,aAHK,EAIL3E,YAJK,CAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAiBGiE,kBAjBH,oBAiBGA,kBAAkB,CAAE6B,GAApB,CAAwB,iBAAiB1E,KAAjB;AAAA,QAAGV,IAAH,SAAGA,IAAH;AAAA,QAASE,IAAT,SAASA,IAAT;AAAA,WACvB,gCAAC,cAAD;AACE,MAAA,cAAc,EAAEO,cADlB;AAEE,MAAA,IAAI,EAAET,IAFR;AAGE,MAAA,KAAK,EAAEU,KAHT;AAIE,MAAA,GAAG,EAAKR,IAAL,SAAaQ,KAJlB;AAKE,MAAA,iBAAiB,EAAEC,iBALrB;AAME,MAAA,gBAAgB,EAAEC,gBANpB;AAOE,MAAA,UAAU,EAAEC,UAPd;AAQE,MAAA,UAAU,EAAEC,UARd;AASE,MAAA,IAAI,EAAEZ,IATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADuB;AAAA,GAAxB,CAjBH,CAVF,CADF,CADF;AA8CD,CAlJD;;AAoJA,IAAMmF,QAAQ,GAAG,SAAXA,QAAW,CASfC,SATe,EAUfC,SAVe,EAWZ;AACH,MAAmBC,aAAnB,GAA6EF,SAA7E,CAAQnC,SAAR;AAAA,MAAoDsC,oBAApD,GAA6EH,SAA7E,CAAkC1E,gBAAlC;AACA,MAAmB8E,aAAnB,GAA6EH,SAA7E,CAAQpC,SAAR;AAAA,MAAoDwC,oBAApD,GAA6EJ,SAA7E,CAAkC3E,gBAAlC;AAEA,MAAMgF,cAAc,GAAGJ,aAAa,KAAKE,aAAzC;AACA,MAAI,CAACE,cAAL,EAAqB,OAAO,KAAP;AAErB,MAAMC,qBAAqB,GAAGJ,oBAAoB,CAACX,MAArB,KAAgCa,oBAAoB,CAACb,MAAnF;AACA,MAAI,CAACe,qBAAL,EAA4B,OAAO,KAAP;AAE5B,SAAO,IAAP;AACD,CAtBD;;AAwBA,IAAMC,2BAA2B,GAAGC,kBAAMC,IAAN,CAClC9C,8BADkC,EAElCmC,QAFkC,CAApC;;AA2BO,IAAMY,mBAAmB,GAAG,SAAtBA,mBAAsB,CASjCzF,KATiC,EAU9B;AACH,8BAAiB,sDAAjB;AAAA,MAAQ0F,IAAR,yBAAQA,IAAR;;AACA,4BAA+B,0CAA/B;AAAA,MAAQ3C,kBAAR,uBAAQA,kBAAR;;AACA,2BAAuB,wCAAvB;AAAA,MAAQ1C,UAAR,sBAAQA,UAAR;;AAEA,SACE,gCAAC,2BAAD,gCACOqF,IAAI,IAAI,EADf;AAEQrF,IAAAA,UAAU,EAAVA,UAFR;AAEoB0C,IAAAA,kBAAkB,EAAlBA;AAFpB,KAGM/C,KAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAOD,CAtBM;;;AAwBPyF,mBAAmB,CAACE,WAApB,GAAkC,4CAAlC","sourcesContent":["import React from 'react';\nimport { StyleSheet, useWindowDimensions, View, ViewStyle } from 'react-native';\nimport { TapGestureHandler, TapGestureHandlerStateChangeEvent } from 'react-native-gesture-handler';\nimport Animated, {\n  cancelAnimation,\n  interpolate,\n  runOnJS,\n  useAnimatedGestureHandler,\n  useAnimatedProps,\n  useAnimatedReaction,\n  useAnimatedStyle,\n  useSharedValue,\n  withDelay,\n  withSequence,\n  withTiming,\n} from 'react-native-reanimated';\nimport Svg, { Circle, CircleProps, FillProps } from 'react-native-svg';\n\nimport {\n  MessageOverlayData,\n  useMessageOverlayContext,\n} from '../../contexts/messageOverlayContext/MessageOverlayContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../contexts/messagesContext/MessagesContext';\nimport {\n  OverlayContextValue,\n  useOverlayContext,\n} from '../../contexts/overlayContext/OverlayContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport {\n  IconProps,\n  LOLReaction,\n  LoveReaction,\n  ThumbsDownReaction,\n  ThumbsUpReaction,\n  WutReaction,\n} from '../../icons';\n\nimport { triggerHaptic } from '../../native';\n\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../types/types';\nimport type { ReactionData } from '../../utils/utils';\n\nconst AnimatedCircle = Animated.createAnimatedComponent\n  ? Animated.createAnimatedComponent(Circle)\n  : Circle;\n\nconst styles = StyleSheet.create({\n  notLastReaction: {\n    marginRight: 16,\n  },\n  reactionList: {\n    alignItems: 'center',\n    borderRadius: 24,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    position: 'absolute',\n  },\n  selectedIcon: {\n    position: 'absolute',\n  },\n});\n\nconst reactionData: ReactionData[] = [\n  {\n    Icon: LoveReaction,\n    type: 'love',\n  },\n  {\n    Icon: ThumbsUpReaction,\n    type: 'like',\n  },\n  {\n    Icon: ThumbsDownReaction,\n    type: 'sad',\n  },\n  {\n    Icon: LOLReaction,\n    type: 'haha',\n  },\n  {\n    Icon: WutReaction,\n    type: 'wow',\n  },\n];\n\ntype ReactionButtonProps<\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends DefaultUserType = DefaultUserType,\n> = Pick<\n  OverlayReactionListPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n  'ownReactionTypes' | 'handleReaction' | 'setOverlay'\n> & {\n  Icon: React.FC<IconProps>;\n  index: number;\n  numberOfReactions: number;\n  showScreen: Animated.SharedValue<number>;\n  type: string;\n};\n\nexport const ReactionButton = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends DefaultUserType = DefaultUserType,\n>(\n  props: ReactionButtonProps<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const {\n    handleReaction,\n    Icon,\n    index,\n    numberOfReactions,\n    ownReactionTypes,\n    setOverlay,\n    showScreen,\n    type,\n  } = props;\n  const {\n    theme: {\n      colors: { accent_blue, grey },\n      overlay: {\n        reactionsList: { reaction, reactionSize },\n      },\n    },\n  } = useTheme();\n  const selected = ownReactionTypes.includes(type);\n  const animationScale = useSharedValue(0);\n  const hasShown = useSharedValue(0);\n  const scale = useSharedValue(1);\n  const selectedOpacity = useSharedValue(selected ? 1 : 0);\n\n  const onTap = useAnimatedGestureHandler<TapGestureHandlerStateChangeEvent>(\n    {\n      onEnd: () => {\n        runOnJS(triggerHaptic)('impactLight');\n        selectedOpacity.value = withTiming(selected ? 0 : 1, { duration: 250 }, () => {\n          if (handleReaction) {\n            runOnJS(handleReaction)(type);\n          }\n          runOnJS(setOverlay)('none');\n        });\n      },\n      onFinish: () => {\n        cancelAnimation(scale);\n        scale.value = withTiming(1, { duration: 100 });\n      },\n      onStart: () => {\n        cancelAnimation(scale);\n        scale.value = withTiming(1.5, { duration: 100 });\n      },\n    },\n    [handleReaction, selected, setOverlay, type],\n  );\n\n  useAnimatedReaction(\n    () => {\n      if (showScreen.value > 0.8 && hasShown.value === 0) {\n        return 1;\n      }\n      return 0;\n    },\n    (result) => {\n      if (hasShown.value === 0 && result !== 0) {\n        hasShown.value = 1;\n        animationScale.value = withSequence(\n          withDelay(60 * (numberOfReactions - (index + 1)), withTiming(0.1, { duration: 50 })),\n          withTiming(1.5, { duration: 250 }),\n          withTiming(1, { duration: 250 }),\n        );\n      }\n    },\n    [index, numberOfReactions],\n  );\n\n  const iconStyle = useAnimatedStyle<ViewStyle>(\n    () => ({\n      transform: [\n        {\n          scale: animationScale.value,\n        },\n        {\n          scale: scale.value,\n        },\n      ],\n    }),\n    [],\n  );\n\n  const selectedStyle = useAnimatedStyle<ViewStyle>(() => ({\n    opacity: selectedOpacity.value,\n  }));\n\n  return (\n    <TapGestureHandler\n      hitSlop={{\n        bottom:\n          Number(reaction.paddingVertical || 0) ||\n          Number(reaction.paddingBottom || 0) ||\n          styles.reactionList.paddingVertical,\n        left:\n          (Number(reaction.paddingHorizontal || 0) ||\n            Number(reaction.paddingLeft || 0) ||\n            styles.notLastReaction.marginRight) / 2,\n        right:\n          (Number(reaction.paddingHorizontal || 0) ||\n            Number(reaction.paddingRight || 0) ||\n            styles.notLastReaction.marginRight) / 2,\n        top:\n          Number(reaction.paddingVertical || 0) ||\n          Number(reaction.paddingTop || 0) ||\n          styles.reactionList.paddingVertical,\n      }}\n      maxDurationMs={3000}\n      onHandlerStateChange={onTap}\n    >\n      <Animated.View\n        style={[index !== numberOfReactions - 1 ? styles.notLastReaction : {}, reaction, iconStyle]}\n      >\n        <Icon height={reactionSize} pathFill={grey} width={reactionSize} />\n        <Animated.View style={[styles.selectedIcon, selectedStyle]}>\n          <Icon height={reactionSize} pathFill={accent_blue} width={reactionSize} />\n        </Animated.View>\n      </Animated.View>\n    </TapGestureHandler>\n  );\n};\n\nexport type OverlayReactionListPropsWithContext<\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends DefaultUserType = DefaultUserType,\n> = Pick<\n  MessageOverlayData<At, Ch, Co, Ev, Me, Re, Us>,\n  'alignment' | 'handleReaction' | 'messagesContext'\n> &\n  Pick<MessagesContextValue<At, Ch, Co, Ev, Me, Re, Us>, 'supportedReactions'> &\n  Pick<OverlayContextValue, 'setOverlay'> & {\n    messageLayout: Animated.SharedValue<{\n      x: number;\n      y: number;\n    }>;\n    ownReactionTypes: string[];\n    setReactionListHeight: React.Dispatch<React.SetStateAction<number>>;\n    showScreen: Animated.SharedValue<number>;\n    fill?: FillProps['fill'];\n  };\n\nconst OverlayReactionListWithContext = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends DefaultUserType = DefaultUserType,\n>(\n  props: OverlayReactionListPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const {\n    alignment,\n    fill,\n    handleReaction,\n    messageLayout,\n    ownReactionTypes,\n    setReactionListHeight,\n    showScreen,\n    setOverlay,\n    supportedReactions = reactionData,\n  } = props;\n\n  const {\n    theme: {\n      colors: { white_snow },\n      overlay: {\n        padding: screenPadding,\n        reactionsList: { radius, reactionList },\n      },\n    },\n  } = useTheme();\n\n  const reactionListHeight = useSharedValue(0);\n  const reactionBubbleWidth = useSharedValue(0);\n  const reactionListLayout = useSharedValue({\n    height: 0,\n    width: 0,\n  });\n\n  const { width } = useWindowDimensions();\n\n  const animatedStyle = useAnimatedStyle<ViewStyle>(() => {\n    const borderRadius = reactionList.borderRadius || styles.reactionList.borderRadius;\n    const insideLeftBound =\n      messageLayout.value.x - reactionListLayout.value.width + borderRadius > screenPadding;\n    const insideRightBound = messageLayout.value.x + borderRadius < width - screenPadding;\n    const left = !insideLeftBound\n      ? screenPadding\n      : !insideRightBound\n      ? width - screenPadding - reactionListLayout.value.width\n      : messageLayout.value.x - reactionListLayout.value.width + borderRadius;\n    const top = messageLayout.value.y - reactionListLayout.value.height - radius * 2;\n\n    return {\n      left,\n      top,\n    };\n  });\n\n  const animatedBigCircleProps = useAnimatedProps<CircleProps>(() => ({\n    cx: messageLayout.value.x - radius * 3,\n    cy: messageLayout.value.y - radius * 3,\n    fill: fill || white_snow,\n    r: radius * 2,\n  }));\n\n  const animateSmallCircleProps = useAnimatedProps<CircleProps>(() => ({\n    cx: messageLayout.value.x - radius,\n    cy: messageLayout.value.y,\n    fill: fill || white_snow,\n    r: radius,\n  }));\n\n  const showScreenStyle = useAnimatedStyle<ViewStyle>(\n    () => ({\n      transform: [\n        {\n          translateY: interpolate(showScreen.value, [0, 1], [-reactionListHeight.value / 2, 0]),\n        },\n        {\n          translateX: interpolate(\n            showScreen.value,\n            [0, 1],\n            [\n              alignment === 'left' ? -reactionBubbleWidth.value / 2 : reactionBubbleWidth.value / 2,\n              0,\n            ],\n          ),\n        },\n        {\n          scale: interpolate(showScreen.value, [0, 0.8, 1], [0, 0, 1]),\n        },\n      ],\n    }),\n    [alignment],\n  );\n\n  const numberOfReactions = supportedReactions.length;\n\n  return (\n    <View style={StyleSheet.absoluteFill}>\n      <Animated.View\n        onLayout={({ nativeEvent: { layout } }) => {\n          reactionBubbleWidth.value = layout.width;\n        }}\n        style={showScreenStyle}\n      >\n        <Svg>\n          <AnimatedCircle animatedProps={animatedBigCircleProps} />\n          <AnimatedCircle animatedProps={animateSmallCircleProps} />\n        </Svg>\n        <Animated.View\n          onLayout={({\n            nativeEvent: {\n              layout: { height, width: layoutWidth },\n            },\n          }) => {\n            reactionListLayout.value = { height, width: layoutWidth };\n            reactionListHeight.value = height;\n            setReactionListHeight(height);\n          }}\n          style={[\n            styles.reactionList,\n            { backgroundColor: white_snow },\n            animatedStyle,\n            reactionList,\n          ]}\n        >\n          {supportedReactions?.map(({ Icon, type }, index) => (\n            <ReactionButton<At, Ch, Co, Ev, Me, Re, Us>\n              handleReaction={handleReaction}\n              Icon={Icon}\n              index={index}\n              key={`${type}_${index}`}\n              numberOfReactions={numberOfReactions}\n              ownReactionTypes={ownReactionTypes}\n              setOverlay={setOverlay}\n              showScreen={showScreen}\n              type={type}\n            />\n          ))}\n        </Animated.View>\n      </Animated.View>\n    </View>\n  );\n};\n\nconst areEqual = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  prevProps: OverlayReactionListPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n  nextProps: OverlayReactionListPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const { alignment: prevAlignment, ownReactionTypes: prevOwnReactionTypes } = prevProps;\n  const { alignment: nextAlignment, ownReactionTypes: nextOwnReactionTypes } = nextProps;\n\n  const alignmentEqual = prevAlignment === nextAlignment;\n  if (!alignmentEqual) return false;\n\n  const ownReactionTypesEqual = prevOwnReactionTypes.length === nextOwnReactionTypes.length;\n  if (!ownReactionTypesEqual) return false;\n\n  return true;\n};\n\nconst MemoizedOverlayReactionList = React.memo(\n  OverlayReactionListWithContext,\n  areEqual,\n) as typeof OverlayReactionListWithContext;\n\nexport type OverlayReactionListProps<\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends DefaultUserType = DefaultUserType,\n> = Omit<\n  OverlayReactionListPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n  'setOverlay' | 'supportedReactions'\n> &\n  Partial<\n    Pick<\n      OverlayReactionListPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n      'setOverlay' | 'supportedReactions'\n    >\n  >;\n\n/**\n * OverlayReactionList - A high level component which implements all the logic required for a message overlay reaction list\n */\nexport const OverlayReactionList = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends DefaultUserType = DefaultUserType,\n>(\n  props: OverlayReactionListProps<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const { data } = useMessageOverlayContext<At, Ch, Co, Ev, Me, Re, Us>();\n  const { supportedReactions } = useMessagesContext<At, Ch, Co, Ev, Me, Re, Us>();\n  const { setOverlay } = useOverlayContext();\n\n  return (\n    <MemoizedOverlayReactionList\n      {...(data || {})}\n      {...{ setOverlay, supportedReactions }}\n      {...props}\n    />\n  );\n};\n\nOverlayReactionList.displayName = 'OverlayReactionList{overlay{reactionList}}';\n"]}