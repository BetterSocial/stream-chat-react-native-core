{"version":3,"sources":["useCreateInputMessageInputContext.ts"],"names":["useCreateInputMessageInputContext","additionalTextInputProps","AttachButton","autoCompleteSuggestionsLimit","autoCompleteTriggerSettings","channelId","clearEditingState","clearQuotedMessageState","CommandsButton","compressImageQuality","doDocUploadRequest","doImageUploadRequest","editing","editMessage","FileUploadPreview","hasCommands","hasFilePicker","hasImagePicker","ImageUploadPreview","initialValue","Input","InputButtons","maxMessageLength","maxNumberOfFiles","mentionAllAppUsersEnabled","mentionAllAppUsersQuery","MoreOptionsButton","numberOfLines","onChangeText","quotedMessage","SendButton","sendImageAsync","sendMessage","setInputRef","setQuotedMessageState","ShowThreadMessageInChannelButton","UploadProgressIndicator","uploadsEnabled","editingExists","quotedMessageId","id","inputMessageInputContext"],"mappings":"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","sourcesContent":["import { useMemo } from 'react';\n\nimport type { InputMessageInputContextValue } from '../../../contexts/messageInputContext/MessageInputContext';\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../../types/types';\n\nexport const useCreateInputMessageInputContext = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>({\n  additionalTextInputProps,\n  AttachButton,\n  autoCompleteSuggestionsLimit,\n  autoCompleteTriggerSettings,\n  channelId,\n  clearEditingState,\n  clearQuotedMessageState,\n  CommandsButton,\n  compressImageQuality,\n  doDocUploadRequest,\n  doImageUploadRequest,\n  editing,\n  editMessage,\n  FileUploadPreview,\n  hasCommands,\n  hasFilePicker,\n  hasImagePicker,\n  ImageUploadPreview,\n  initialValue,\n  Input,\n  InputButtons,\n  maxMessageLength,\n  maxNumberOfFiles,\n  mentionAllAppUsersEnabled,\n  mentionAllAppUsersQuery,\n  MoreOptionsButton,\n  numberOfLines,\n  onChangeText,\n  quotedMessage,\n  SendButton,\n  sendImageAsync,\n  sendMessage,\n  setInputRef,\n  setQuotedMessageState,\n  ShowThreadMessageInChannelButton,\n  UploadProgressIndicator,\n  uploadsEnabled,\n}: InputMessageInputContextValue<At, Ch, Co, Ev, Me, Re, Us> & {\n  /**\n   * To ensure we allow re-render, when channel is changed\n   */\n  channelId?: string;\n}) => {\n  const editingExists = !!editing;\n  const quotedMessageId = quotedMessage\n    ? typeof quotedMessage === 'boolean'\n      ? ''\n      : quotedMessage.id\n    : '';\n\n  const inputMessageInputContext: InputMessageInputContextValue<At, Ch, Co, Ev, Me, Re, Us> =\n    useMemo(\n      () => ({\n        additionalTextInputProps,\n        AttachButton,\n        autoCompleteSuggestionsLimit,\n        autoCompleteTriggerSettings,\n        clearEditingState,\n        clearQuotedMessageState,\n        CommandsButton,\n        compressImageQuality,\n        doDocUploadRequest,\n        doImageUploadRequest,\n        editing,\n        editMessage,\n        FileUploadPreview,\n        hasCommands,\n        hasFilePicker,\n        hasImagePicker,\n        ImageUploadPreview,\n        initialValue,\n        Input,\n        InputButtons,\n        maxMessageLength,\n        maxNumberOfFiles,\n        mentionAllAppUsersEnabled,\n        mentionAllAppUsersQuery,\n        MoreOptionsButton,\n        numberOfLines,\n        onChangeText,\n        quotedMessage,\n        SendButton,\n        sendImageAsync,\n        sendMessage,\n        setInputRef,\n        setQuotedMessageState,\n        ShowThreadMessageInChannelButton,\n        UploadProgressIndicator,\n        uploadsEnabled,\n      }),\n      [\n        compressImageQuality,\n        channelId,\n        editingExists,\n        initialValue,\n        maxMessageLength,\n        quotedMessageId,\n        uploadsEnabled,\n      ],\n    );\n\n  return inputMessageInputContext;\n};\n"]}