{"version":3,"sources":["renderText.tsx"],"names":["defaultMarkdownStyles","inlineCode","fontSize","padding","paddingHorizontal","list","marginBottom","marginTop","listItemNumber","fontWeight","listItemText","flex","listRow","flexDirection","mentions","paragraph","paragraphCenter","paragraphWithImage","parse","capture","state","content","renderText","params","colors","markdownRules","markdownStyles","message","messageOverlay","onLinkParams","onLink","onLongPressParam","onLongPress","onlyEmojis","onPressParam","onPress","preventPress","mentioned_users","text","newText","trim","urls","urlInfo","displayLink","encoded","replace","length","omission","markdown","protocol","raw","styles","autolink","color","accent_blue","backgroundColor","white_smoke","borderColor","grey_gainsboro","accent_red","black","url","Linking","canOpenURL","then","canOpenUrl","openURL","react","node","output","event","defaultHandler","target","emitter","key","withinLink","mentionedUsers","Array","isArray","reduce","acc","cur","userName","name","id","regEx","RegExp","match","source","exec","mentionsReact","listLevels","sub","top","customListAtLevel","level","items","map","item","index","withinList","type","isTopLevelText","includes","ordered","start","isSublist","sublist","customRules","link","reflink","order","defaultRules","JSON","stringify","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { GestureResponderEvent, Linking, Text, View } from 'react-native';\nimport anchorme from 'anchorme';\nimport truncate from 'lodash/truncate';\n// @ts-expect-error\nimport Markdown from 'react-native-markdown-package';\nimport {\n  DefaultRules,\n  defaultRules,\n  MatchFunction,\n  ParseFunction,\n  parseInline,\n  ReactNodeOutput,\n  SingleASTNode,\n} from 'simple-markdown';\n\nimport type { MessageType } from '../../../MessageList/hooks/useMessageList';\n\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../../../types/types';\nimport type { MessageContextValue } from '../../../../contexts/messageContext/MessageContext';\nimport type { Colors, MarkdownStyle } from '../../../../contexts/themeContext/utils/theme';\n\nconst defaultMarkdownStyles: MarkdownStyle = {\n  inlineCode: {\n    fontSize: 13,\n    padding: 3,\n    paddingHorizontal: 5,\n  },\n  list: {\n    marginBottom: 8,\n    marginTop: 8,\n  },\n  listItemNumber: {\n    fontWeight: 'bold',\n  },\n  listItemText: {\n    flex: 0,\n  },\n  listRow: {\n    flexDirection: 'row',\n  },\n  mentions: {\n    fontWeight: '700',\n  },\n  // unfortunately marginVertical doesn't override the defaults for these within the 3rd party lib\n  paragraph: {\n    marginBottom: 8,\n    marginTop: 8,\n  },\n  paragraphCenter: {\n    marginBottom: 8,\n    marginTop: 8,\n  },\n  paragraphWithImage: {\n    marginBottom: 8,\n    marginTop: 8,\n  },\n};\n\nconst parse: ParseFunction = (capture, parse, state) => ({\n  content: parseInline(parse, capture[0], state),\n});\n\nexport type MarkdownRules = Partial<DefaultRules>;\n\nexport type RenderTextParams<\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n> = Partial<\n  Pick<MessageContextValue<At, Ch, Co, Ev, Me, Re, Us>, 'onLongPress' | 'onPress' | 'preventPress'>\n> & {\n  colors: typeof Colors;\n  message: MessageType<At, Ch, Co, Ev, Me, Re, Us>;\n  markdownRules?: MarkdownRules;\n  markdownStyles?: MarkdownStyle;\n  messageOverlay?: boolean;\n  onLink?: (url: string) => Promise<void>;\n  onlyEmojis?: boolean;\n};\n\nexport const renderText = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  params: RenderTextParams<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const {\n    colors,\n    markdownRules,\n    markdownStyles,\n    message,\n    messageOverlay,\n    onLink: onLinkParams,\n    onLongPress: onLongPressParam,\n    onlyEmojis,\n    onPress: onPressParam,\n    preventPress,\n  } = params;\n\n  // take the @ mentions and turn them into markdown?\n  // translate links\n  const { mentioned_users, text } = message;\n\n  if (!text) return null;\n\n  let newText = text.trim();\n  const urls = anchorme(newText, {\n    list: true,\n  });\n\n  for (const urlInfo of urls) {\n    const displayLink = truncate(urlInfo.encoded.replace(/^(www\\.)/, ''), {\n      length: 200,\n      omission: '...',\n    });\n    const markdown = `[${displayLink}](${urlInfo.protocol}${urlInfo.encoded})`;\n    newText = newText.replace(urlInfo.raw, markdown);\n  }\n\n  newText = newText.replace(/[<&\"'>]/g, '\\\\$&');\n  const styles: MarkdownStyle = {\n    ...defaultMarkdownStyles,\n    ...markdownStyles,\n    autolink: {\n      ...defaultMarkdownStyles.autolink,\n      color: colors.accent_blue,\n      ...markdownStyles?.autolink,\n    },\n    inlineCode: {\n      ...defaultMarkdownStyles.inlineCode,\n      backgroundColor: colors.white_smoke,\n      borderColor: colors.grey_gainsboro,\n      color: colors.accent_red,\n      ...markdownStyles?.inlineCode,\n    },\n    mentions: {\n      ...defaultMarkdownStyles.mentions,\n      color: colors.accent_blue,\n      ...markdownStyles?.mentions,\n    },\n    text: {\n      ...defaultMarkdownStyles.text,\n      color: colors.black,\n      ...markdownStyles?.text,\n    },\n  };\n\n  const onLink = (url: string) =>\n    onLinkParams\n      ? onLinkParams(url)\n      : Linking.canOpenURL(url).then((canOpenUrl) => canOpenUrl && Linking.openURL(url));\n\n  const react: ReactNodeOutput = (node, output, { ...state }) => {\n    const onPress = (event: GestureResponderEvent) => {\n      if (!preventPress && onPressParam) {\n        onPressParam({\n          defaultHandler: () => onLink(node.target),\n          emitter: 'textLink',\n          event,\n        });\n      }\n    };\n\n    const onLongPress = (event: GestureResponderEvent) => {\n      if (!preventPress && onLongPressParam) {\n        onLongPressParam({\n          emitter: 'textLink',\n          event,\n        });\n      }\n    };\n\n    return (\n      <Text\n        key={state.key}\n        onLongPress={onLongPress}\n        onPress={onPress}\n        style={styles.autolink}\n        suppressHighlighting={true}\n      >\n        {output(node.content, { ...state, withinLink: true })}\n      </Text>\n    );\n  };\n\n  const mentionedUsers = Array.isArray(mentioned_users)\n    ? mentioned_users.reduce((acc, cur) => {\n        const userName = cur.name || cur.id || '';\n        if (userName) {\n          acc += `${acc.length ? '|' : ''}@${userName}`;\n        }\n        return acc;\n      }, '')\n    : '';\n\n  const regEx = new RegExp(`^\\\\B(${mentionedUsers})`, 'g');\n  const match: MatchFunction = (source) => regEx.exec(source);\n\n  const mentionsReact: ReactNodeOutput = (node, output, { ...state }) => {\n    const onPress = (event: GestureResponderEvent) => {\n      if (!preventPress && onPressParam) {\n        onPressParam({\n          emitter: 'textMention',\n          event,\n        });\n      }\n    };\n\n    const onLongPress = (event: GestureResponderEvent) => {\n      if (!preventPress && onLongPressParam) {\n        onLongPressParam({\n          emitter: 'textMention',\n          event,\n        });\n      }\n    };\n\n    return (\n      <Text key={state.key} onLongPress={onLongPress} onPress={onPress} style={styles.mentions}>\n        {Array.isArray(node.content) ? node.content[0].content || '' : output(node.content, state)}\n      </Text>\n    );\n  };\n\n  const listLevels = {\n    sub: 'sub',\n    top: 'top',\n  };\n\n  /**\n   * For lists and sublists, the default behavior of the markdown library we use is\n   * to always renumber any list, so all ordered lists start from 1.\n   *\n   * This custom rule overrides this behavior both for top level lists and sublists,\n   * in order to start the numbering from the number of the first list item provided.\n   * */\n  const customListAtLevel =\n    (level: keyof typeof listLevels): ReactNodeOutput =>\n    (node, output, { ...state }) => {\n      const items = node.items.map((item: Array<SingleASTNode>, index: number) => {\n        const withinList = item.length > 1 && item[1].type === 'list';\n        const content = output(item, { ...state, withinList });\n\n        const isTopLevelText =\n          ['text', 'paragraph', 'strong'].includes(item[0].type) && withinList === false;\n\n        return (\n          <View key={index} style={styles.listRow}>\n            <Text style={styles.listItemNumber}>\n              {node.ordered ? `${node.start + index}. ` : `\\u2022`}\n            </Text>\n            <Text style={[styles.listItemText, isTopLevelText && { marginBottom: 0 }]}>\n              {content}\n            </Text>\n          </View>\n        );\n      });\n\n      const isSublist = level === 'sub';\n      return (\n        <View key={state.key} style={[isSublist ? styles.list : styles.sublist]}>\n          {items}\n        </View>\n      );\n    };\n\n  const customRules = {\n    link: { react },\n    list: { react: customListAtLevel('top') },\n    // we have no react rendering support for reflinks\n    reflink: { match: () => null },\n    sublist: { react: customListAtLevel('sub') },\n    ...(mentionedUsers\n      ? {\n          mentions: {\n            match,\n            order: defaultRules.text.order - 0.5,\n            parse,\n            react: mentionsReact,\n          },\n        }\n      : {}),\n  };\n\n  return (\n    <Markdown\n      key={`${JSON.stringify(mentioned_users)}-${onlyEmojis}-${\n        messageOverlay ? JSON.stringify(markdownStyles) : undefined\n      }-${JSON.stringify(colors)}`}\n      onLink={onLink}\n      rules={{\n        ...customRules,\n        ...markdownRules,\n      }}\n      styles={styles}\n    >\n      {newText}\n    </Markdown>\n  );\n};\n"]}