{"version":3,"sources":["MessageContent.tsx"],"names":["styles","StyleSheet","create","containerInner","borderTopLeftRadius","borderTopRightRadius","borderWidth","overflow","leftAlignContent","justifyContent","leftAlignItems","alignItems","replyBorder","borderLeftWidth","bottom","position","replyContainer","flexDirection","paddingHorizontal","paddingTop","rightAlignContent","rightAlignItems","MessageContentWithContext","props","additionalTouchableProps","alignment","Attachment","disabled","FileAttachmentGroup","formatDate","Gallery","groupStyles","hasReactions","isMyMessage","lastGroupMessage","members","message","messageContentOrder","MessageDeleted","MessageFooter","MessageHeader","MessageReplies","MessageStatus","onLongPress","onlyEmojis","onPress","onPressIn","otherAttachments","preventPress","quotedRepliesEnabled","Reply","setMessageContentWidth","showMessageStatus","tDateTimeParser","threadList","threadRepliesEnabled","theme","colors","accent_red","blue_alice","grey_gainsboro","grey_whisper","transparent","messageSimple","content","container","borderRadiusL","borderRadiusS","errorContainer","errorIcon","errorIconContainer","wrapper","reactionList","radius","reactionSize","getDateText","formatter","created_at","parserOutput","format","onLayout","width","nativeEvent","layout","error","type","status","groupStyle","toLowerCase","hasThreadReplies","reply_count","noBorder","quoted_message","length","deleted_at","backgroundColor","repliesCurveColor","event","emitter","borderColor","height","left","undefined","right","borderBottomLeftRadius","borderBottomRightRadius","map","messageContentType","messageContentOrderIndex","messageContainer","maxWidth","attachment","attachmentIndex","id","actions","absoluteFill","areEqual","prevProps","nextProps","prevGoToMessage","goToMessage","prevGroupStyles","prevHasReactions","prevLastGroupMessage","prevMembers","prevMessage","prevMessageContentOrder","prevOnlyEmojis","prevOtherAttachments","prevT","t","prevTDateTimeParser","nextGoToMessage","nextGroupStyles","nextHasReactions","nextLastGroupMessage","nextMembers","nextMessage","nextMessageContentOrder","nextOnlyEmojis","nextOtherAttachments","nextT","nextTDateTimeParser","hasReactionsEqual","lastGroupMessageEqual","goToMessageChangedAndMatters","quoted_message_id","onlyEmojisEqual","otherAttachmentsEqual","membersEqual","Object","keys","groupStylesEqual","messageEqual","text","quotedMessageEqual","prevAttachments","attachments","nextAttachments","attachmentsEqual","Array","isArray","every","index","image_url","og_scrape_url","thumb_url","latestReactionsEqual","latest_reactions","messageContentOrderEqual","tEqual","tDateTimeParserEqual","MemoizedMessageContent","React","memo","MessageContent","lastReceivedId","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { LayoutChangeEvent, StyleSheet, TouchableOpacity, View } from 'react-native';\n\nimport { MessageTextContainer } from './MessageTextContainer';\n\nimport {\n  MessageContextValue,\n  useMessageContext,\n} from '../../../contexts/messageContext/MessageContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../../contexts/messagesContext/MessagesContext';\nimport { useTheme } from '../../../contexts/themeContext/ThemeContext';\nimport {\n  isDayOrMoment,\n  TDateTimeParserInput,\n  TranslationContextValue,\n  useTranslationContext,\n} from '../../../contexts/translationContext/TranslationContext';\n\nimport { Error } from '../../../icons';\nimport { vw } from '../../../utils/utils';\n\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../../types/types';\n\nconst styles = StyleSheet.create({\n  containerInner: {\n    borderTopLeftRadius: 16,\n    borderTopRightRadius: 16,\n    borderWidth: 1,\n    overflow: 'hidden',\n  },\n  leftAlignContent: {\n    justifyContent: 'flex-start',\n  },\n  leftAlignItems: {\n    alignItems: 'flex-start',\n  },\n  replyBorder: {\n    borderLeftWidth: 1,\n    bottom: 0,\n    position: 'absolute',\n  },\n  replyContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 8,\n    paddingTop: 8,\n  },\n  rightAlignContent: {\n    justifyContent: 'flex-end',\n  },\n  rightAlignItems: {\n    alignItems: 'flex-end',\n  },\n});\n\nexport type MessageContentPropsWithContext<\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n> = Pick<\n  MessageContextValue<At, Ch, Co, Ev, Me, Re, Us>,\n  | 'alignment'\n  | 'disabled'\n  | 'goToMessage'\n  | 'groupStyles'\n  | 'hasReactions'\n  | 'isMyMessage'\n  | 'lastGroupMessage'\n  | 'members'\n  | 'message'\n  | 'messageContentOrder'\n  | 'onLongPress'\n  | 'onlyEmojis'\n  | 'onPress'\n  | 'onPressIn'\n  | 'otherAttachments'\n  | 'preventPress'\n  | 'showMessageStatus'\n  | 'threadList'\n> &\n  Pick<\n    MessagesContextValue<At, Ch, Co, Ev, Me, Re, Us>,\n    | 'additionalTouchableProps'\n    | 'Attachment'\n    | 'FileAttachmentGroup'\n    | 'formatDate'\n    | 'Gallery'\n    | 'MessageFooter'\n    | 'MessageHeader'\n    | 'MessageDeleted'\n    | 'MessageReplies'\n    | 'MessageStatus'\n    | 'onPressInMessage'\n    | 'quotedRepliesEnabled'\n    | 'Reply'\n    | 'threadRepliesEnabled'\n  > &\n  Pick<TranslationContextValue, 't' | 'tDateTimeParser'> & {\n    setMessageContentWidth: React.Dispatch<React.SetStateAction<number>>;\n  };\n\n/**\n * Child of MessageSimple that displays a message's content\n */\nconst MessageContentWithContext = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  props: MessageContentPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const {\n    additionalTouchableProps,\n    alignment,\n    Attachment,\n    disabled,\n    FileAttachmentGroup,\n    formatDate,\n    Gallery,\n    groupStyles,\n    hasReactions,\n    isMyMessage,\n    lastGroupMessage,\n    members,\n    message,\n    messageContentOrder,\n    MessageDeleted,\n    MessageFooter,\n    MessageHeader,\n    MessageReplies,\n    MessageStatus,\n    onLongPress,\n    onlyEmojis,\n    onPress,\n    onPressIn,\n    otherAttachments,\n    preventPress,\n    quotedRepliesEnabled,\n    Reply,\n    setMessageContentWidth,\n    showMessageStatus,\n    tDateTimeParser,\n    threadList,\n    threadRepliesEnabled,\n  } = props;\n\n  const {\n    theme: {\n      colors: { accent_red, blue_alice, grey_gainsboro, grey_whisper, transparent },\n      messageSimple: {\n        content: {\n          container: { borderRadiusL, borderRadiusS, ...container },\n          containerInner,\n          errorContainer,\n          errorIcon,\n          errorIconContainer,\n          replyBorder,\n          replyContainer,\n          wrapper,\n        },\n        reactionList: { radius, reactionSize },\n      },\n    },\n  } = useTheme();\n\n  const getDateText = (formatter?: (date: TDateTimeParserInput) => string) => {\n    if (!message.created_at) return '';\n\n    if (formatter) {\n      return formatter(message.created_at);\n    }\n\n    const parserOutput = tDateTimeParser(message.created_at);\n\n    if (isDayOrMoment(parserOutput)) {\n      return parserOutput.format('LT');\n    }\n    return message.created_at;\n  };\n\n  const onLayout: (event: LayoutChangeEvent) => void = ({\n    nativeEvent: {\n      layout: { width },\n    },\n  }) => {\n    setMessageContentWidth(width);\n  };\n\n  const error = message.type === 'error' || message.status === 'failed';\n\n  const groupStyle = `${alignment}_${groupStyles?.[0]?.toLowerCase?.()}`;\n\n  const hasThreadReplies = !!message?.reply_count;\n\n  const noBorder = (onlyEmojis && !message.quoted_message) || !!otherAttachments.length;\n\n  if (message.deleted_at) {\n    return (\n      <MessageDeleted\n        formattedDate={getDateText(formatDate)}\n        groupStyle={groupStyle}\n        noBorder={noBorder}\n        onLayout={onLayout}\n      />\n    );\n  }\n\n  const backgroundColor =\n    onlyEmojis && !message.quoted_message\n      ? transparent\n      : otherAttachments.length\n      ? otherAttachments[0].type === 'giphy'\n        ? !message.quoted_message\n          ? transparent\n          : grey_gainsboro\n        : blue_alice\n      : alignment === 'left' || error\n      ? transparent\n      : grey_gainsboro;\n\n  const repliesCurveColor = isMyMessage && !error ? backgroundColor : grey_whisper;\n\n  return (\n    <TouchableOpacity\n      activeOpacity={0.7}\n      disabled={disabled || preventPress}\n      onLongPress={(event) => {\n        if (onLongPress) {\n          onLongPress({\n            emitter: 'messageContent',\n            event,\n          });\n        }\n      }}\n      onPress={(event) => {\n        if (onPress) {\n          onPress({\n            emitter: 'messageContent',\n            event,\n          });\n        }\n      }}\n      onPressIn={(event) => {\n        if (onPressIn) {\n          onPressIn({\n            emitter: 'messageContent',\n            event,\n          });\n        }\n      }}\n      {...additionalTouchableProps}\n      /**\n       * Border radii are useful for the case of error message types only.\n       * Otherwise background is transparent, so border radius is not really visible.\n       */\n      style={[\n        alignment === 'left' ? styles.leftAlignItems : styles.rightAlignItems,\n        { paddingTop: hasReactions ? reactionSize / 2 + radius : 2 },\n        error ? errorContainer : {},\n        container,\n      ]}\n    >\n      {MessageHeader && (\n        <MessageHeader\n          alignment={alignment}\n          formattedDate={getDateText(formatDate)}\n          isDeleted={!!message.deleted_at}\n          lastGroupMessage={lastGroupMessage}\n          members={members}\n          message={message}\n          MessageStatus={MessageStatus}\n          otherAttachments={otherAttachments}\n          showMessageStatus={showMessageStatus}\n        />\n      )}\n      <View onLayout={onLayout} style={wrapper}>\n        {hasThreadReplies && !threadList && threadRepliesEnabled && !noBorder && (\n          <View\n            style={[\n              styles.replyBorder,\n              {\n                borderColor: repliesCurveColor,\n                height: borderRadiusL,\n                left: alignment === 'left' ? 0 : undefined,\n                right: alignment === 'right' ? 0 : undefined,\n              },\n              replyBorder,\n            ]}\n          />\n        )}\n        <View\n          style={[\n            styles.containerInner,\n            {\n              backgroundColor,\n              borderBottomLeftRadius:\n                (groupStyle === 'left_bottom' || groupStyle === 'left_single') &&\n                (!hasThreadReplies || threadList)\n                  ? borderRadiusS\n                  : borderRadiusL,\n              borderBottomRightRadius:\n                (groupStyle === 'right_bottom' || groupStyle === 'right_single') &&\n                (!hasThreadReplies || threadList)\n                  ? borderRadiusS\n                  : borderRadiusL,\n              borderColor: isMyMessage && !error ? backgroundColor : grey_whisper,\n            },\n            noBorder ? { borderWidth: 0 } : {},\n            containerInner,\n          ]}\n          testID='message-content-wrapper'\n        >\n          {messageContentOrder.map((messageContentType, messageContentOrderIndex) => {\n            switch (messageContentType) {\n              case 'quoted_reply':\n                return (\n                  message.quoted_message &&\n                  quotedRepliesEnabled && (\n                    <View\n                      key={`quoted_reply_${messageContentOrderIndex}`}\n                      style={[styles.replyContainer, replyContainer]}\n                    >\n                      <Reply styles={{ messageContainer: { maxWidth: vw(60) } }} />\n                    </View>\n                  )\n                );\n              case 'attachments':\n                return otherAttachments.map((attachment, attachmentIndex) => (\n                  <Attachment attachment={attachment} key={`${message.id}-${attachmentIndex}`} />\n                ));\n              case 'files':\n                return (\n                  <FileAttachmentGroup\n                    key={`file_attachment_group_${messageContentOrderIndex}`}\n                    messageId={message.id}\n                  />\n                );\n              case 'gallery':\n                return <Gallery key={`gallery_${messageContentOrderIndex}`} />;\n              case 'text':\n              default:\n                return otherAttachments.length && otherAttachments[0].actions ? null : (\n                  <MessageTextContainer<At, Ch, Co, Ev, Me, Re, Us>\n                    key={`message_text_container_${messageContentOrderIndex}`}\n                  />\n                );\n            }\n          })}\n        </View>\n        {error && (\n          <View style={StyleSheet.absoluteFill} testID='message-error'>\n            <View style={errorIconContainer}>\n              <Error pathFill={accent_red} {...errorIcon} />\n            </View>\n          </View>\n        )}\n      </View>\n      {threadRepliesEnabled && (\n        <MessageReplies noBorder={noBorder} repliesCurveColor={repliesCurveColor} />\n      )}\n      <MessageFooter formattedDate={getDateText(formatDate)} isDeleted={!!message.deleted_at} />\n    </TouchableOpacity>\n  );\n};\n\nconst areEqual = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  prevProps: MessageContentPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n  nextProps: MessageContentPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const {\n    goToMessage: prevGoToMessage,\n    groupStyles: prevGroupStyles,\n    hasReactions: prevHasReactions,\n    lastGroupMessage: prevLastGroupMessage,\n    members: prevMembers,\n    message: prevMessage,\n    messageContentOrder: prevMessageContentOrder,\n    onlyEmojis: prevOnlyEmojis,\n    otherAttachments: prevOtherAttachments,\n    t: prevT,\n    tDateTimeParser: prevTDateTimeParser,\n  } = prevProps;\n  const {\n    goToMessage: nextGoToMessage,\n    groupStyles: nextGroupStyles,\n    hasReactions: nextHasReactions,\n    lastGroupMessage: nextLastGroupMessage,\n    members: nextMembers,\n    message: nextMessage,\n    messageContentOrder: nextMessageContentOrder,\n    onlyEmojis: nextOnlyEmojis,\n    otherAttachments: nextOtherAttachments,\n    t: nextT,\n    tDateTimeParser: nextTDateTimeParser,\n  } = nextProps;\n\n  const hasReactionsEqual = prevHasReactions === nextHasReactions;\n  if (!hasReactionsEqual) return false;\n\n  const lastGroupMessageEqual = prevLastGroupMessage === nextLastGroupMessage;\n  if (!lastGroupMessageEqual) return false;\n\n  const goToMessageChangedAndMatters =\n    nextMessage.quoted_message_id && prevGoToMessage !== nextGoToMessage;\n\n  if (goToMessageChangedAndMatters) return false;\n\n  const onlyEmojisEqual = prevOnlyEmojis === nextOnlyEmojis;\n  if (!onlyEmojisEqual) return false;\n\n  const otherAttachmentsEqual =\n    prevOtherAttachments.length === nextOtherAttachments.length &&\n    prevOtherAttachments?.[0]?.actions?.length === nextOtherAttachments?.[0]?.actions?.length;\n  if (!otherAttachmentsEqual) return false;\n\n  const membersEqual = Object.keys(prevMembers).length === Object.keys(nextMembers).length;\n  if (!membersEqual) return false;\n\n  const groupStylesEqual =\n    prevGroupStyles.length === nextGroupStyles.length &&\n    prevGroupStyles?.[0] === nextGroupStyles?.[0];\n  if (!groupStylesEqual) return false;\n\n  const messageEqual =\n    prevMessage.deleted_at === nextMessage.deleted_at &&\n    prevMessage.reply_count === nextMessage.reply_count &&\n    prevMessage.status === nextMessage.status &&\n    prevMessage.type === nextMessage.type &&\n    prevMessage.text === nextMessage.text;\n\n  if (!messageEqual) return false;\n\n  const quotedMessageEqual =\n    prevMessage.quoted_message?.id === nextMessage.quoted_message?.id &&\n    prevMessage.quoted_message?.deleted_at === nextMessage.quoted_message?.deleted_at;\n\n  if (!quotedMessageEqual) return false;\n\n  const prevAttachments = prevMessage.attachments;\n  const nextAttachments = nextMessage.attachments;\n  const attachmentsEqual =\n    Array.isArray(prevAttachments) && Array.isArray(nextAttachments)\n      ? prevAttachments.length === nextAttachments.length &&\n        prevAttachments.every(\n          (attachment, index) =>\n            attachment.image_url === nextAttachments[index].image_url &&\n            attachment.og_scrape_url === nextAttachments[index].og_scrape_url &&\n            attachment.thumb_url === nextAttachments[index].thumb_url,\n        )\n      : prevAttachments === nextAttachments;\n  if (!attachmentsEqual) return false;\n\n  const latestReactionsEqual =\n    Array.isArray(prevMessage.latest_reactions) && Array.isArray(nextMessage.latest_reactions)\n      ? prevMessage.latest_reactions.length === nextMessage.latest_reactions.length &&\n        prevMessage.latest_reactions.every(\n          ({ type }, index) => type === nextMessage.latest_reactions?.[index].type,\n        )\n      : prevMessage.latest_reactions === nextMessage.latest_reactions;\n  if (!latestReactionsEqual) return false;\n\n  const messageContentOrderEqual =\n    prevMessageContentOrder.length === nextMessageContentOrder.length &&\n    prevMessageContentOrder.every(\n      (messageContentType, index) => messageContentType === nextMessageContentOrder[index],\n    );\n  if (!messageContentOrderEqual) return false;\n\n  const tEqual = prevT === nextT;\n  if (!tEqual) return false;\n\n  const tDateTimeParserEqual = prevTDateTimeParser === nextTDateTimeParser;\n  if (!tDateTimeParserEqual) return false;\n\n  return true;\n};\n\nconst MemoizedMessageContent = React.memo(\n  MessageContentWithContext,\n  areEqual,\n) as typeof MessageContentWithContext;\n\nexport type MessageContentProps<\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n> = Partial<\n  Omit<MessageContentPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>, 'setMessageContentWidth'>\n> &\n  Pick<MessageContentPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>, 'setMessageContentWidth'>;\n\n/**\n * Child of MessageSimple that displays a message's content\n */\nexport const MessageContent = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  props: MessageContentProps<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const {\n    alignment,\n    disabled,\n    goToMessage,\n    groupStyles,\n    hasReactions,\n    isMyMessage,\n    lastGroupMessage,\n    lastReceivedId,\n    members,\n    message,\n    messageContentOrder,\n    onLongPress,\n    onlyEmojis,\n    onPress,\n    onPressIn,\n    otherAttachments,\n    preventPress,\n    showMessageStatus,\n    threadList,\n  } = useMessageContext<At, Ch, Co, Ev, Me, Re, Us>();\n  const {\n    additionalTouchableProps,\n    Attachment,\n    FileAttachmentGroup,\n    formatDate,\n    Gallery,\n    MessageDeleted,\n    MessageFooter,\n    MessageHeader,\n    MessageReplies,\n    MessageStatus,\n    quotedRepliesEnabled,\n    Reply,\n    threadRepliesEnabled,\n  } = useMessagesContext<At, Ch, Co, Ev, Me, Re, Us>();\n  const { t, tDateTimeParser } = useTranslationContext();\n\n  return (\n    <MemoizedMessageContent<At, Ch, Co, Ev, Me, Re, Us>\n      {...{\n        additionalTouchableProps,\n        alignment,\n        Attachment,\n        disabled,\n        FileAttachmentGroup,\n        formatDate,\n        Gallery,\n        goToMessage,\n        groupStyles,\n        hasReactions,\n        isMyMessage,\n        lastGroupMessage,\n        lastReceivedId,\n        members,\n        message,\n        messageContentOrder,\n        MessageDeleted,\n        MessageFooter,\n        MessageHeader,\n        MessageReplies,\n        MessageStatus,\n        onLongPress,\n        onlyEmojis,\n        onPress,\n        onPressIn,\n        otherAttachments,\n        preventPress,\n        quotedRepliesEnabled,\n        Reply,\n        showMessageStatus,\n        t,\n        tDateTimeParser,\n        threadList,\n        threadRepliesEnabled,\n      }}\n      {...props}\n    />\n  );\n};\n\nMessageContent.displayName = 'MessageContent{messageSimple{content}}';\n"]}