{"version":3,"sources":["useCreateMessageContext.ts"],"names":["useCreateMessageContext","actionsEnabled","alignment","canModifyMessage","channel","disabled","files","goToMessage","groupStyles","handleAction","handleDeleteMessage","handleEditMessage","handleQuotedReplyMessage","handleResendMessage","handleToggleBanUser","handleToggleMuteUser","handleToggleReaction","hasReactions","images","isMyMessage","lastGroupMessage","lastReceivedId","members","message","messageContentOrder","onLongPress","onlyEmojis","onOpenThread","onPress","onPressIn","otherAttachments","preventPress","reactions","readEventsEnabled","showAvatar","showMessageOverlay","showMessageStatus","threadList","groupStylesLength","length","reactionsValue","map","own","type","join","latestReactions","latest_reactions","undefined","readBy","messageValue","updated_at","deleted_at","status","text","reply_count","membersValue","JSON","stringify","quotedMessageDeletedValue","quoted_message","messageContext"],"mappings":"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","sourcesContent":["import { useMemo } from 'react';\n\nimport { isMessageWithStylesReadByAndDateSeparator } from '../../MessageList/hooks/useMessageList';\n\nimport type { MessageContextValue } from '../../../contexts/messageContext/MessageContext';\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../../types/types';\n\nexport const useCreateMessageContext = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>({\n  actionsEnabled,\n  alignment,\n  canModifyMessage,\n  channel,\n  disabled,\n  files,\n  goToMessage,\n  groupStyles,\n  handleAction,\n  handleDeleteMessage,\n  handleEditMessage,\n  handleQuotedReplyMessage,\n  handleResendMessage,\n  handleToggleBanUser,\n  handleToggleMuteUser,\n  handleToggleReaction,\n  hasReactions,\n  images,\n  isMyMessage,\n  lastGroupMessage,\n  lastReceivedId,\n  members,\n  message,\n  messageContentOrder,\n  onLongPress,\n  onlyEmojis,\n  onOpenThread,\n  onPress,\n  onPressIn,\n  otherAttachments,\n  preventPress,\n  reactions,\n  readEventsEnabled,\n  showAvatar,\n  showMessageOverlay,\n  showMessageStatus,\n  threadList,\n}: MessageContextValue<At, Ch, Co, Ev, Me, Re, Us>) => {\n  const groupStylesLength = groupStyles.length;\n  const reactionsValue = reactions.map(({ own, type }) => `${own}${type}`).join();\n  const latestReactions = message.latest_reactions ? message.latest_reactions : undefined;\n  const readBy = isMessageWithStylesReadByAndDateSeparator(message) && message.readBy;\n  const messageValue = `${latestReactions ? latestReactions.map(({ type }) => type).join() : ''}${\n    message.updated_at\n  }${message.deleted_at}${readBy}${message.status}${message.type}${message.text}${\n    message.reply_count\n  }`;\n  const membersValue = JSON.stringify(members);\n\n  const quotedMessageDeletedValue = message.quoted_message?.deleted_at;\n\n  const messageContext: MessageContextValue<At, Ch, Co, Ev, Me, Re, Us> = useMemo(\n    () => ({\n      actionsEnabled,\n      alignment,\n      canModifyMessage,\n      channel,\n      disabled,\n      files,\n      goToMessage,\n      groupStyles,\n      handleAction,\n      handleDeleteMessage,\n      handleEditMessage,\n      handleQuotedReplyMessage,\n      handleResendMessage,\n      handleToggleBanUser,\n      handleToggleMuteUser,\n      handleToggleReaction,\n      hasReactions,\n      images,\n      isMyMessage,\n      lastGroupMessage,\n      lastReceivedId,\n      members,\n      message,\n      messageContentOrder,\n      onLongPress,\n      onlyEmojis,\n      onOpenThread,\n      onPress,\n      onPressIn,\n      otherAttachments,\n      preventPress,\n      reactions,\n      readEventsEnabled,\n      showAvatar,\n      showMessageOverlay,\n      showMessageStatus,\n      threadList,\n    }),\n    [\n      actionsEnabled,\n      quotedMessageDeletedValue,\n      alignment,\n      disabled,\n      goToMessage,\n      groupStylesLength,\n      hasReactions,\n      lastGroupMessage,\n      lastReceivedId,\n      membersValue,\n      messageValue,\n      reactionsValue,\n      readEventsEnabled,\n      showAvatar,\n      showMessageStatus,\n      threadList,\n    ],\n  );\n\n  return messageContext;\n};\n"]}