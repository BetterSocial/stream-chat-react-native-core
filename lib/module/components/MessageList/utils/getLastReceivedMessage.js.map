{"version":3,"sources":["getLastReceivedMessage.ts"],"names":["getLastReceivedMessage","messages","message","status"],"mappings":";;;;;;;;;;;AAYO,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CASpCC,QAToC,EAUjC;AAIH,uDAAsBA,QAAtB,wCAAgC;AAAA,QAArBC,QAAqB;;AAC9B,QAAI,CAAAA,QAAO,QAAP,YAAAA,QAAO,CAAEC,MAAT,MAAoB,UAApB,IAAkC,CAAAD,QAAO,QAAP,YAAAA,QAAO,CAAEC,MAAT,MAAoB,SAA1D,EAAqE;AACnE,aAAOD,QAAP;AACD;AACF;;AAED;AACD,CArBM","sourcesContent":["import type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../../types/types';\nimport type { MessageType } from '../hooks/useMessageList';\n\nexport const getLastReceivedMessage = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  messages: MessageType<At, Ch, Co, Ev, Me, Re, Us>[],\n) => {\n  /**\n   * There are no status on dates so they will be skipped\n   */\n  for (const message of messages) {\n    if (message?.status === 'received' || message?.status === 'sending') {\n      return message;\n    }\n  }\n\n  return;\n};\n"]}