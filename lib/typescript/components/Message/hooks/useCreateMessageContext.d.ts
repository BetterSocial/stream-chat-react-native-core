import type { MessageContextValue } from '../../../contexts/messageContext/MessageContext';
import type { DefaultAttachmentType, DefaultChannelType, DefaultUserType, UnknownType } from '../../../types/types';
export declare const useCreateMessageContext: <At extends UnknownType = DefaultAttachmentType, Ch extends UnknownType = DefaultChannelType, Co extends string = import("stream-chat").LiteralStringForUnion, Ev extends UnknownType = UnknownType, Me extends UnknownType = UnknownType, Re extends UnknownType = UnknownType, Us extends UnknownType = DefaultUserType>({ actionsEnabled, alignment, canModifyMessage, channel, disabled, files, goToMessage, groupStyles, handleAction, handleDeleteMessage, handleEditMessage, handleQuotedReplyMessage, handleResendMessage, handleToggleBanUser, handleToggleMuteUser, handleToggleReaction, hasReactions, images, isMyMessage, lastGroupMessage, lastReceivedId, members, message, messageContentOrder, onLongPress, onlyEmojis, onOpenThread, onPress, onPressIn, otherAttachments, preventPress, reactions, readEventsEnabled, showAvatar, showMessageOverlay, showMessageStatus, threadList, }: MessageContextValue<At, Ch, Co, Ev, Me, Re, Us>) => MessageContextValue<At, Ch, Co, Ev, Me, Re, Us>;
