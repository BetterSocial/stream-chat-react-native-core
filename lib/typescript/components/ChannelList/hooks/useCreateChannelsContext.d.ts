import type { ChannelsContextValue } from '../../../contexts/channelsContext/ChannelsContext';
import type { DefaultAttachmentType, DefaultChannelType, DefaultUserType, UnknownType } from '../../../types/types';
export declare const useCreateChannelsContext: <At extends UnknownType = DefaultAttachmentType, Ch extends UnknownType = DefaultChannelType, Co extends string = import("stream-chat").LiteralStringForUnion, Ev extends UnknownType = UnknownType, Me extends UnknownType = UnknownType, Re extends UnknownType = UnknownType, Us extends UnknownType = DefaultUserType>({ additionalFlatListProps, channels, EmptyStateIndicator, error, FooterLoadingIndicator, forceUpdate, hasNextPage, HeaderErrorIndicator, HeaderNetworkDownIndicator, ListHeaderComponent, loadingChannels, LoadingErrorIndicator, LoadingIndicator, loadingNextPage, loadMoreThreshold, loadNextPage, maxUnreadCount, numberOfSkeletons, onSelect, Preview, PreviewAvatar, PreviewMessage, PreviewStatus, PreviewTitle, PreviewUnreadCount, refreshing, refreshList, reloadList, setFlatListRef, Skeleton, }: ChannelsContextValue<At, Ch, Co, Ev, Me, Re, Us>) => ChannelsContextValue<At, Ch, Co, Ev, Me, Re, Us>;
