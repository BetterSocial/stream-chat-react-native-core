{"version":3,"sources":["useMessageDetailsForState.ts"],"names":["isEditingBoolean","editing","useMessageDetailsForState","message","initialValue","fileUploads","setFileUploads","imageUploads","setImageUploads","Array","isArray","mentioned_users","map","user","id","mentionedUsers","setMentionedUsers","numberOfUploads","setNumberOfUploads","showMoreOptions","setShowMoreOptions","initialTextValue","text","setText","messageValue","updated_at","newFileUploads","newImageUploads","attachments","attachment","type","push","file","name","title","size","file_size","mime_type","state","url","asset_url","fallback","image_url","thumb_url","length"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { generateRandomId } from '../../../utils/utils';\n\nimport type { FileUpload, ImageUpload, MessageInputContextValue } from '../MessageInputContext';\n\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../../types/types';\n\nexport const isEditingBoolean = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  editing: MessageInputContextValue<At, Ch, Co, Ev, Me, Re, Us>['editing'],\n): editing is boolean => typeof editing === 'boolean';\n\nexport const useMessageDetailsForState = <\n  At extends DefaultAttachmentType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  message: MessageInputContextValue<At, Ch, Co, Ev, Me, Re, Us>['editing'],\n  initialValue?: string,\n) => {\n  const [fileUploads, setFileUploads] = useState<FileUpload[]>([]);\n  const [imageUploads, setImageUploads] = useState<ImageUpload[]>([]);\n  const [mentionedUsers, setMentionedUsers] = useState(\n    (!isEditingBoolean<At, Ch, Co, Ev, Me, Re, Us>(message) &&\n      Array.isArray(message?.mentioned_users) &&\n      message.mentioned_users.map((user) => user.id)) ||\n      [],\n  );\n  const [numberOfUploads, setNumberOfUploads] = useState(0);\n  const [showMoreOptions, setShowMoreOptions] = useState(true);\n  const initialTextValue = initialValue || '';\n  const [text, setText] = useState(initialTextValue);\n\n  useEffect(() => {\n    if (text !== initialTextValue) {\n      setShowMoreOptions(false);\n    }\n  }, [text]);\n\n  const messageValue =\n    typeof message === 'boolean' ? '' : `${message.id}${message.text}${message.updated_at}`;\n  useEffect(() => {\n    if (message && !isEditingBoolean<At, Ch, Co, Ev, Me, Re, Us>(message)) {\n      setText(message?.text || '');\n      const newFileUploads = [];\n      const newImageUploads = [];\n\n      const attachments = Array.isArray(message.attachments) ? message.attachments : [];\n\n      for (const attachment of attachments) {\n        if (attachment.type === 'file') {\n          const id = generateRandomId();\n          newFileUploads.push({\n            file: {\n              name: attachment.title || '',\n              size: attachment.file_size,\n              type: attachment.mime_type,\n            },\n            id,\n            state: 'finished',\n            url: attachment.asset_url,\n          });\n        } else if (attachment.type === 'image') {\n          const id = generateRandomId();\n          newImageUploads.push({\n            file: { name: attachment.fallback },\n            id,\n            state: 'finished',\n            url: attachment.image_url || attachment.asset_url || attachment.thumb_url,\n          });\n        }\n      }\n      if (newFileUploads.length) {\n        setFileUploads(newFileUploads);\n      }\n      if (newImageUploads.length) {\n        setImageUploads(newImageUploads);\n      }\n    }\n  }, [messageValue]);\n\n  return {\n    fileUploads,\n    imageUploads,\n    mentionedUsers,\n    numberOfUploads,\n    setFileUploads,\n    setImageUploads,\n    setMentionedUsers,\n    setNumberOfUploads,\n    setShowMoreOptions,\n    setText,\n    showMoreOptions,\n    text,\n  };\n};\n"]}