{"version":3,"sources":["InputButtons.tsx"],"names":["styles","StyleSheet","create","attachButtonContainer","paddingRight","InputButtonsWithContext","props","AttachButton","CommandsButton","giphyActive","hasCommands","hasFilePicker","hasImagePicker","MoreOptionsButton","openCommandsPicker","setShowMoreOptions","showMoreOptions","text","toggleAttachmentPicker","uploadsEnabled","theme","messageInput","commandsButtonContainer","undefined","areEqual","prevProps","nextProps","prevGiphyActive","prevHasCommands","prevHasFilePicker","prevHasImagePicker","prevSelectedPicker","selectedPicker","prevShowMoreOptions","prevText","prevUploadsEnabled","nextGiphyActive","nextHasCommands","nextHasFilePicker","nextHasImagePicker","nextSelectedPicker","nextShowMoreOptions","nextText","nextUploadsEnabled","MemoizedInputButtonsWithContext","React","memo","InputButtons"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport {\n  MessageInputContextValue,\n  useMessageInputContext,\n} from '../../contexts/messageInputContext/MessageInputContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\n\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../types/types';\n\nconst styles = StyleSheet.create({\n  attachButtonContainer: { paddingRight: 10 },\n});\n\nexport type InputButtonsProps<\n  At extends DefaultAttachmentType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n> = Partial<InputButtonsWithContextProps<At, Ch, Co, Ev, Me, Re, Us>>;\n\nexport type InputButtonsWithContextProps<\n  At extends DefaultAttachmentType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n> = Pick<\n  MessageInputContextValue<At, Ch, Co, Ev, Me, Re, Us>,\n  | 'AttachButton'\n  | 'CommandsButton'\n  | 'giphyActive'\n  | 'hasCommands'\n  | 'hasFilePicker'\n  | 'hasImagePicker'\n  | 'MoreOptionsButton'\n  | 'openCommandsPicker'\n  | 'selectedPicker'\n  | 'setShowMoreOptions'\n  | 'showMoreOptions'\n  | 'text'\n  | 'toggleAttachmentPicker'\n  | 'uploadsEnabled'\n>;\n\nexport const InputButtonsWithContext = <\n  At extends DefaultAttachmentType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  props: InputButtonsWithContextProps<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const {\n    AttachButton,\n    CommandsButton,\n    giphyActive,\n    hasCommands,\n    hasFilePicker,\n    hasImagePicker,\n    MoreOptionsButton,\n    openCommandsPicker,\n    setShowMoreOptions,\n    showMoreOptions,\n    text,\n    toggleAttachmentPicker,\n    uploadsEnabled,\n  } = props;\n\n  const {\n    theme: {\n      messageInput: { attachButtonContainer, commandsButtonContainer },\n    },\n  } = useTheme();\n\n  if (giphyActive) {\n    return null;\n  }\n\n  return !showMoreOptions && (hasImagePicker || hasFilePicker) && hasCommands ? (\n    <MoreOptionsButton handleOnPress={() => setShowMoreOptions(true)} />\n  ) : (\n    <>\n      {(hasImagePicker || hasFilePicker) && uploadsEnabled !== false && (\n        <View\n          style={[hasCommands ? styles.attachButtonContainer : undefined, attachButtonContainer]}\n        >\n          <AttachButton handleOnPress={toggleAttachmentPicker} />\n        </View>\n      )}\n      {hasCommands && !text && (\n        <View style={commandsButtonContainer}>\n          <CommandsButton handleOnPress={openCommandsPicker} />\n        </View>\n      )}\n    </>\n  );\n};\nconst areEqual = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  prevProps: InputButtonsWithContextProps<At, Ch, Co, Ev, Me, Re, Us>,\n  nextProps: InputButtonsWithContextProps<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const {\n    giphyActive: prevGiphyActive,\n    hasCommands: prevHasCommands,\n    hasFilePicker: prevHasFilePicker,\n    hasImagePicker: prevHasImagePicker,\n    selectedPicker: prevSelectedPicker,\n    showMoreOptions: prevShowMoreOptions,\n    text: prevText,\n    uploadsEnabled: prevUploadsEnabled,\n  } = prevProps;\n\n  const {\n    giphyActive: nextGiphyActive,\n    hasCommands: nextHasCommands,\n    hasFilePicker: nextHasFilePicker,\n    hasImagePicker: nextHasImagePicker,\n    selectedPicker: nextSelectedPicker,\n    showMoreOptions: nextShowMoreOptions,\n    text: nextText,\n    uploadsEnabled: nextUploadsEnabled,\n  } = nextProps;\n\n  if (prevHasImagePicker !== nextHasImagePicker) {\n    return false;\n  }\n\n  if (prevHasFilePicker !== nextHasFilePicker) {\n    return false;\n  }\n\n  if (prevHasCommands !== nextHasCommands) {\n    return false;\n  }\n\n  if (prevUploadsEnabled !== nextUploadsEnabled) {\n    return false;\n  }\n  if (prevSelectedPicker !== nextSelectedPicker) {\n    return false;\n  }\n\n  if (prevShowMoreOptions !== nextShowMoreOptions) {\n    return false;\n  }\n\n  if ((!prevProps.text && nextText) || (prevText && !nextText)) {\n    return false;\n  }\n\n  if (prevGiphyActive !== nextGiphyActive) {\n    return false;\n  }\n\n  return true;\n};\n\nconst MemoizedInputButtonsWithContext = React.memo(\n  InputButtonsWithContext,\n  areEqual,\n) as typeof InputButtonsWithContext;\n\nexport const InputButtons = <\n  At extends DefaultAttachmentType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  props: InputButtonsProps<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const {\n    AttachButton,\n    CommandsButton,\n    giphyActive,\n    hasCommands,\n    hasFilePicker,\n    hasImagePicker,\n    MoreOptionsButton,\n    openCommandsPicker,\n    selectedPicker,\n    setShowMoreOptions,\n    showMoreOptions,\n    text,\n    toggleAttachmentPicker,\n    uploadsEnabled,\n  } = useMessageInputContext<At, Ch, Co, Ev, Me, Re, Us>();\n\n  return (\n    <MemoizedInputButtonsWithContext\n      {...{\n        AttachButton,\n        CommandsButton,\n        giphyActive,\n        hasCommands,\n        hasFilePicker,\n        hasImagePicker,\n        MoreOptionsButton,\n        openCommandsPicker,\n        selectedPicker,\n        setShowMoreOptions,\n        showMoreOptions,\n        text,\n        toggleAttachmentPicker,\n        uploadsEnabled,\n      }}\n      {...props}\n    />\n  );\n};\n"]}