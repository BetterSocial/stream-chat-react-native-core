{"version":3,"sources":["UploadProgressIndicator.tsx"],"names":["styles","StyleSheet","create","activityIndicatorContainer","alignItems","bottom","justifyContent","left","position","right","top","container","height","width","overflowHidden","overflow","overlay","opacity","retryButtonContainer","UploadProgressIndicator","props","action","active","children","style","type","theme","colors","overlayColor","white_smoke","messageInput","uploadProgressIndicator","backgroundColor","ProgressIndicatorTypes","IN_PROGRESS","RETRY","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  ActivityIndicator,\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  TouchableOpacity,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { Refresh } from '../../icons';\nimport { ProgressIndicatorTypes } from '../../utils/utils';\n\nconst styles = StyleSheet.create({\n  activityIndicatorContainer: {\n    alignItems: 'center',\n    bottom: 0,\n    justifyContent: 'center',\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n  container: {\n    alignItems: 'center',\n    height: '100%',\n    justifyContent: 'center',\n    position: 'absolute',\n    width: '100%',\n  },\n  overflowHidden: {\n    overflow: 'hidden',\n  },\n  overlay: {\n    alignItems: 'center',\n    height: '100%',\n    justifyContent: 'center',\n    opacity: 0,\n    position: 'absolute',\n    width: '100%',\n  },\n  retryButtonContainer: {\n    alignItems: 'center',\n    bottom: 0,\n    justifyContent: 'center',\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0,\n  },\n});\n\nexport type UploadProgressIndicatorProps = {\n  /** Action triggered when clicked indicator */\n  action?: (event: GestureResponderEvent) => void;\n  /** Boolean status of upload progress */\n  active?: boolean;\n  /** style */\n  style?: StyleProp<ViewStyle>;\n  /** Type of active indicator */\n  type?: 'in_progress' | 'retry';\n};\n\nexport const UploadProgressIndicator: React.FC<UploadProgressIndicatorProps> = (props) => {\n  const { action, active, children, style, type } = props;\n\n  const {\n    theme: {\n      colors: { overlay: overlayColor, white_smoke },\n      messageInput: {\n        uploadProgressIndicator: { container, overlay },\n      },\n    },\n  } = useTheme();\n\n  return !active ? (\n    <View style={[styles.overflowHidden, style]} testID='inactive-upload-progress-indicator'>\n      {children}\n    </View>\n  ) : (\n    <View style={[styles.overflowHidden, style]} testID='active-upload-progress-indicator'>\n      {children}\n      <View style={[styles.overlay, { backgroundColor: overlayColor }, overlay]} />\n      <View style={[styles.container, { backgroundColor: overlayColor }, container]}>\n        {type === ProgressIndicatorTypes.IN_PROGRESS && (\n          <View style={styles.activityIndicatorContainer}>\n            <ActivityIndicator color={white_smoke} testID='upload-progress-indicator' />\n          </View>\n        )}\n        {type === ProgressIndicatorTypes.RETRY && (\n          <TouchableOpacity onPress={action} style={styles.retryButtonContainer}>\n            <Refresh\n              height={18}\n              pathFill={white_smoke}\n              testID='retry-upload-progress-indicator'\n              width={18}\n            />\n          </TouchableOpacity>\n        )}\n      </View>\n    </View>\n  );\n};\n\nUploadProgressIndicator.displayName =\n  'UploadProgressIndicator{messageInput{uploadProgressIndicator}}';\n"]}