{"version":3,"sources":["MoreOptionsButton.tsx"],"names":["MoreOptionsButtonWithContext","props","disabled","handleOnPress","theme","accent_blue","colors","moreOptionsButton","messageInput","bottom","left","right","top","areEqual","prevProps","nextProps","prevDisabled","prevHandleOnPress","nextDisabled","nextHandleOnPress","disabledEqual","handleOnPressEqual","MemoizedMoreOptionsButton","React","memo","MoreOptionsButton","displayName"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AAIA;;AACA;;;;;AA4BA,IAAMA,4BAA4B,GAAG,SAA/BA,4BAA+B,CASnCC,KATmC,EAUhC;AACH,MAAQC,QAAR,GAAoCD,KAApC,CAAQC,QAAR;AAAA,MAAkBC,aAAlB,GAAoCF,KAApC,CAAkBE,aAAlB;;AAEA,kBAKI,6BALJ;AAAA,kCACEC,KADF;AAAA,MAEcC,WAFd,mBAEIC,MAFJ,CAEcD,WAFd;AAAA,MAGoBE,iBAHpB,mBAGIC,YAHJ,CAGoBD,iBAHpB;;AAOA,SACE,gCAAC,2CAAD;AACE,IAAA,QAAQ,EAAEL,QADZ;AAEE,IAAA,OAAO,EAAE;AAAEO,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,IAAI,EAAE,EAApB;AAAwBC,MAAAA,KAAK,EAAE,EAA/B;AAAmCC,MAAAA,GAAG,EAAE;AAAxC,KAFX;AAGE,IAAA,OAAO,EAAET,aAHX;AAIE,IAAA,KAAK,EAAE,CAACI,iBAAD,CAJT;AAKE,IAAA,MAAM,EAAC,qBALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,gCAAC,wBAAD;AAAa,IAAA,QAAQ,EAAEF,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD,CA/BD;;AAiCA,IAAMQ,QAAQ,GAAG,SAAXA,QAAW,CASfC,SATe,EAUfC,SAVe,EAWZ;AACH,MAAkBC,YAAlB,GAAqEF,SAArE,CAAQZ,QAAR;AAAA,MAA+Ce,iBAA/C,GAAqEH,SAArE,CAAgCX,aAAhC;AACA,MAAkBe,YAAlB,GAAqEH,SAArE,CAAQb,QAAR;AAAA,MAA+CiB,iBAA/C,GAAqEJ,SAArE,CAAgCZ,aAAhC;AACA,MAAMiB,aAAa,GAAGJ,YAAY,KAAKE,YAAvC;AACA,MAAI,CAACE,aAAL,EAAoB,OAAO,KAAP;AAEpB,MAAMC,kBAAkB,GAAGJ,iBAAiB,KAAKE,iBAAjD;AACA,MAAI,CAACE,kBAAL,EAAyB,OAAO,KAAP;AAEzB,SAAO,IAAP;AACD,CArBD;;AAuBA,IAAMC,yBAAyB,GAAGC,kBAAMC,IAAN,CAChCxB,4BADgC,EAEhCa,QAFgC,CAAlC;;AAkBO,IAAMY,iBAAiB,GAAG,SAApBA,iBAAoB,CAS/BxB,KAT+B,EAU5B;AACH,2BAA6B,wCAA7B;AAAA,iDAAQC,QAAR;AAAA,MAAQA,QAAR,sCAAmB,KAAnB;;AAEA,SAAO,gCAAC,yBAAD;AAAiCA,IAAAA,QAAQ,EAARA;AAAjC,KAAiDD,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAdM;;;AAgBPwB,iBAAiB,CAACC,WAAlB,GAAgC,iCAAhC","sourcesContent":["import React from 'react';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nimport {\n  ChannelContextValue,\n  useChannelContext,\n} from '../../contexts/channelContext/ChannelContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { CircleRight } from '../../icons/CircleRight';\n\nimport type { GestureResponderEvent } from 'react-native';\n\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../types/types';\n\ntype MoreOptionsButtonPropsWithContext<\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n> = Pick<ChannelContextValue<At, Ch, Co, Ev, Me, Re, Us>, 'disabled'> & {\n  /** Function that opens attachment options bottom sheet */\n  handleOnPress?: ((event: GestureResponderEvent) => void) & (() => void);\n};\n\nconst MoreOptionsButtonWithContext = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  props: MoreOptionsButtonPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const { disabled, handleOnPress } = props;\n\n  const {\n    theme: {\n      colors: { accent_blue },\n      messageInput: { moreOptionsButton },\n    },\n  } = useTheme();\n\n  return (\n    <TouchableOpacity\n      disabled={disabled}\n      hitSlop={{ bottom: 15, left: 15, right: 15, top: 15 }}\n      onPress={handleOnPress}\n      style={[moreOptionsButton]}\n      testID='more-options-button'\n    >\n      <CircleRight pathFill={accent_blue} />\n    </TouchableOpacity>\n  );\n};\n\nconst areEqual = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  prevProps: MoreOptionsButtonPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n  nextProps: MoreOptionsButtonPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const { disabled: prevDisabled, handleOnPress: prevHandleOnPress } = prevProps;\n  const { disabled: nextDisabled, handleOnPress: nextHandleOnPress } = nextProps;\n  const disabledEqual = prevDisabled === nextDisabled;\n  if (!disabledEqual) return false;\n\n  const handleOnPressEqual = prevHandleOnPress === nextHandleOnPress;\n  if (!handleOnPressEqual) return false;\n\n  return true;\n};\n\nconst MemoizedMoreOptionsButton = React.memo(\n  MoreOptionsButtonWithContext,\n  areEqual,\n) as typeof MoreOptionsButtonWithContext;\n\nexport type MoreOptionsButtonProps<\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n> = Partial<MoreOptionsButtonPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>>;\n\n/**\n * UI Component for more options button in MessageInput component.\n */\nexport const MoreOptionsButton = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  props: MoreOptionsButtonProps<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const { disabled = false } = useChannelContext<At, Ch, Co, Ev, Me, Re, Us>();\n\n  return <MemoizedMoreOptionsButton {...{ disabled }} {...props} />;\n};\n\nMoreOptionsButton.displayName = 'MoreOptionsButton{messageInput}';\n"]}