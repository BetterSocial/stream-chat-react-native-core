{"version":3,"sources":["MessageInput.tsx"],"names":["styles","StyleSheet","create","attachmentSeparator","borderBottomWidth","marginBottom","autoCompleteInputContainer","alignItems","flexDirection","composerContainer","container","borderTopWidth","padding","editingBoxHeader","justifyContent","paddingBottom","editingBoxHeaderTitle","fontSize","fontWeight","giphyContainer","borderRadius","height","marginRight","paddingHorizontal","giphyText","inputBoxContainer","borderWidth","flex","optionsContainer","paddingRight","replyContainer","sendButtonContainer","paddingLeft","suggestionsListContainer","elevation","left","position","right","shadowOffset","width","shadowOpacity","MessageInputWithContext","props","additionalTextInputProps","asyncIds","asyncUploads","clearEditingState","clearQuotedMessageState","closeAttachmentPicker","componentType","disabled","editing","FileUploadPreview","fileUploads","giphyActive","ImageUploadPreview","imageUploads","Input","inputBoxRef","InputButtons","isValidMessage","maxNumberOfFiles","members","mentionedUsers","numberOfUploads","quotedMessage","quotedRepliesEnabled","removeImage","Reply","resetInput","SendButton","sending","sendMessageAsync","setGiphyActive","setShowMoreOptions","ShowThreadMessageInChannelButton","suggestions","suggestionsTitle","t","thread","threadList","uploadNewImage","watchers","setHeight","theme","colors","accent_blue","black","border","grey","grey_gainsboro","grey_whisper","white","white_smoke","messageInput","attachmentSelectionBar","attachmentPickerBottomSheetHeight","attachmentSelectionBarHeight","bottomInset","selectedImages","selectedPicker","setMaxNumberOfFiles","setSelectedImages","hasResetImages","setHasResetImages","selectedImagesLength","length","imageUploadsLength","imagesForInput","forEach","image","id","imagesToUpload","filter","selectedImage","uploadedImage","find","imageUpload","file","uri","url","imagesToRemove","updatedSelectedImages","map","source","Boolean","editingExists","current","focus","asyncIdsString","join","asyncUploadsString","Object","values","state","keys","getMembers","result","member","user","push","getUsers","users","getWatchers","uniqueUsers","usersArray","additionalTextInputContainerProps","editable","undefined","newHeight","nativeEvent","layout","backgroundColor","borderColor","color","blur","paddingVertical","quoted_message","borderBottomColor","marginHorizontal","bottom","areEqual","prevProps","nextProps","prevAdditionalTextInputProps","prevAsyncUploads","prevDisabled","prevEditing","prevFileUploads","prevGiphyActive","prevImageUploads","prevIsValidMessage","prevMentionedUsers","prevQuotedMessage","prevSending","prevShowMoreOptions","showMoreOptions","prevSuggestions","prevSuggestionsTitle","prevT","prevThread","prevThreadList","nextAdditionalTextInputProps","nextAsyncUploads","nextDisabled","nextEditing","nextFileUploads","nextGiphyActive","nextImageUploads","nextIsValidMessage","nextMentionedUsers","nextQuotedMessage","nextSending","nextShowMoreOptions","nextSuggestions","nextSuggestionsTitle","nextT","nextThread","nextThreadList","tEqual","additionalTextInputPropsEven","disabledEqual","editingEqual","imageUploadsEqual","giphyActiveEqual","quotedMessageEqual","sendingEqual","showMoreOptionsEqual","isValidMessageEqual","asyncUploadsEqual","every","key","fileUploadsEqual","mentionedUsersEqual","suggestionsEqual","data","index","name","suggestionsTitleEqual","threadEqual","text","reply_count","threadListEqual","MemoizedMessageInput","React","memo","MessageInput","displayName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport { AttachmentSelectionBar } from '../AttachmentPicker/components/AttachmentSelectionBar';\nimport { AutoCompleteInput } from '../AutoCompleteInput/AutoCompleteInput';\nimport { SuggestionsList } from '../AutoCompleteInput/SuggestionsList';\n\nimport { useAttachmentPickerContext } from '../../contexts/attachmentPickerContext/AttachmentPickerContext';\nimport {\n  ChannelContextValue,\n  useChannelContext,\n} from '../../contexts/channelContext/ChannelContext';\nimport {\n  MessageInputContextValue,\n  useMessageInputContext,\n} from '../../contexts/messageInputContext/MessageInputContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../contexts/messagesContext/MessagesContext';\nimport {\n  SuggestionsContextValue,\n  useSuggestionsContext,\n} from '../../contexts/suggestionsContext/SuggestionsContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { ThreadContextValue, useThreadContext } from '../../contexts/threadContext/ThreadContext';\nimport {\n  TranslationContextValue,\n  useTranslationContext,\n} from '../../contexts/translationContext/TranslationContext';\nimport { CircleClose, CurveLineLeftUp, Edit, Lightning } from '../../icons';\n\nimport type { UserResponse } from 'stream-chat';\n\nimport type { Asset } from '../../native';\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../types/types';\n\nconst styles = StyleSheet.create({\n  attachmentSeparator: {\n    borderBottomWidth: 1,\n    marginBottom: 10,\n  },\n  autoCompleteInputContainer: {\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  composerContainer: {\n    alignItems: 'flex-end',\n    flexDirection: 'row',\n  },\n  container: {\n    borderTopWidth: 1,\n    padding: 10,\n  },\n  editingBoxHeader: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingBottom: 10,\n  },\n  editingBoxHeaderTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n  giphyContainer: {\n    alignItems: 'center',\n    borderRadius: 12,\n    flexDirection: 'row',\n    height: 24,\n    marginRight: 8,\n    paddingHorizontal: 8,\n  },\n  giphyText: {\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  inputBoxContainer: {\n    borderRadius: 20,\n    borderWidth: 1,\n    flex: 1,\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    paddingBottom: 10,\n    paddingRight: 10,\n  },\n  replyContainer: { paddingBottom: 12, paddingHorizontal: 8 },\n  sendButtonContainer: { paddingBottom: 10, paddingLeft: 10 },\n  suggestionsListContainer: {\n    borderRadius: 10,\n    elevation: 3,\n    left: 8,\n    position: 'absolute',\n    right: 8,\n    shadowOffset: { height: 1, width: 0 },\n    shadowOpacity: 0.15,\n  },\n});\n\ntype MessageInputPropsWithContext<\n  At extends DefaultAttachmentType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n> = Pick<ChannelContextValue<At, Ch, Co, Ev, Me, Re, Us>, 'disabled' | 'members' | 'watchers'> &\n  Pick<\n    MessageInputContextValue<At, Ch, Co, Ev, Me, Re, Us>,\n    | 'additionalTextInputProps'\n    | 'asyncIds'\n    | 'asyncUploads'\n    | 'clearEditingState'\n    | 'clearQuotedMessageState'\n    | 'closeAttachmentPicker'\n    | 'editing'\n    | 'FileUploadPreview'\n    | 'fileUploads'\n    | 'giphyActive'\n    | 'ImageUploadPreview'\n    | 'imageUploads'\n    | 'Input'\n    | 'inputBoxRef'\n    | 'InputButtons'\n    | 'isValidMessage'\n    | 'maxNumberOfFiles'\n    | 'mentionedUsers'\n    | 'numberOfUploads'\n    | 'quotedMessage'\n    | 'resetInput'\n    | 'SendButton'\n    | 'sending'\n    | 'sendMessageAsync'\n    | 'setShowMoreOptions'\n    | 'setGiphyActive'\n    | 'showMoreOptions'\n    | 'ShowThreadMessageInChannelButton'\n    | 'removeImage'\n    | 'uploadNewImage'\n  > &\n  Pick<MessagesContextValue<At, Ch, Co, Ev, Me, Re, Us>, 'Reply' | 'quotedRepliesEnabled'> &\n  Pick<SuggestionsContextValue<Co, Us>, 'componentType' | 'suggestions' | 'suggestionsTitle'> &\n  Pick<ThreadContextValue, 'thread'> &\n  Pick<TranslationContextValue, 't'> & {\n    threadList?: boolean;\n  };\n\nconst MessageInputWithContext = <\n  At extends DefaultAttachmentType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  props: MessageInputPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const {\n    additionalTextInputProps,\n    asyncIds,\n    asyncUploads,\n    clearEditingState,\n    clearQuotedMessageState,\n    closeAttachmentPicker,\n    componentType,\n    disabled,\n    editing,\n    FileUploadPreview,\n    fileUploads,\n    giphyActive,\n    ImageUploadPreview,\n    imageUploads,\n    Input,\n    inputBoxRef,\n    InputButtons,\n    isValidMessage,\n    maxNumberOfFiles,\n    members,\n    mentionedUsers,\n    numberOfUploads,\n    quotedMessage,\n    quotedRepliesEnabled,\n    removeImage,\n    Reply,\n    resetInput,\n    SendButton,\n    sending,\n    sendMessageAsync,\n    setGiphyActive,\n    setShowMoreOptions,\n    ShowThreadMessageInChannelButton,\n    suggestions,\n    suggestionsTitle,\n    t,\n    thread,\n    threadList,\n    uploadNewImage,\n    watchers,\n  } = props;\n\n  const [height, setHeight] = useState(0);\n\n  const {\n    theme: {\n      colors: {\n        accent_blue,\n        black,\n        border,\n        grey,\n        grey_gainsboro,\n        grey_whisper,\n        white,\n        white_smoke,\n      },\n      messageInput: {\n        attachmentSelectionBar,\n        autoCompleteInputContainer,\n        composerContainer,\n        container,\n        editingBoxHeader,\n        editingBoxHeaderTitle,\n        giphyContainer,\n        giphyText,\n        inputBoxContainer,\n        optionsContainer,\n        replyContainer,\n        sendButtonContainer,\n        suggestionsListContainer,\n      },\n    },\n  } = useTheme();\n\n  const {\n    attachmentPickerBottomSheetHeight,\n    attachmentSelectionBarHeight,\n    bottomInset,\n    selectedImages,\n    selectedPicker,\n    setMaxNumberOfFiles,\n    setSelectedImages,\n  } = useAttachmentPickerContext();\n\n  /**\n   * Mounting and un-mounting logic are un-related in following useEffect.\n   * While mounting we want to pass maxNumberOfFiles (which is prop on Channel component)\n   * to AttachmentPicker (on OverlayProvider)\n   *\n   * While un-mounting, we want to close the picker e.g., while navigating away.\n   */\n  useEffect(() => {\n    setMaxNumberOfFiles(maxNumberOfFiles ?? 10);\n\n    return closeAttachmentPicker;\n  }, []);\n\n  const [hasResetImages, setHasResetImages] = useState(false);\n  const selectedImagesLength = hasResetImages ? selectedImages.length : 0;\n  const imageUploadsLength = hasResetImages ? imageUploads.length : 0;\n  const imagesForInput = (!!thread && !!threadList) || (!thread && !threadList);\n\n  useEffect(() => {\n    setSelectedImages([]);\n    if (imageUploads.length) {\n      imageUploads.forEach((image) => removeImage(image.id));\n    }\n    return () => setSelectedImages([]);\n  }, []);\n\n  useEffect(() => {\n    if (hasResetImages === false && imageUploadsLength === 0 && selectedImagesLength === 0) {\n      setHasResetImages(true);\n    }\n  }, [imageUploadsLength, selectedImagesLength]);\n\n  useEffect(() => {\n    if (imagesForInput === false && imageUploads.length) {\n      imageUploads.forEach((image) => removeImage(image.id));\n    }\n  }, [imagesForInput]);\n\n  useEffect(() => {\n    if (imagesForInput) {\n      if (selectedImagesLength > imageUploadsLength) {\n        /** User selected an image in bottom sheet attachment picker */\n        const imagesToUpload = selectedImages.filter((selectedImage) => {\n          const uploadedImage = imageUploads.find(\n            (imageUpload) =>\n              imageUpload.file.uri === selectedImage.uri || imageUpload.url === selectedImage.uri,\n          );\n          return !uploadedImage;\n        });\n        imagesToUpload.forEach((image) => uploadNewImage(image));\n      } else if (selectedImagesLength < imageUploadsLength) {\n        /** User de-selected an image in bottom sheet attachment picker */\n        const imagesToRemove = imageUploads.filter(\n          (imageUpload) =>\n            !selectedImages.find(\n              (selectedImage) =>\n                selectedImage.uri === imageUpload.file.uri || selectedImage.uri === imageUpload.url,\n            ),\n        );\n        imagesToRemove.forEach((image) => removeImage(image.id));\n      }\n    }\n  }, [selectedImagesLength]);\n\n  useEffect(() => {\n    if (imagesForInput) {\n      if (imageUploadsLength < selectedImagesLength) {\n        /** User removed some image from seleted images within ImageUploadPreview. */\n        const updatedSelectedImages = selectedImages.filter((selectedImage) => {\n          const uploadedImage = imageUploads.find(\n            (imageUpload) =>\n              imageUpload.file.uri === selectedImage.uri || imageUpload.url === selectedImage.uri,\n          );\n          return uploadedImage;\n        });\n        setSelectedImages(updatedSelectedImages);\n      } else if (imageUploadsLength > selectedImagesLength) {\n        /**\n         * User is editing some message which contains image attachments OR\n         * image attachment is added from custom image picker (other than the default bottomsheet image picker)\n         * using `uploadNewImage` function from `MessageInputContext`.\n         **/\n        setSelectedImages(\n          imageUploads\n            .map((imageUpload) => ({\n              height: imageUpload.file.height,\n              source: imageUpload.file.source,\n              uri: imageUpload.url || imageUpload.file.uri,\n              width: imageUpload.file.width,\n            }))\n            .filter(Boolean) as Asset[],\n        );\n      }\n    }\n  }, [imageUploadsLength]);\n\n  const editingExists = !!editing;\n  useEffect(() => {\n    if (editing && inputBoxRef.current) {\n      inputBoxRef.current.focus();\n    }\n\n    /**\n     * Make sure to test `initialValue` functionality, if you are modifying following condition.\n     *\n     * We have the following condition, to make sure - when user comes out of \"editing message\" state,\n     * we wipe out all the state around message input such as text, mentioned users, image uploads etc.\n     * But it also means, this condition will be fired up on first render, which may result in clearing\n     * the initial value set on input box, through the prop - `initialValue`.\n     * This prop generally gets used for the case of draft message functionality.\n     */\n    if (\n      !editing &&\n      (giphyActive ||\n        fileUploads.length > 0 ||\n        mentionedUsers.length > 0 ||\n        imageUploads.length > 0 ||\n        numberOfUploads > 0)\n    ) {\n      resetInput();\n    }\n  }, [editingExists]);\n\n  const asyncIdsString = asyncIds.join();\n  const asyncUploadsString = Object.values(asyncUploads)\n    .map(({ state, url }) => `${state}${url}`)\n    .join();\n  useEffect(() => {\n    if (Object.keys(asyncUploads).length) {\n      /**\n       * When successful image upload response occurs after hitting send,\n       * send a follow up message with the image\n       */\n      sending.current = true;\n      asyncIds.forEach((id) => sendMessageAsync(id));\n      sending.current = false;\n    }\n  }, [asyncIdsString, asyncUploadsString, sendMessageAsync]);\n\n  const getMembers = () => {\n    const result: UserResponse<Us>[] = [];\n    if (members && Object.values(members).length) {\n      Object.values(members).forEach((member) => {\n        if (member.user) {\n          result.push(member.user);\n        }\n      });\n    }\n\n    return result;\n  };\n\n  const getUsers = () => {\n    const users = [...getMembers(), ...getWatchers()];\n\n    // make sure we don't list users twice\n    const uniqueUsers: { [key: string]: UserResponse<Us> } = {};\n    for (const user of users) {\n      if (user && !uniqueUsers[user.id]) {\n        uniqueUsers[user.id] = user;\n      }\n    }\n    const usersArray = Object.values(uniqueUsers);\n\n    return usersArray;\n  };\n\n  const getWatchers = () => {\n    const result: UserResponse<Us>[] = [];\n    if (watchers && Object.values(watchers).length) {\n      result.push(...Object.values(watchers));\n    }\n\n    return result;\n  };\n\n  const additionalTextInputContainerProps = {\n    editable: disabled ? false : undefined,\n    ...additionalTextInputProps,\n  };\n\n  return (\n    <>\n      <View\n        onLayout={({\n          nativeEvent: {\n            layout: { height: newHeight },\n          },\n        }) => setHeight(newHeight)}\n        style={[styles.container, { backgroundColor: white, borderColor: border }, container]}\n      >\n        {(editing || quotedMessage) && (\n          <View style={[styles.editingBoxHeader, editingBoxHeader]}>\n            {editing ? (\n              <Edit pathFill={grey_gainsboro} />\n            ) : (\n              <CurveLineLeftUp pathFill={grey_gainsboro} />\n            )}\n            <Text style={[styles.editingBoxHeaderTitle, { color: black }, editingBoxHeaderTitle]}>\n              {editing ? t('Editing Message') : t('Reply to Message')}\n            </Text>\n            <TouchableOpacity\n              disabled={disabled}\n              onPress={() => {\n                resetInput();\n                if (editing) {\n                  clearEditingState();\n                }\n                if (quotedMessage) {\n                  clearQuotedMessageState();\n                }\n                if (inputBoxRef.current) {\n                  inputBoxRef.current.blur();\n                }\n              }}\n              testID='close-button'\n            >\n              <CircleClose pathFill={grey} />\n            </TouchableOpacity>\n          </View>\n        )}\n        <View style={[styles.composerContainer, composerContainer]}>\n          {Input ? (\n            <Input\n              additionalTextInputProps={additionalTextInputContainerProps}\n              getUsers={getUsers}\n            />\n          ) : (\n            <>\n              <View style={[styles.optionsContainer, optionsContainer]}>\n                {InputButtons && <InputButtons />}\n              </View>\n              <View\n                style={[\n                  styles.inputBoxContainer,\n                  {\n                    borderColor: grey_whisper,\n                    paddingVertical: giphyActive ? 8 : 12,\n                  },\n                  inputBoxContainer,\n                ]}\n              >\n                {((typeof editing !== 'boolean' &&\n                  quotedRepliesEnabled &&\n                  editing?.quoted_message) ||\n                  quotedMessage) && (\n                  <View style={[styles.replyContainer, replyContainer]}>\n                    <Reply />\n                  </View>\n                )}\n                {imageUploads.length ? <ImageUploadPreview /> : null}\n                {imageUploads.length && fileUploads.length ? (\n                  <View\n                    style={[\n                      styles.attachmentSeparator,\n                      {\n                        borderBottomColor: grey_whisper,\n                        marginHorizontal: giphyActive ? 8 : 12,\n                      },\n                    ]}\n                  />\n                ) : null}\n                {fileUploads.length ? <FileUploadPreview /> : null}\n                <View\n                  style={[\n                    styles.autoCompleteInputContainer,\n                    {\n                      paddingLeft: giphyActive ? 8 : 16,\n                      paddingRight: giphyActive ? 10 : 16,\n                    },\n                    autoCompleteInputContainer,\n                  ]}\n                >\n                  {giphyActive && (\n                    <View\n                      style={[\n                        styles.giphyContainer,\n                        { backgroundColor: accent_blue },\n                        giphyContainer,\n                      ]}\n                    >\n                      <Lightning height={16} pathFill={white} width={16} />\n                      <Text style={[styles.giphyText, { color: white }, giphyText]}>GIPHY</Text>\n                    </View>\n                  )}\n                  <AutoCompleteInput<At, Ch, Co, Ev, Me, Re, Us>\n                    additionalTextInputProps={additionalTextInputProps}\n                  />\n                  {giphyActive && (\n                    <TouchableOpacity\n                      disabled={disabled}\n                      onPress={() => {\n                        setGiphyActive(false);\n                        setShowMoreOptions(true);\n                      }}\n                      testID='close-button'\n                    >\n                      <CircleClose height={20} pathFill={grey} width={20} />\n                    </TouchableOpacity>\n                  )}\n                </View>\n              </View>\n              <View style={[styles.sendButtonContainer, sendButtonContainer]}>\n                <SendButton disabled={disabled || sending.current || !isValidMessage()} />\n              </View>\n            </>\n          )}\n        </View>\n        <ShowThreadMessageInChannelButton threadList={threadList} />\n      </View>\n      {componentType && suggestions ? (\n        <View\n          style={[\n            styles.suggestionsListContainer,\n            { backgroundColor: white, bottom: height },\n            suggestionsListContainer,\n          ]}\n        >\n          <SuggestionsList<Co, Us>\n            active={!!suggestions}\n            componentType={componentType}\n            suggestions={suggestions}\n            suggestionsTitle={suggestionsTitle}\n          />\n        </View>\n      ) : null}\n      {selectedPicker && (\n        <View\n          style={[\n            {\n              backgroundColor: white_smoke,\n              height:\n                (attachmentPickerBottomSheetHeight\n                  ? attachmentPickerBottomSheetHeight + (attachmentSelectionBarHeight ?? 52)\n                  : 360) - bottomInset,\n            },\n            attachmentSelectionBar,\n          ]}\n        >\n          <AttachmentSelectionBar />\n        </View>\n      )}\n    </>\n  );\n};\n\nconst areEqual = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  prevProps: MessageInputPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n  nextProps: MessageInputPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const {\n    additionalTextInputProps: prevAdditionalTextInputProps,\n    asyncUploads: prevAsyncUploads,\n    disabled: prevDisabled,\n    editing: prevEditing,\n    fileUploads: prevFileUploads,\n    giphyActive: prevGiphyActive,\n    imageUploads: prevImageUploads,\n    isValidMessage: prevIsValidMessage,\n    mentionedUsers: prevMentionedUsers,\n    quotedMessage: prevQuotedMessage,\n    sending: prevSending,\n    showMoreOptions: prevShowMoreOptions,\n    suggestions: prevSuggestions,\n    suggestionsTitle: prevSuggestionsTitle,\n    t: prevT,\n    thread: prevThread,\n    threadList: prevThreadList,\n  } = prevProps;\n  const {\n    additionalTextInputProps: nextAdditionalTextInputProps,\n    asyncUploads: nextAsyncUploads,\n    disabled: nextDisabled,\n    editing: nextEditing,\n    fileUploads: nextFileUploads,\n    giphyActive: nextGiphyActive,\n    imageUploads: nextImageUploads,\n    isValidMessage: nextIsValidMessage,\n    mentionedUsers: nextMentionedUsers,\n    quotedMessage: nextQuotedMessage,\n    sending: nextSending,\n    showMoreOptions: nextShowMoreOptions,\n    suggestions: nextSuggestions,\n    suggestionsTitle: nextSuggestionsTitle,\n    t: nextT,\n    thread: nextThread,\n    threadList: nextThreadList,\n  } = nextProps;\n\n  const tEqual = prevT === nextT;\n  if (!tEqual) return false;\n\n  const additionalTextInputPropsEven =\n    prevAdditionalTextInputProps === nextAdditionalTextInputProps;\n  if (!additionalTextInputPropsEven) return false;\n\n  const disabledEqual = prevDisabled === nextDisabled;\n  if (!disabledEqual) return false;\n\n  const editingEqual = !!prevEditing === !!nextEditing;\n  if (!editingEqual) return false;\n\n  const imageUploadsEqual = prevImageUploads.length === nextImageUploads.length;\n  if (!imageUploadsEqual) return false;\n\n  const giphyActiveEqual = prevGiphyActive === nextGiphyActive;\n  if (!giphyActiveEqual) return false;\n\n  const quotedMessageEqual =\n    !!prevQuotedMessage &&\n    !!nextQuotedMessage &&\n    typeof prevQuotedMessage !== 'boolean' &&\n    typeof nextQuotedMessage !== 'boolean'\n      ? prevQuotedMessage.id === nextQuotedMessage.id\n      : !!prevQuotedMessage === !!nextQuotedMessage;\n  if (!quotedMessageEqual) return false;\n\n  const sendingEqual = prevSending.current === nextSending.current;\n  if (!sendingEqual) return false;\n\n  const showMoreOptionsEqual = prevShowMoreOptions === nextShowMoreOptions;\n  if (!showMoreOptionsEqual) return false;\n\n  const isValidMessageEqual = prevIsValidMessage() === nextIsValidMessage();\n  if (!isValidMessageEqual) return false;\n\n  const asyncUploadsEqual = Object.keys(prevAsyncUploads).every(\n    (key) =>\n      prevAsyncUploads[key].state === nextAsyncUploads[key].state &&\n      prevAsyncUploads[key].url === nextAsyncUploads[key].url,\n  );\n  if (!asyncUploadsEqual) return false;\n\n  const fileUploadsEqual = prevFileUploads.length === nextFileUploads.length;\n  if (!fileUploadsEqual) return false;\n\n  const mentionedUsersEqual = prevMentionedUsers.length === nextMentionedUsers.length;\n  if (!mentionedUsersEqual) return false;\n\n  const suggestionsEqual =\n    !!prevSuggestions?.data && !!nextSuggestions?.data\n      ? prevSuggestions.data.length === nextSuggestions.data.length &&\n        prevSuggestions.data.every(({ name }, index) => name === nextSuggestions.data[index].name)\n      : !!prevSuggestions === !!nextSuggestions;\n  if (!suggestionsEqual) return false;\n\n  const suggestionsTitleEqual = prevSuggestionsTitle === nextSuggestionsTitle;\n  if (!suggestionsTitleEqual) return false;\n\n  const threadEqual =\n    prevThread?.id === nextThread?.id &&\n    prevThread?.text === nextThread?.text &&\n    prevThread?.reply_count === nextThread?.reply_count;\n  if (!threadEqual) return false;\n\n  const threadListEqual = prevThreadList === nextThreadList;\n  if (!threadListEqual) return false;\n\n  return true;\n};\n\nconst MemoizedMessageInput = React.memo(\n  MessageInputWithContext,\n  areEqual,\n) as typeof MessageInputWithContext;\n\nexport type MessageInputProps<\n  At extends DefaultAttachmentType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n> = Partial<MessageInputPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>>;\n\n/**\n * UI Component for message input\n * It's a consumer of\n * [Channel Context](https://getstream.github.io/stream-chat-react-native/v3/#channelcontext),\n * [Chat Context](https://getstream.github.io/stream-chat-react-native/v3/#chatcontext),\n * [MessageInput Context](https://getstream.github.io/stream-chat-react-native/v3/#messageinputcontext),\n * [Suggestions Context](https://getstream.github.io/stream-chat-react-native/v3/#suggestionscontext), and\n * [Translation Context](https://getstream.github.io/stream-chat-react-native/v3/#translationcontext)\n */\nexport const MessageInput = <\n  At extends DefaultAttachmentType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  props: MessageInputProps<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const { disabled = false, members, watchers } = useChannelContext<At, Ch, Co, Ev, Me, Re, Us>();\n\n  const {\n    additionalTextInputProps,\n    asyncIds,\n    asyncUploads,\n    clearEditingState,\n    clearQuotedMessageState,\n    closeAttachmentPicker,\n    editing,\n    FileUploadPreview,\n    fileUploads,\n    giphyActive,\n    ImageUploadPreview,\n    imageUploads,\n    Input,\n    inputBoxRef,\n    InputButtons,\n    isValidMessage,\n    maxNumberOfFiles,\n    mentionedUsers,\n    numberOfUploads,\n    quotedMessage,\n    removeImage,\n    resetInput,\n    SendButton,\n    sending,\n    sendMessageAsync,\n    setGiphyActive,\n    setShowMoreOptions,\n    showMoreOptions,\n    ShowThreadMessageInChannelButton,\n    uploadNewImage,\n  } = useMessageInputContext<At, Ch, Co, Ev, Me, Re, Us>();\n\n  const { quotedRepliesEnabled, Reply } = useMessagesContext<At, Ch, Co, Ev, Me, Re, Us>();\n\n  const { componentType, suggestions, suggestionsTitle } = useSuggestionsContext<Co, Us>();\n\n  const { thread } = useThreadContext<At, Ch, Co, Ev, Me, Re, Us>();\n\n  const { t } = useTranslationContext();\n\n  return (\n    <MemoizedMessageInput\n      {...{\n        additionalTextInputProps,\n        asyncIds,\n        asyncUploads,\n        clearEditingState,\n        clearQuotedMessageState,\n        closeAttachmentPicker,\n        componentType,\n        disabled,\n        editing,\n        FileUploadPreview,\n        fileUploads,\n        giphyActive,\n        ImageUploadPreview,\n        imageUploads,\n        Input,\n        inputBoxRef,\n        InputButtons,\n        isValidMessage,\n        maxNumberOfFiles,\n        members,\n        mentionedUsers,\n        numberOfUploads,\n        quotedMessage,\n        quotedRepliesEnabled,\n        removeImage,\n        Reply,\n        resetInput,\n        SendButton,\n        sending,\n        sendMessageAsync,\n        setGiphyActive,\n        setShowMoreOptions,\n        showMoreOptions,\n        ShowThreadMessageInChannelButton,\n        suggestions,\n        suggestionsTitle,\n        t,\n        thread,\n        uploadNewImage,\n        watchers,\n      }}\n      {...props}\n    />\n  );\n};\n\nMessageInput.displayName = 'MessageInput{messageInput}';\n"]}