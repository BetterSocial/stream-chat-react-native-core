{"version":3,"sources":["Spinner.tsx"],"names":["styles","StyleSheet","create","spinner","height","justifyContent","margin","width","Spinner","rotation","theme","accent_blue","colors","animatedStyle","transform","rotate","value","duration","easing","Easing","linear","displayName"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAQA;;AACA;;;;;;;;;AAEA,IAAMA,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE,EADD;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,MAAM,EAAE,CAHD;AAIPC,IAAAA,KAAK,EAAE;AAJA;AADsB,CAAlB,CAAf;;AASO,IAAMC,OAAiB,GAAG,SAApBA,OAAoB,GAAM;AACrC,MAAMC,QAAQ,GAAG,2CAAe,CAAf,CAAjB;;AAEA,kBAKI,6BALJ;AAAA,kCACEC,KADF;AAAA,MAEcC,WAFd,mBAEIC,MAFJ,CAEcD,WAFd;AAAA,MAGIR,OAHJ,mBAGIA,OAHJ;;AAOA,MAAMU,aAAa,GAAG,6CAA4B;AAAA,WAAO;AACvDC,MAAAA,SAAS,EAAE,CACT;AACEC,QAAAA,MAAM,EAAKN,QAAQ,CAACO,KAAd;AADR,OADS;AAD4C,KAAP;AAAA,GAA5B,CAAtB;AAQA,wBAAU,YAAM;AACdP,IAAAA,QAAQ,CAACO,KAAT,GAAiB,uCACf,uCAAW,GAAX,EAAgB;AACdC,MAAAA,QAAQ,EAAE,GADI;AAEdC,MAAAA,MAAM,EAAEC,8BAAOC;AAFD,KAAhB,CADe,EAKf,CAAC,CALc,CAAjB;AAOD,GARD,EAQG,EARH;AAUA,SACE,gCAAC,iCAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE,CAACpB,MAAM,CAACG,OAAR,EAAiBU,aAAjB,EAAgCV,OAAhC,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,gCAAC,gBAAD;AAAS,IAAA,SAAS,EAAEQ,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAjCM;;;AAmCPH,OAAO,CAACa,WAAR,GAAsB,kBAAtB","sourcesContent":["import React, { useEffect } from 'react';\nimport { StyleSheet, ViewStyle } from 'react-native';\nimport Animated, {\n  Easing,\n  useAnimatedStyle,\n  useSharedValue,\n  withRepeat,\n  withTiming,\n} from 'react-native-reanimated';\n\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { Loading } from '../../icons/Loading';\n\nconst styles = StyleSheet.create({\n  spinner: {\n    height: 16,\n    justifyContent: 'center',\n    margin: 5,\n    width: 16,\n  },\n});\n\nexport const Spinner: React.FC = () => {\n  const rotation = useSharedValue(0);\n\n  const {\n    theme: {\n      colors: { accent_blue },\n      spinner,\n    },\n  } = useTheme();\n\n  const animatedStyle = useAnimatedStyle<ViewStyle>(() => ({\n    transform: [\n      {\n        rotate: `${rotation.value}deg`,\n      },\n    ],\n  }));\n\n  useEffect(() => {\n    rotation.value = withRepeat(\n      withTiming(360, {\n        duration: 800,\n        easing: Easing.linear,\n      }),\n      -1,\n    );\n  }, []);\n\n  return (\n    <Animated.View style={[styles.spinner, animatedStyle, spinner]}>\n      <Loading stopColor={accent_blue} />\n    </Animated.View>\n  );\n};\n\nSpinner.displayName = 'Spinner{spinner}';\n"]}