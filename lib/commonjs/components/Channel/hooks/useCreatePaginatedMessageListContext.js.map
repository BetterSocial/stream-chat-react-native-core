{"version":3,"sources":["useCreatePaginatedMessageListContext.ts"],"names":["useCreatePaginatedMessageListContext","channelId","hasMore","loadingMore","loadingMoreRecent","loadMore","loadMoreRecent","messages","setLoadingMore","setLoadingMoreRecent","messagesUpdated","map","deleted_at","latest_reactions","reply_count","status","updated_at","type","join","toISOString","paginatedMessagesContext"],"mappings":";;;;;AAAA;;AAcO,IAAMA,oCAAoC,GAAG,SAAvCA,oCAAuC,OAoB9C;AAAA,MAXJC,SAWI,QAXJA,SAWI;AAAA,MAVJC,OAUI,QAVJA,OAUI;AAAA,MATJC,WASI,QATJA,WASI;AAAA,MARJC,iBAQI,QARJA,iBAQI;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJC,cAMI,QANJA,cAMI;AAAA,MALJC,QAKI,QALJA,QAKI;AAAA,MAJJC,cAII,QAJJA,cAII;AAAA,MAHJC,oBAGI,QAHJA,oBAGI;AACJ,MAAMC,eAAe,GAAGH,QAAQ,CAC7BI,GADqB,CAEpB;AAAA,QAAGC,UAAH,SAAGA,UAAH;AAAA,QAAeC,gBAAf,SAAeA,gBAAf;AAAA,QAAiCC,WAAjC,SAAiCA,WAAjC;AAAA,QAA8CC,MAA9C,SAA8CA,MAA9C;AAAA,QAAsDC,UAAtD,SAAsDA,UAAtD;AAAA,gBACKJ,UADL,IAEIC,gBAAgB,GAAGA,gBAAgB,CAACF,GAAjB,CAAqB;AAAA,UAAGM,IAAH,SAAGA,IAAH;AAAA,aAAcA,IAAd;AAAA,KAArB,EAAyCC,IAAzC,EAAH,GAAqD,EAFzE,IAGKJ,WAHL,GAGmBC,MAHnB,GAG4BC,UAAU,CAACG,WAAX,EAH5B;AAAA,GAFoB,EAOrBD,IAPqB,EAAxB;AASA,MAAME,wBAAsF,GAC1F,oBACE;AAAA,WAAO;AACLlB,MAAAA,OAAO,EAAPA,OADK;AAELC,MAAAA,WAAW,EAAXA,WAFK;AAGLC,MAAAA,iBAAiB,EAAjBA,iBAHK;AAILC,MAAAA,QAAQ,EAARA,QAJK;AAKLC,MAAAA,cAAc,EAAdA,cALK;AAMLC,MAAAA,QAAQ,EAARA,QANK;AAOLC,MAAAA,cAAc,EAAdA,cAPK;AAQLC,MAAAA,oBAAoB,EAApBA;AARK,KAAP;AAAA,GADF,EAWE,CAACR,SAAD,EAAYC,OAAZ,EAAqBE,iBAArB,EAAwCD,WAAxC,EAAqDO,eAArD,CAXF,CADF;AAeA,SAAOU,wBAAP;AACD,CA9CM","sourcesContent":["import { useMemo } from 'react';\n\nimport type { PaginatedMessageListContextValue } from '../../../contexts/paginatedMessageListContext/PaginatedMessageListContext';\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../../types/types';\n\nexport const useCreatePaginatedMessageListContext = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>({\n  channelId,\n  hasMore,\n  loadingMore,\n  loadingMoreRecent,\n  loadMore,\n  loadMoreRecent,\n  messages,\n  setLoadingMore,\n  setLoadingMoreRecent,\n}: PaginatedMessageListContextValue<At, Ch, Co, Ev, Me, Re, Us> & {\n  channelId?: string;\n}) => {\n  const messagesUpdated = messages\n    .map(\n      ({ deleted_at, latest_reactions, reply_count, status, updated_at }) =>\n        `${deleted_at}${\n          latest_reactions ? latest_reactions.map(({ type }) => type).join() : ''\n        }${reply_count}${status}${updated_at.toISOString()}`,\n    )\n    .join();\n\n  const paginatedMessagesContext: PaginatedMessageListContextValue<At, Ch, Co, Ev, Me, Re, Us> =\n    useMemo(\n      () => ({\n        hasMore,\n        loadingMore,\n        loadingMoreRecent,\n        loadMore,\n        loadMoreRecent,\n        messages,\n        setLoadingMore,\n        setLoadingMoreRecent,\n      }),\n      [channelId, hasMore, loadingMoreRecent, loadingMore, messagesUpdated],\n    );\n\n  return paginatedMessagesContext;\n};\n"]}