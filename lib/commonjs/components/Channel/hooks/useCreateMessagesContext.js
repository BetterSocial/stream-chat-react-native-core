Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useCreateMessagesContext = void 0;

var _react = require("react");

var useCreateMessagesContext = function useCreateMessagesContext(_ref) {
  var additionalTouchableProps = _ref.additionalTouchableProps,
      animatedLongPress = _ref.animatedLongPress,
      Attachment = _ref.Attachment,
      AttachmentActions = _ref.AttachmentActions,
      blockUser = _ref.blockUser,
      Card = _ref.Card,
      CardCover = _ref.CardCover,
      CardFooter = _ref.CardFooter,
      CardHeader = _ref.CardHeader,
      channelId = _ref.channelId,
      copyMessage = _ref.copyMessage,
      DateHeader = _ref.DateHeader,
      deleteMessage = _ref.deleteMessage,
      disableTypingIndicator = _ref.disableTypingIndicator,
      dismissKeyboardOnMessageTouch = _ref.dismissKeyboardOnMessageTouch,
      editMessage = _ref.editMessage,
      enableMessageGroupingByUser = _ref.enableMessageGroupingByUser,
      FileAttachment = _ref.FileAttachment,
      FileAttachmentGroup = _ref.FileAttachmentGroup,
      FileAttachmentIcon = _ref.FileAttachmentIcon,
      flagMessage = _ref.flagMessage,
      FlatList = _ref.FlatList,
      forceAlignMessages = _ref.forceAlignMessages,
      formatDate = _ref.formatDate,
      Gallery = _ref.Gallery,
      Giphy = _ref.Giphy,
      handleBlock = _ref.handleBlock,
      handleCopy = _ref.handleCopy,
      handleDelete = _ref.handleDelete,
      handleEdit = _ref.handleEdit,
      handleFlag = _ref.handleFlag,
      handleMute = _ref.handleMute,
      handleQuotedReply = _ref.handleQuotedReply,
      handleReaction = _ref.handleReaction,
      handleRetry = _ref.handleRetry,
      handleThreadReply = _ref.handleThreadReply,
      initialScrollToFirstUnreadMessage = _ref.initialScrollToFirstUnreadMessage,
      InlineDateSeparator = _ref.InlineDateSeparator,
      InlineUnreadIndicator = _ref.InlineUnreadIndicator,
      legacyImageViewerSwipeBehaviour = _ref.legacyImageViewerSwipeBehaviour,
      markdownRules = _ref.markdownRules,
      Message = _ref.Message,
      messageActions = _ref.messageActions,
      MessageAvatar = _ref.MessageAvatar,
      MessageContent = _ref.MessageContent,
      messageContentOrder = _ref.messageContentOrder,
      MessageDeleted = _ref.MessageDeleted,
      MessageFooter = _ref.MessageFooter,
      MessageHeader = _ref.MessageHeader,
      MessageList = _ref.MessageList,
      MessageReplies = _ref.MessageReplies,
      MessageRepliesAvatars = _ref.MessageRepliesAvatars,
      MessageSimple = _ref.MessageSimple,
      MessageStatus = _ref.MessageStatus,
      MessageSystem = _ref.MessageSystem,
      MessageText = _ref.MessageText,
      mutesEnabled = _ref.mutesEnabled,
      muteUser = _ref.muteUser,
      myMessageTheme = _ref.myMessageTheme,
      onDoubleTapMessage = _ref.onDoubleTapMessage,
      onLongPressMessage = _ref.onLongPressMessage,
      onPressInMessage = _ref.onPressInMessage,
      onPressMessage = _ref.onPressMessage,
      OverlayReactionList = _ref.OverlayReactionList,
      quotedRepliesEnabled = _ref.quotedRepliesEnabled,
      quotedReply = _ref.quotedReply,
      ReactionList = _ref.ReactionList,
      reactionsEnabled = _ref.reactionsEnabled,
      removeMessage = _ref.removeMessage,
      Reply = _ref.Reply,
      retry = _ref.retry,
      retrySendMessage = _ref.retrySendMessage,
      ScrollToBottomButton = _ref.ScrollToBottomButton,
      selectReaction = _ref.selectReaction,
      setEditingState = _ref.setEditingState,
      setQuotedMessageState = _ref.setQuotedMessageState,
      supportedReactions = _ref.supportedReactions,
      threadRepliesEnabled = _ref.threadRepliesEnabled,
      threadReply = _ref.threadReply,
      TypingIndicator = _ref.TypingIndicator,
      TypingIndicatorContainer = _ref.TypingIndicatorContainer,
      updateMessage = _ref.updateMessage,
      UrlPreview = _ref.UrlPreview;
  var additionalTouchablePropsLength = Object.keys(additionalTouchableProps || {}).length;
  var markdownRulesLength = Object.keys(markdownRules || {}).length;
  var messageContentOrderValue = messageContentOrder.join();
  var supportedReactionsLength = supportedReactions.length;
  var messagesContext = (0, _react.useMemo)(function () {
    return {
      additionalTouchableProps: additionalTouchableProps,
      animatedLongPress: animatedLongPress,
      Attachment: Attachment,
      AttachmentActions: AttachmentActions,
      blockUser: blockUser,
      Card: Card,
      CardCover: CardCover,
      CardFooter: CardFooter,
      CardHeader: CardHeader,
      copyMessage: copyMessage,
      DateHeader: DateHeader,
      deleteMessage: deleteMessage,
      disableTypingIndicator: disableTypingIndicator,
      dismissKeyboardOnMessageTouch: dismissKeyboardOnMessageTouch,
      editMessage: editMessage,
      enableMessageGroupingByUser: enableMessageGroupingByUser,
      FileAttachment: FileAttachment,
      FileAttachmentGroup: FileAttachmentGroup,
      FileAttachmentIcon: FileAttachmentIcon,
      flagMessage: flagMessage,
      FlatList: FlatList,
      forceAlignMessages: forceAlignMessages,
      formatDate: formatDate,
      Gallery: Gallery,
      Giphy: Giphy,
      handleBlock: handleBlock,
      handleCopy: handleCopy,
      handleDelete: handleDelete,
      handleEdit: handleEdit,
      handleFlag: handleFlag,
      handleMute: handleMute,
      handleQuotedReply: handleQuotedReply,
      handleReaction: handleReaction,
      handleRetry: handleRetry,
      handleThreadReply: handleThreadReply,
      initialScrollToFirstUnreadMessage: initialScrollToFirstUnreadMessage,
      InlineDateSeparator: InlineDateSeparator,
      InlineUnreadIndicator: InlineUnreadIndicator,
      legacyImageViewerSwipeBehaviour: legacyImageViewerSwipeBehaviour,
      markdownRules: markdownRules,
      Message: Message,
      messageActions: messageActions,
      MessageAvatar: MessageAvatar,
      MessageContent: MessageContent,
      messageContentOrder: messageContentOrder,
      MessageDeleted: MessageDeleted,
      MessageFooter: MessageFooter,
      MessageHeader: MessageHeader,
      MessageList: MessageList,
      MessageReplies: MessageReplies,
      MessageRepliesAvatars: MessageRepliesAvatars,
      MessageSimple: MessageSimple,
      MessageStatus: MessageStatus,
      MessageSystem: MessageSystem,
      MessageText: MessageText,
      mutesEnabled: mutesEnabled,
      muteUser: muteUser,
      myMessageTheme: myMessageTheme,
      onDoubleTapMessage: onDoubleTapMessage,
      onLongPressMessage: onLongPressMessage,
      onPressInMessage: onPressInMessage,
      onPressMessage: onPressMessage,
      OverlayReactionList: OverlayReactionList,
      quotedRepliesEnabled: quotedRepliesEnabled,
      quotedReply: quotedReply,
      ReactionList: ReactionList,
      reactionsEnabled: reactionsEnabled,
      removeMessage: removeMessage,
      Reply: Reply,
      retry: retry,
      retrySendMessage: retrySendMessage,
      ScrollToBottomButton: ScrollToBottomButton,
      selectReaction: selectReaction,
      setEditingState: setEditingState,
      setQuotedMessageState: setQuotedMessageState,
      supportedReactions: supportedReactions,
      threadRepliesEnabled: threadRepliesEnabled,
      threadReply: threadReply,
      TypingIndicator: TypingIndicator,
      TypingIndicatorContainer: TypingIndicatorContainer,
      updateMessage: updateMessage,
      UrlPreview: UrlPreview
    };
  }, [additionalTouchablePropsLength, channelId, disableTypingIndicator, dismissKeyboardOnMessageTouch, initialScrollToFirstUnreadMessage, markdownRulesLength, messageContentOrderValue, supportedReactionsLength]);
  return messagesContext;
};

exports.useCreateMessagesContext = useCreateMessagesContext;
//# sourceMappingURL=useCreateMessagesContext.js.map