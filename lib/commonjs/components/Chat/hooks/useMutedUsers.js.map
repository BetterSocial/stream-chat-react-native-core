{"version":3,"sources":["useMutedUsers.ts"],"names":["useMutedUsers","client","mutedUsers","setMutedUsers","handleEvent","event","mutes","me","on","off"],"mappings":";;;;;;;;;AAAA;;AAeO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAS3BC,MAT2B,EAUxB;AACH,kBAAoC,qBAAqBA,MAAM,CAACC,UAAP,IAAqB,EAA1C,CAApC;AAAA;AAAA,MAAOA,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,wBAAU,YAAM;AACd,QAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAA8C;AAChEF,MAAAA,aAAa,CAAC,UAACG,KAAD;AAAA;;AAAA,eAAW,cAAAD,KAAK,CAACE,EAAN,+BAAUD,KAAV,KAAmBA,KAAnB,IAA4B,EAAvC;AAAA,OAAD,CAAb;AACD,KAFD;;AAIAL,IAAAA,MAAM,CAACO,EAAP,CAAU,4BAAV,EAAwCJ,WAAxC;AACA,WAAO;AAAA,aAAMH,MAAM,CAACQ,GAAP,CAAW,4BAAX,EAAyCL,WAAzC,CAAN;AAAA,KAAP;AACD,GAPD,EAOG,CAACD,aAAD,CAPH;AASA,SAAOD,UAAP;AACD,CAvBM","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport type { Event, Mute, StreamChat } from 'stream-chat';\n\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../../types/types';\n\nexport const useMutedUsers = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  client: StreamChat<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const [mutedUsers, setMutedUsers] = useState<Mute<Us>[]>(client.mutedUsers || []);\n\n  useEffect(() => {\n    const handleEvent = (event: Event<At, Ch, Co, Ev, Me, Re, Us>) => {\n      setMutedUsers((mutes) => event.me?.mutes || mutes || []);\n    };\n\n    client.on('notification.mutes_updated', handleEvent);\n    return () => client.off('notification.mutes_updated', handleEvent);\n  }, [setMutedUsers]);\n\n  return mutedUsers;\n};\n"]}