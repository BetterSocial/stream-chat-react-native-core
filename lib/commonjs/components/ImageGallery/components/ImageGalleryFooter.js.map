{"version":3,"sources":["ImageGalleryFooter.tsx"],"names":["ReanimatedSafeAreaView","Animated","createAnimatedComponent","SafeAreaView","styles","StyleSheet","create","centerContainer","alignItems","flex","justifyContent","imageCountText","fontSize","fontWeight","innerContainer","flexDirection","height","leftContainer","marginLeft","rightContainer","marginRight","wrapper","bottom","left","position","right","ImageGalleryFooter","props","centerElement","GridIcon","leftElement","opacity","openGridView","photo","photoLength","rightElement","selectedIndex","ShareIcon","visible","setHeight","shareMenuOpen","setShareMenuOpen","theme","colors","black","white","imageGallery","footer","container","t","footerStyle","value","transform","translateY","Extrapolate","CLAMP","share","fileName","user","name","user_id","messageId","fromUrl","uri","localImage","type","url","console","log","event","nativeEvent","layout","backgroundColor","color","index","displayName"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { SafeAreaView, StyleSheet, Text, TouchableOpacity, View, ViewStyle } from 'react-native';\nimport Animated, { Extrapolate, interpolate, useAnimatedStyle } from 'react-native-reanimated';\n\nimport { useTheme } from '../../../contexts/themeContext/ThemeContext';\nimport { useTranslationContext } from '../../../contexts/translationContext/TranslationContext';\nimport { Grid as GridIconDefault, Share as ShareIconDefault } from '../../../icons';\nimport { deleteFile, saveFile, shareImage } from '../../../native';\n\nimport type { Photo } from '../ImageGallery';\n\nimport type { DefaultUserType, UnknownType } from '../../../types/types';\n\nconst ReanimatedSafeAreaView = Animated.createAnimatedComponent\n  ? Animated.createAnimatedComponent(SafeAreaView)\n  : SafeAreaView;\n\nconst styles = StyleSheet.create({\n  centerContainer: {\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'center',\n  },\n  imageCountText: {\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  innerContainer: {\n    flexDirection: 'row',\n    height: 56,\n  },\n  leftContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    marginLeft: 8,\n  },\n  rightContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    marginRight: 8,\n  },\n  wrapper: {\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n  },\n});\n\nexport type ImageGalleryFooterCustomComponent<Us extends UnknownType = DefaultUserType> = ({\n  openGridView,\n  photo,\n  share,\n  shareMenuOpen,\n}: {\n  openGridView: () => void;\n  share: () => Promise<void>;\n  shareMenuOpen: boolean;\n  photo?: Photo<Us>;\n}) => React.ReactElement | null;\n\nexport type ImageGalleryFooterCustomComponentProps<Us extends UnknownType = DefaultUserType> = {\n  centerElement?: ImageGalleryFooterCustomComponent<Us>;\n  GridIcon?: React.ReactElement;\n  leftElement?: ImageGalleryFooterCustomComponent<Us>;\n  rightElement?: ImageGalleryFooterCustomComponent<Us>;\n  ShareIcon?: React.ReactElement;\n};\n\ntype Props<Us extends UnknownType = DefaultUserType> =\n  ImageGalleryFooterCustomComponentProps<Us> & {\n    opacity: Animated.SharedValue<number>;\n    openGridView: () => void;\n    photo: Photo<Us>;\n    photoLength: number;\n    selectedIndex: number;\n    visible: Animated.SharedValue<number>;\n  };\n\nexport const ImageGalleryFooter = <Us extends UnknownType = DefaultUserType>(props: Props<Us>) => {\n  const {\n    centerElement,\n    GridIcon,\n    leftElement,\n    opacity,\n    openGridView,\n    photo,\n    photoLength,\n    rightElement,\n    selectedIndex,\n    ShareIcon,\n    visible,\n  } = props;\n  const [height, setHeight] = useState(200);\n  const [shareMenuOpen, setShareMenuOpen] = useState(false);\n  const {\n    theme: {\n      colors: { black, white },\n      imageGallery: {\n        footer: {\n          centerContainer,\n          container,\n          imageCountText,\n          innerContainer,\n          leftContainer,\n          rightContainer,\n        },\n      },\n    },\n  } = useTheme();\n  const { t } = useTranslationContext();\n\n  const footerStyle = useAnimatedStyle<ViewStyle>(\n    () => ({\n      opacity: opacity.value,\n      transform: [\n        {\n          translateY: interpolate(visible.value, [0, 1], [height, 0], Extrapolate.CLAMP),\n        },\n      ],\n    }),\n    [],\n  );\n\n  const share = async () => {\n    setShareMenuOpen(true);\n    try {\n      const localImage = await saveFile({\n        fileName: `${photo.user?.name || photo.user_id || 'ChatPhoto'}-${\n          photo.messageId\n        }-${selectedIndex}.jpg`,\n        fromUrl: photo.uri,\n      });\n      await shareImage({ type: 'image/jpeg', url: localImage });\n      await deleteFile({ uri: localImage });\n    } catch (error) {\n      console.log(error);\n    }\n    setShareMenuOpen(false);\n  };\n\n  return (\n    <Animated.View\n      onLayout={(event) => setHeight(event.nativeEvent.layout.height)}\n      pointerEvents={'box-none'}\n      style={styles.wrapper}\n    >\n      <ReanimatedSafeAreaView style={[{ backgroundColor: white }, container, footerStyle]}>\n        <View style={[styles.innerContainer, innerContainer]}>\n          {leftElement ? (\n            leftElement({ openGridView, photo, share, shareMenuOpen })\n          ) : (\n            <TouchableOpacity disabled={shareMenuOpen} onPress={share}>\n              <View style={[styles.leftContainer, leftContainer]}>\n                {ShareIcon ? ShareIcon : <ShareIconDefault />}\n              </View>\n            </TouchableOpacity>\n          )}\n          {centerElement ? (\n            centerElement({ openGridView, photo, share, shareMenuOpen })\n          ) : (\n            <View style={[styles.centerContainer, centerContainer]}>\n              <Text style={[styles.imageCountText, { color: black }, imageCountText]}>\n                {t('{{ index }} of {{ photoLength }}', {\n                  index: photoLength - selectedIndex,\n                  photoLength,\n                })}\n              </Text>\n            </View>\n          )}\n          {rightElement ? (\n            rightElement({ openGridView, photo, share, shareMenuOpen })\n          ) : (\n            <TouchableOpacity onPress={openGridView}>\n              <View style={[styles.rightContainer, rightContainer]}>\n                {GridIcon ? GridIcon : <GridIconDefault />}\n              </View>\n            </TouchableOpacity>\n          )}\n        </View>\n      </ReanimatedSafeAreaView>\n    </Animated.View>\n  );\n};\n\nImageGalleryFooter.displayName = 'ImageGalleryFooter{imageGallery{footer}}';\n"]}