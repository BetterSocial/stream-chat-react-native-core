{"version":3,"sources":["ImageGallery.tsx"],"names":["isAndroid","Platform","OS","fullScreenHeight","Dimensions","get","height","measuredScreenHeight","screenWidth","halfScreenWidth","MARGIN","HasPinched","IsSwiping","ImageGallery","props","imageGalleryCustomComponents","imageGalleryGridHandleHeight","imageGalleryGridSnapPoints","numberOfImageGalleryGridColumns","overlayOpacity","visible","theme","white_snow","colors","backgroundColor","imageGallery","overlay","setBlurType","setOverlay","translucentStatusBar","image","images","setImage","statusBarHeight","StatusBar","currentHeight","bottomBarHeight","androidScreenHeightAdjustment","screenHeight","halfScreenHeight","quarterScreenHeight","snapPoints","React","useMemo","bottomSheetRef","currentBottomSheetIndex","setCurrentBottomSheetIndex","animatedBottomSheetIndex","showScreen","fadeScreen","show","value","duration","easing","Easing","out","ease","Keyboard","dismiss","currentImageHeight","setCurrentImageHeight","selectedIndex","setSelectedIndex","index","headerFooterVisible","hasHitBottomScale","hasHitTopScale","doubleTapRef","panRef","pinchRef","singleTapRef","offsetX","offsetY","translateX","translateY","offsetScale","scale","translationX","originX","originY","focalX","focalY","oldFocalX","oldFocalY","focalOffsetX","focalOffsetY","adjustedFocalX","adjustedFocalY","tapX","tapY","numberOfPinchFingers","isSwiping","isPinch","hasPinched","resetTouchValues","UNDETERMINED","resetMovementValues","resetVisibleValues","photos","reduce","acc","cur","attachmentImages","attachments","filter","attachment","type","title_link","og_scrape_url","image_url","thumb_url","attachmentPhotos","map","attachmentImage","created_at","id","messageId","uri","user","user_id","photoLength","length","updatePosition","newIndex","findIndex","photo","url","uriForCurrentImage","Image","getSize","width","imageHeight","Math","floor","onPan","onActive","evt","numberOfPointers","TRUE","FALSE","translationY","maxXYRatio","abs","localEvtScale","onFinish","finalXPosition","velocityX","finalYPosition","velocityY","clamp","deceleration","velocity","undefined","onStart","onPinch","triggerHaptic","onSingleTap","onDoubleTap","absoluteX","absoluteY","translateYTopBottom","headerFooterOpacity","pagerStyle","transform","scaleX","containerBackground","opacity","showScreenStyle","closeGridView","current","close","openGridView","snapTo","StyleSheet","absoluteFillObject","absoluteFill","styles","animatedContainer","i","marginRight","header","footer","gridHandle","grid","lowerBound","upperBound","min","max","create","alignItems","flexDirection","displayName"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport {\n  Dimensions,\n  Image,\n  ImageStyle,\n  Keyboard,\n  Platform,\n  StatusBar,\n  StyleSheet,\n  ViewStyle,\n} from 'react-native';\nimport BottomSheet from '@gorhom/bottom-sheet';\nimport {\n  PanGestureHandler,\n  PanGestureHandlerGestureEvent,\n  PinchGestureHandler,\n  PinchGestureHandlerGestureEvent,\n  TapGestureHandler,\n  TapGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\nimport Animated, {\n  cancelAnimation,\n  Easing,\n  interpolate,\n  runOnJS,\n  runOnUI,\n  useAnimatedGestureHandler,\n  useAnimatedStyle,\n  useDerivedValue,\n  useSharedValue,\n  withDecay,\n  withTiming,\n} from 'react-native-reanimated';\n\nimport { AnimatedGalleryImage } from './components/AnimatedGalleryImage';\nimport {\n  ImageGalleryFooter,\n  ImageGalleryFooterCustomComponentProps,\n} from './components/ImageGalleryFooter';\nimport {\n  ImageGalleryHeader,\n  ImageGalleryHeaderCustomComponentProps,\n} from './components/ImageGalleryHeader';\nimport { ImageGalleryOverlay } from './components/ImageGalleryOverlay';\nimport { ImageGalleryGridImageComponents, ImageGrid } from './components/ImageGrid';\nimport {\n  ImageGalleryGridHandleCustomComponentProps,\n  ImageGridHandle,\n} from './components/ImageGridHandle';\n\nimport { useImageGalleryContext } from '../../contexts/imageGalleryContext/ImageGalleryContext';\nimport { useOverlayContext } from '../../contexts/overlayContext/OverlayContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { triggerHaptic } from '../../native';\nimport { vh, vw } from '../../utils/utils';\n\nimport type { UserResponse } from 'stream-chat';\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../types/types';\n\nconst isAndroid = Platform.OS === 'android';\nconst fullScreenHeight = Dimensions.get('screen').height;\nconst measuredScreenHeight = vh(100);\nconst screenWidth = vw(100);\nconst halfScreenWidth = vw(50);\nconst MARGIN = 32;\n\nexport enum HasPinched {\n  FALSE = 0,\n  TRUE,\n}\n\nexport enum IsSwiping {\n  UNDETERMINED = 0,\n  TRUE,\n  FALSE,\n}\n\nexport type ImageGalleryCustomComponents<Us extends UnknownType = DefaultUserType> = {\n  /**\n   * Override props for following UI components, which are part of [image gallery](https://github.com/GetStream/stream-chat-react-native/wiki/Cookbook-v3.0#gallery-components).\n   *\n   * - [ImageGalleryFooter](#ImageGalleryFooter)\n   *\n   * - [ImageGrid](#ImageGrid)\n   *\n   * - [ImageGridHandle](#ImageGridHandle)\n   *\n   * - [ImageGalleryHeader](#ImageGalleryHeader)\n   *\n   * e.g.,\n   *\n   * ```js\n   * {\n   *  footer: {\n   *    ShareIcon: CustomShareIconComponent\n   *  },\n   *  grid: {\n   *    avatarComponent: CustomAvatarComponent\n   *  },\n   *  gridHandle: {\n   *    centerComponent: CustomCenterComponent\n   *  },\n   *  header: {\n   *    CloseIcon: CustomCloseButtonComponent\n   *  },\n   * }\n   * ```\n   * @overrideType object\n   */\n  imageGalleryCustomComponents?: {\n    footer?: ImageGalleryFooterCustomComponentProps<Us>;\n    grid?: ImageGalleryGridImageComponents<Us>;\n    gridHandle?: ImageGalleryGridHandleCustomComponentProps;\n    header?: ImageGalleryHeaderCustomComponentProps<Us>;\n  };\n};\n\ntype Props<Us extends UnknownType = DefaultUserType> = ImageGalleryCustomComponents<Us> & {\n  overlayOpacity: Animated.SharedValue<number>;\n  visible: boolean;\n  imageGalleryGridHandleHeight?: number;\n  /**\n   * This should be\n   */\n  imageGalleryGridSnapPoints?: [string | number, string | number];\n  numberOfImageGalleryGridColumns?: number;\n};\n\nexport const ImageGallery = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  props: Props<Us>,\n) => {\n  const {\n    imageGalleryCustomComponents,\n    imageGalleryGridHandleHeight,\n    imageGalleryGridSnapPoints,\n    numberOfImageGalleryGridColumns,\n    overlayOpacity,\n    visible,\n  } = props;\n  const {\n    theme: {\n      colors: { white_snow },\n      imageGallery: { backgroundColor },\n    },\n  } = useTheme();\n  const { overlay, setBlurType, setOverlay, translucentStatusBar } = useOverlayContext();\n  const { image, images, setImage } = useImageGalleryContext<At, Ch, Co, Ev, Me, Re, Us>();\n\n  /**\n   * Height constants\n   */\n  const statusBarHeight = StatusBar.currentHeight ?? 0;\n  const bottomBarHeight = fullScreenHeight - measuredScreenHeight - statusBarHeight;\n  const androidScreenHeightAdjustment = translucentStatusBar\n    ? bottomBarHeight === statusBarHeight || bottomBarHeight < 0\n      ? 0\n      : statusBarHeight\n    : bottomBarHeight === statusBarHeight || bottomBarHeight < 0\n    ? -statusBarHeight\n    : 0;\n  const screenHeight = isAndroid\n    ? Dimensions.get('window').height + androidScreenHeightAdjustment\n    : vh(100);\n  const halfScreenHeight = screenHeight / 2;\n  const quarterScreenHeight = screenHeight / 4;\n  const snapPoints = React.useMemo(() => [0, (screenHeight * 9) / 10], []);\n\n  /**\n   * BottomSheet ref\n   */\n  const bottomSheetRef = useRef<BottomSheet>(null);\n\n  /**\n   * BottomSheet state\n   */\n  const [currentBottomSheetIndex, setCurrentBottomSheetIndex] = useState(0);\n  const animatedBottomSheetIndex = useSharedValue(0);\n\n  /**\n   * Fade animation for screen, it is always rendered with pointerEvents\n   * set to none for fast opening\n   */\n  const showScreen = useSharedValue(0);\n  const fadeScreen = (show: boolean) => {\n    'worklet';\n    showScreen.value = withTiming(show ? 1 : 0, {\n      duration: 250,\n      easing: Easing.out(Easing.ease),\n    });\n  };\n\n  /**\n   * Run the fade animation on visible change\n   */\n  useEffect(() => {\n    if (visible) {\n      Keyboard.dismiss();\n    }\n    fadeScreen(visible);\n  }, [visible]);\n\n  /**\n   * Image height from URL or default to full screen height\n   */\n  const [currentImageHeight, setCurrentImageHeight] = useState<number>(screenHeight);\n\n  /**\n   * JS and UI index values, the JS follows the UI but is needed\n   * for rendering the virtualized image list\n   */\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const index = useSharedValue(0);\n\n  /**\n   * Header visible value for animating in out\n   */\n  const headerFooterVisible = useSharedValue(1);\n\n  /**\n   * Values to track scale for haptic feedback firing\n   */\n  const hasHitBottomScale = useSharedValue(1);\n  const hasHitTopScale = useSharedValue(0);\n\n  /**\n   * Gesture handler refs\n   */\n  const doubleTapRef = useRef<TapGestureHandler>(null);\n  const panRef = useRef<PanGestureHandler>(null);\n  const pinchRef = useRef<PinchGestureHandler>(null);\n  const singleTapRef = useRef<TapGestureHandler>(null);\n\n  /**\n   * Shared values for movement\n   */\n  const offsetX = useSharedValue(0);\n  const offsetY = useSharedValue(0);\n  const translateX = useSharedValue(0);\n  const translateY = useSharedValue(0);\n  const offsetScale = useSharedValue(1);\n  const scale = useSharedValue(1);\n  const translationX = useSharedValue(0);\n\n  /**\n   * Shared values for touch tracking\n   */\n  const originX = useSharedValue(0);\n  const originY = useSharedValue(0);\n  const focalX = useSharedValue(0);\n  const focalY = useSharedValue(0);\n  const oldFocalX = useSharedValue(0);\n  const oldFocalY = useSharedValue(0);\n  const focalOffsetX = useSharedValue(0);\n  const focalOffsetY = useSharedValue(0);\n  const adjustedFocalX = useSharedValue(0);\n  const adjustedFocalY = useSharedValue(0);\n  const tapX = useSharedValue(0);\n  const tapY = useSharedValue(0);\n\n  /**\n   * Shared values for gesture tracking\n   */\n  const numberOfPinchFingers = useSharedValue(0);\n  const isSwiping = useSharedValue(0);\n  const isPinch = useSharedValue(false);\n  const hasPinched = useSharedValue(0);\n\n  /**\n   * Reset gesture values for use on touch release\n   */\n  const resetTouchValues = () => {\n    'worklet';\n    focalX.value = 0;\n    focalY.value = 0;\n    oldFocalX.value = 0;\n    oldFocalY.value = 0;\n    originX.value = 0;\n    originY.value = 0;\n    focalOffsetX.value = 0;\n    focalOffsetY.value = 0;\n    numberOfPinchFingers.value = 0;\n    isPinch.value = false;\n    isSwiping.value = IsSwiping.UNDETERMINED;\n  };\n\n  /**\n   * Reset movement values for use on selected photo change\n   */\n  const resetMovementValues = () => {\n    'worklet';\n    translateX.value = 0;\n    translateY.value = 0;\n    scale.value = 1;\n    offsetScale.value = 1;\n  };\n\n  /**\n   * Reset all key values for visible\n   */\n  const resetVisibleValues = () => {\n    'worklet';\n    resetTouchValues();\n    resetMovementValues();\n    headerFooterVisible.value = 1;\n    offsetX.value = 0;\n    offsetY.value = 0;\n    adjustedFocalX.value = 0;\n    adjustedFocalY.value = 0;\n    tapX.value = 0;\n    tapY.value = 0;\n  };\n\n  useEffect(() => {\n    if (!visible) {\n      resetVisibleValues();\n    }\n  }, [visible]);\n\n  /**\n   * Photos array created from all currently available\n   * photo attachments\n   */\n  const photos = images.reduce((acc: Photo<Us>[], cur) => {\n    const attachmentImages =\n      cur.attachments?.filter(\n        (attachment) =>\n          attachment.type === 'image' &&\n          !attachment.title_link &&\n          !attachment.og_scrape_url &&\n          (attachment.image_url || attachment.thumb_url),\n      ) || [];\n\n    const attachmentPhotos = attachmentImages.map((attachmentImage) => ({\n      created_at: cur.created_at,\n      id: `photoId-${cur.id}-${attachmentImage.image_url || attachmentImage.thumb_url}`,\n      messageId: cur.id,\n      uri: attachmentImage.image_url || attachmentImage.thumb_url || '',\n      user: cur.user,\n      user_id: cur.user_id,\n    }));\n\n    return [...acc, ...attachmentPhotos];\n  }, []);\n\n  /**\n   * Photos length needs to be kept as a const here so if the length\n   * changes it causes the pan gesture handler function to refresh. This\n   * does not work if the calculation for the length of the array is left\n   * inside the gesture handler as it will have an array as a dependency\n   */\n  const photoLength = photos.length;\n\n  /**\n   * Set selected photo when changed via pressing in the message list\n   */\n  useEffect(() => {\n    const updatePosition = (newIndex: number) => {\n      'worklet';\n\n      if (newIndex > -1) {\n        index.value = newIndex;\n        translationX.value = -(screenWidth + MARGIN) * newIndex;\n        runOnJS(setSelectedIndex)(newIndex);\n      }\n    };\n\n    const newIndex = photos.findIndex(\n      (photo) => photo.messageId === image?.messageId && photo.uri === image?.url,\n    );\n\n    runOnUI(updatePosition)(newIndex);\n  }, [image, photoLength]);\n\n  /**\n   * Image heights are not provided and therefore need to be calculated.\n   * We start by allowing the image to be the full height then reduce it\n   * to the proper scaled height based on the width being restricted to the\n   * screen width when the dimensions are received.\n   */\n  const uriForCurrentImage = photos[selectedIndex]?.uri;\n  useEffect(() => {\n    setCurrentImageHeight(screenHeight);\n    if (photos[index.value]?.uri) {\n      Image.getSize(photos[index.value].uri, (width, height) => {\n        const imageHeight = Math.floor(height * (screenWidth / width));\n        setCurrentImageHeight(imageHeight > screenHeight ? screenHeight : imageHeight);\n      });\n    }\n  }, [uriForCurrentImage]);\n\n  /**\n   * We use simultaneousHandlers to allow pan and pinch gesture handlers\n   * depending on the gesture. The touch is fully handled by the pinch\n   * gesture handler once it has began so all interactions by the pan\n   * handler are blocked if isPinch.value is true\n   */\n  const onPan = useAnimatedGestureHandler<PanGestureHandlerGestureEvent>(\n    {\n      onActive: (evt) => {\n        if (evt.numberOfPointers === 1 && !isPinch.value) {\n          /**\n           * If Android where a second finger cannot be added back and\n           * removing one finger returns to Pan Handler then adjust origin\n           * on finger remove and set swiping false\n           */\n          if (isAndroid && hasPinched.value === HasPinched.TRUE) {\n            hasPinched.value = HasPinched.FALSE;\n            isSwiping.value = IsSwiping.FALSE;\n            offsetX.value = translateX.value + evt.translationX;\n            offsetY.value = translateY.value - evt.translationY;\n          }\n\n          /**\n           * isSwiping is used to prevent Y movement if a clear swipe to next\n           * or previous is begun when at the edge of a photo. The value is\n           * either 0, 1, or 2, via the IsSwiping enum designating undetermined,\n           * true, or false and is reset on releasing the touch\n           */\n          if (isSwiping.value === IsSwiping.UNDETERMINED) {\n            const maxXYRatio = isAndroid ? 1 : 0.25;\n            if (\n              Math.abs(evt.translationX / evt.translationY) > maxXYRatio &&\n              (Math.abs(-halfScreenWidth * (scale.value - 1) - offsetX.value) < 3 ||\n                Math.abs(halfScreenWidth * (scale.value - 1) - offsetX.value) < 3)\n            ) {\n              isSwiping.value = IsSwiping.TRUE;\n            }\n            if (Math.abs(evt.translationY) > 25) {\n              isSwiping.value = IsSwiping.FALSE;\n            }\n          }\n\n          /**\n           * localEvtScale is used for swipe away\n           */\n          const localEvtScale = scale.value / offsetScale.value;\n\n          /**\n           * If not swiping translate the image in X and Y to the event\n           * translation plus offset. If swiping only translate X, if\n           * swiping down when at top of screen or centered balance scale\n           * using offset to a degree (this needs improvement the calculation\n           * is incorrect but likely needs origin use to be 100%)\n           */\n          translateX.value =\n            scale.value !== offsetScale.value\n              ? offsetX.value * localEvtScale - evt.translationX\n              : offsetX.value - evt.translationX;\n          translateY.value =\n            isSwiping.value !== IsSwiping.TRUE\n              ? scale.value !== offsetScale.value\n                ? offsetY.value * localEvtScale + evt.translationY\n                : offsetY.value + evt.translationY\n              : translateY.value;\n\n          /**\n           * If swiping down start scaling down the image for swipe\n           * away effect\n           */\n          scale.value =\n            currentImageHeight * offsetScale.value < screenHeight && translateY.value > 0\n              ? offsetScale.value * (1 - (1 / 3) * (translateY.value / screenHeight))\n              : currentImageHeight * offsetScale.value > screenHeight &&\n                translateY.value > (currentImageHeight / 2) * offsetScale.value - halfScreenHeight\n              ? offsetScale.value *\n                (1 -\n                  (1 / 3) *\n                    ((translateY.value -\n                      ((currentImageHeight / 2) * offsetScale.value - halfScreenHeight)) /\n                      screenHeight))\n              : scale.value;\n\n          overlayOpacity.value = localEvtScale;\n        }\n      },\n      onFinish: (evt) => {\n        if (!isPinch.value && evt.numberOfPointers < 2) {\n          /**\n           * To determine if the fling should page to the next image we\n           * calculate a final position based on the current position and\n           * event velocity\n           */\n          const finalXPosition = evt.translationX - evt.velocityX * 0.3;\n          const finalYPosition = evt.translationY + evt.velocityY * 0.1;\n\n          /**\n           * If there is a next photo, the image is lined up to the right\n           * edge, the swipe is to the left, and the final position is more\n           * than half the screen width, move to the next image\n           */\n          if (\n            index.value < photoLength - 1 &&\n            Math.abs(halfScreenWidth * (scale.value - 1) + offsetX.value) < 3 &&\n            translateX.value < 0 &&\n            finalXPosition < -halfScreenWidth &&\n            isSwiping.value === IsSwiping.TRUE\n          ) {\n            cancelAnimation(translationX);\n            translationX.value = withTiming(\n              -(screenWidth + MARGIN) * (index.value + 1),\n              {\n                duration: 200,\n                easing: Easing.out(Easing.ease),\n              },\n              () => {\n                resetMovementValues();\n                index.value = index.value + 1;\n                runOnJS(setSelectedIndex)(index.value);\n              },\n            );\n\n            /**\n             * If there is a previous photo, the image is lined up to the left\n             * edge, the swipe is to the right, and the final position is more\n             * than half the screen width, move to the previous image\n             */\n          } else if (\n            index.value > 0 &&\n            Math.abs(-halfScreenWidth * (scale.value - 1) + offsetX.value) < 3 &&\n            translateX.value > 0 &&\n            finalXPosition > halfScreenWidth &&\n            isSwiping.value === IsSwiping.TRUE\n          ) {\n            cancelAnimation(translationX);\n            translationX.value = withTiming(\n              -(screenWidth + MARGIN) * (index.value - 1),\n              {\n                duration: 200,\n                easing: Easing.out(Easing.ease),\n              },\n              () => {\n                resetMovementValues();\n                index.value = index.value - 1;\n                runOnJS(setSelectedIndex)(index.value);\n              },\n            );\n          }\n\n          /**\n           * When the pan is finished if the scale is less than 1 return the\n           * photo to center, if the photo is inside the edges of the screen\n           * return the photo to line up with the edges, otherwise use decay\n           * with a clamping at the edges to give the effect the image is\n           * sliding along using velocity and friction\n           */\n          translateX.value =\n            scale.value < 1\n              ? withTiming(0)\n              : translateX.value > halfScreenWidth * (scale.value - 1)\n              ? withTiming(halfScreenWidth * (scale.value - 1), {\n                  duration: 200,\n                })\n              : translateX.value < -halfScreenWidth * (scale.value - 1)\n              ? withTiming(-halfScreenWidth * (scale.value - 1), {\n                  duration: 200,\n                })\n              : withDecay({\n                  clamp: [\n                    -halfScreenWidth * (scale.value - 1),\n                    halfScreenWidth * (scale.value - 1),\n                  ],\n                  deceleration: 0.99,\n                  velocity: -evt.velocityX,\n                });\n\n          /**\n           * When the pan is finished if the height is less than the screen\n           * height return the photo to center, if the photo is inside the\n           * edges of the screen return the photo to line up with the edges,\n           * otherwise use decay with a clamping at the edges to give the effect\n           * the image is sliding along using velocity and friction\n           */\n          translateY.value =\n            currentImageHeight * scale.value < screenHeight\n              ? withTiming(0)\n              : translateY.value > (currentImageHeight / 2) * scale.value - halfScreenHeight\n              ? withTiming((currentImageHeight / 2) * scale.value - halfScreenHeight)\n              : translateY.value < (-currentImageHeight / 2) * scale.value + halfScreenHeight\n              ? withTiming((-currentImageHeight / 2) * scale.value + halfScreenHeight)\n              : withDecay({\n                  clamp: [\n                    (-currentImageHeight / 2) * scale.value + halfScreenHeight,\n                    (currentImageHeight / 2) * scale.value - halfScreenHeight,\n                  ],\n                  deceleration: 0.99,\n                  velocity: evt.velocityY,\n                });\n\n          resetTouchValues();\n\n          /**\n           * If the scale has been reduced below one, i.e. zoomed out, translate\n           * the zoom back to one\n           */\n          scale.value =\n            scale.value !== offsetScale.value ? withTiming(offsetScale.value) : offsetScale.value;\n\n          /**\n           * If the photo is centered or at the top of the screen if scaled larger\n           * than the screen, and not paging left or right, and the final Y position\n           * is greater than half the screen using swipe velocity and position, close\n           * the overlay\n           */\n          if (\n            finalYPosition > halfScreenHeight &&\n            offsetY.value + 8 >= (currentImageHeight / 2) * scale.value - halfScreenHeight &&\n            isSwiping.value !== IsSwiping.TRUE &&\n            translateY.value !== 0 &&\n            !(\n              Math.abs(halfScreenWidth * (scale.value - 1) + offsetX.value) < 3 &&\n              translateX.value < 0 &&\n              finalXPosition < -halfScreenWidth\n            ) &&\n            !(\n              Math.abs(-halfScreenWidth * (scale.value - 1) + offsetX.value) < 3 &&\n              translateX.value > 0 &&\n              finalXPosition > halfScreenWidth\n            )\n          ) {\n            cancelAnimation(translateX);\n            cancelAnimation(translateY);\n            cancelAnimation(scale);\n            overlayOpacity.value = withTiming(\n              0,\n              {\n                duration: 200,\n                easing: Easing.out(Easing.ease),\n              },\n              () => {\n                showScreen.value = 0;\n                runOnJS(setOverlay)('none');\n                runOnJS(setBlurType)(undefined);\n              },\n            );\n            scale.value = withTiming(0.6, {\n              duration: 200,\n              easing: Easing.out(Easing.ease),\n            });\n            translateY.value =\n              evt.velocityY > 1000\n                ? withDecay({\n                    velocity: evt.velocityY,\n                  })\n                : withTiming(halfScreenHeight + (currentImageHeight / 2) * scale.value, {\n                    duration: 200,\n                    easing: Easing.out(Easing.ease),\n                  });\n            translateX.value = withDecay({\n              velocity: -evt.velocityX,\n            });\n          }\n        }\n      },\n\n      onStart: () => {\n        if (!isPinch.value) {\n          /**\n           * Cancel any previous motion animation on translations when a touch\n           * begins to interrupt the animation and take over the position handling\n           */\n          cancelAnimation(translateX);\n          cancelAnimation(translateY);\n          cancelAnimation(scale);\n          offsetX.value = translateX.value;\n          offsetY.value = translateY.value;\n        }\n\n        /**\n         * Reset hasPinched for Android single finger offset\n         */\n        hasPinched.value = HasPinched.FALSE;\n      },\n    },\n    [currentImageHeight, photoLength],\n  );\n\n  /**\n   * On pinch is run when two or more fingers touch the screen, it then takes over\n   * all touch handling even if the number of fingers is reduced to one until the\n   * touch is complete\n   */\n  const onPinch = useAnimatedGestureHandler<PinchGestureHandlerGestureEvent>(\n    {\n      onActive: (evt) => {\n        /**\n         * Android starts with a zero event with 1 touch instead of two\n         * we therefore must wait to capture starting info until the double\n         * touch begins\n         */\n        if (!isPinch.value && isAndroid) {\n          /**\n           * Set hasPinched to true so when removing one finger the pan active\n           * state adjusts the offset\n           */\n          hasPinched.value = HasPinched.TRUE;\n\n          /**\n           * Cancel any previous motion animation on translations when a touch\n           * begins to interrupt the animation and take over the position handling\n           */\n          cancelAnimation(translateX);\n          cancelAnimation(translateY);\n          cancelAnimation(scale);\n\n          /**\n           * Reset isSwiping as now the pan gesture handler is no longer running\n           */\n          isSwiping.value = IsSwiping.UNDETERMINED;\n\n          /**\n           * Set initial values for pinch gesture interaction handler\n           */\n          numberOfPinchFingers.value = evt.numberOfPointers;\n          offsetX.value = translateX.value;\n          offsetY.value = translateY.value;\n          adjustedFocalX.value = evt.focalX - (halfScreenWidth - offsetX.value);\n          adjustedFocalY.value = evt.focalY - (halfScreenHeight + offsetY.value);\n          originX.value = adjustedFocalX.value;\n          originY.value = adjustedFocalY.value;\n          offsetScale.value = scale.value;\n        }\n\n        /**\n         * Set pinch to true to stop all pan gesture interactions, we do this\n         * again here for Android outside the check that creates type\n         */\n        isPinch.value = true;\n\n        /**\n         * The scale is clamped to a minimum of 1 and maximum of 8 for aesthetics.\n         * We use the clamped value to determine a local event scale so the focal\n         * point does not become out of sync with the actual photo scaling, e.g.\n         * evt.scale is 20 but scale is 8, using evt.scale for offset will put the\n         * photo and calculations out of sync\n         */\n        scale.value = clamp(offsetScale.value * evt.scale, 1, 8);\n        const localEvtScale = scale.value / offsetScale.value;\n\n        /**\n         * When we hit the top or bottom of the scale clamping we run a haptic\n         * trigger, we track if it has been run to not spam the trigger\n         */\n        if (scale.value !== 8 && scale.value !== 1) {\n          hasHitTopScale.value = 0;\n          hasHitBottomScale.value = 0;\n        } else if (scale.value === 8 && hasHitTopScale.value === 0) {\n          hasHitTopScale.value = 1;\n          runOnJS(triggerHaptic)('impactLight');\n        } else if (scale.value === 1 && hasHitBottomScale.value === 0) {\n          hasHitBottomScale.value = 1;\n          runOnJS(triggerHaptic)('impactLight');\n        }\n\n        /**\n         * We calculate the adjusted focal point on the photo using the events\n         * focal position on the screen, screen size, and current photo offset\n         */\n        adjustedFocalX.value = evt.focalX - (halfScreenWidth - offsetX.value);\n        adjustedFocalY.value = evt.focalY - (halfScreenHeight + offsetY.value);\n\n        /**\n         * If the number of fingers on the screen changes, the position of the\n         * focal point will change and this needs to be accounted for, e.g. if\n         * two fingers are on the screen the focal is between them, but if one is\n         * then removed the focal is now at the remaining fingers touch position.\n         * If this happens without accounting for the change the image will jump\n         * around, we keep track of the previous two finger focal to adjust for this\n         * change in a reduction from two fingers to one, then if another finger\n         * is added again we adjust the origin to account for the difference between\n         * the original two finger touch and the new two finger touch position.\n         */\n        if (numberOfPinchFingers.value !== evt.numberOfPointers) {\n          numberOfPinchFingers.value = evt.numberOfPointers;\n          if (evt.numberOfPointers === 1) {\n            focalOffsetX.value = oldFocalX.value - adjustedFocalX.value;\n            focalOffsetY.value = oldFocalY.value - adjustedFocalY.value;\n          } else if (numberOfPinchFingers.value > 1) {\n            originX.value =\n              originX.value -\n              (oldFocalX.value / localEvtScale - adjustedFocalX.value / localEvtScale);\n            originY.value =\n              originY.value -\n              (oldFocalY.value / localEvtScale - adjustedFocalY.value / localEvtScale);\n          }\n        }\n\n        /**\n         * If pinch handler has been activated via two fingers then the fingers\n         * reduced to one we keep track of the old focal using the focal offset\n         * from when the number of fingers was two. We then translate the photo\n         * taking into account the offset, focal, focal offset, origin, and scale.\n         */\n        if (numberOfPinchFingers.value === 1) {\n          oldFocalX.value = adjustedFocalX.value + focalOffsetX.value;\n          oldFocalY.value = adjustedFocalY.value + focalOffsetY.value;\n          translateX.value = offsetX.value - oldFocalX.value + localEvtScale * originX.value;\n          translateY.value = offsetY.value + oldFocalY.value - localEvtScale * originY.value;\n\n          /**\n           * If the number of fingers in the gesture is greater than one the\n           * adjusted focal point is saved as the old focal and the photo is\n           * translated taking into account the offset, focal, origin, and scale.\n           */\n        } else if (numberOfPinchFingers.value > 1) {\n          oldFocalX.value = adjustedFocalX.value;\n          oldFocalY.value = adjustedFocalY.value;\n          translateX.value = offsetX.value - adjustedFocalX.value + localEvtScale * originX.value;\n          translateY.value = offsetY.value + adjustedFocalY.value - localEvtScale * originY.value;\n        }\n      },\n      onFinish: () => {\n        if (isPinch.value) {\n          /**\n           * When the pinch is finished if the scale is less than 1 return the\n           * photo to center, if the photo is inside the edges of the screen\n           * return the photo to line up with the edges, otherwise leave the\n           * photo in its current position\n           */\n          translateX.value =\n            scale.value < 1\n              ? withTiming(0)\n              : translateX.value > halfScreenWidth * (scale.value - 1)\n              ? withTiming(halfScreenWidth * (scale.value - 1))\n              : translateX.value < -halfScreenWidth * (scale.value - 1)\n              ? withTiming(-halfScreenWidth * (scale.value - 1))\n              : translateX.value;\n\n          /**\n           * When the pinch is finished if the height is less than the screen\n           * height return the photo to center, if the photo is inside the\n           * edges of the screen return the photo to line up with the edges,\n           * otherwise leave the photo in its current position\n           */\n          translateY.value =\n            currentImageHeight * scale.value < screenHeight\n              ? withTiming(0)\n              : translateY.value > (currentImageHeight / 2) * scale.value - screenHeight / 2\n              ? withTiming((currentImageHeight / 2) * scale.value - screenHeight / 2)\n              : translateY.value < (-currentImageHeight / 2) * scale.value + screenHeight / 2\n              ? withTiming((-currentImageHeight / 2) * scale.value + screenHeight / 2)\n              : translateY.value;\n\n          /**\n           * If the scale has been reduced below one, i.e. zoomed out, translate\n           * the zoom back to one\n           */\n          offsetScale.value = scale.value < 1 ? 1 : scale.value;\n          scale.value = scale.value < 1 ? withTiming(1) : scale.value;\n          resetTouchValues();\n        }\n      },\n      onStart: (evt) => {\n        /**\n         * Android starts with a zero event with 1 touch instead of two\n         * we therefore must wait to capture starting info until the double\n         * touch begins\n         */\n        if (!isAndroid) {\n          /**\n           * Cancel any previous motion animation on translations when a touch\n           * begins to interrupt the animation and take over the position handling\n           */\n          cancelAnimation(translateX);\n          cancelAnimation(translateY);\n          cancelAnimation(scale);\n\n          /**\n           * Set pinch to true to stop all pan gesture interactions\n           */\n          isPinch.value = true;\n\n          /**\n           * Reset isSwiping as now the pan gesture handler is no longer running\n           */\n          isSwiping.value = IsSwiping.UNDETERMINED;\n\n          /**\n           * Set initial values for pinch gesture interaction handler\n           */\n          numberOfPinchFingers.value = evt.numberOfPointers;\n          offsetX.value = translateX.value;\n          offsetY.value = translateY.value;\n          adjustedFocalX.value = evt.focalX - (halfScreenWidth - offsetX.value);\n          adjustedFocalY.value = evt.focalY - (halfScreenHeight + offsetY.value);\n          originX.value = adjustedFocalX.value;\n          originY.value = adjustedFocalY.value;\n          offsetScale.value = scale.value;\n        }\n\n        /**\n         * Reset hasPinched for Android single finger offset\n         */\n        hasPinched.value = HasPinched.FALSE;\n      },\n    },\n    [currentImageHeight],\n  );\n\n  /**\n   * Single tap handler for header hiding and showing\n   */\n  const onSingleTap = useAnimatedGestureHandler<TapGestureHandlerGestureEvent>({\n    onActive: () => {\n      cancelAnimation(headerFooterVisible);\n      headerFooterVisible.value = headerFooterVisible.value > 0 ? withTiming(0) : withTiming(1);\n    },\n  });\n\n  /**\n   * Double tap handler to zoom back out and hide header and footer\n   */\n  const onDoubleTap = useAnimatedGestureHandler<TapGestureHandlerGestureEvent>({\n    onActive: (evt) => {\n      if (Math.abs(tapX.value - evt.absoluteX) < 64 && Math.abs(tapY.value - evt.absoluteY) < 64) {\n        if (offsetScale.value === 1 && offsetX.value === 0 && offsetY.value === 0) {\n          offsetScale.value = 2;\n          scale.value = withTiming(2, {\n            duration: 200,\n            easing: Easing.out(Easing.ease),\n          });\n          translateX.value = withTiming(evt.absoluteX - halfScreenWidth, {\n            duration: 200,\n            easing: Easing.out(Easing.ease),\n          });\n          if (currentImageHeight * 2 > screenHeight) {\n            const translateYTopBottom =\n              evt.absoluteY > halfScreenHeight\n                ? -(currentImageHeight * 2 - screenHeight) / 2\n                : (currentImageHeight * 2 - screenHeight) / 2;\n            translateY.value = withTiming(translateYTopBottom, {\n              duration: 200,\n              easing: Easing.out(Easing.ease),\n            });\n          }\n        } else {\n          offsetScale.value = 1;\n          scale.value = withTiming(1, {\n            duration: 200,\n            easing: Easing.out(Easing.ease),\n          });\n          offsetX.value = 0;\n          offsetY.value = 0;\n          translateX.value = withTiming(0, {\n            duration: 200,\n            easing: Easing.out(Easing.ease),\n          });\n          translateY.value = withTiming(0, {\n            duration: 200,\n            easing: Easing.out(Easing.ease),\n          });\n          if (headerFooterVisible.value !== 0) {\n            cancelAnimation(headerFooterVisible);\n            headerFooterVisible.value = withTiming(0);\n          }\n        }\n      }\n    },\n    onStart: (evt) => {\n      tapX.value = evt.absoluteX;\n      tapY.value = evt.absoluteY;\n    },\n  });\n\n  /**\n   * If the header is visible we scale down the opacity of it as the\n   * image is swiped downward\n   */\n  const headerFooterOpacity = useDerivedValue(\n    () =>\n      currentImageHeight * scale.value < screenHeight && translateY.value > 0\n        ? 1 - translateY.value / quarterScreenHeight\n        : currentImageHeight * scale.value > screenHeight &&\n          translateY.value > (currentImageHeight / 2) * scale.value - halfScreenHeight\n        ? 1 -\n          (translateY.value - ((currentImageHeight / 2) * scale.value - halfScreenHeight)) /\n            quarterScreenHeight\n        : 1,\n    [currentImageHeight],\n  );\n\n  /**\n   * This transition and scaleX reverse lets use scroll left\n   */\n  const pagerStyle = useAnimatedStyle<ImageStyle>(\n    () => ({\n      transform: [\n        { scaleX: -1 },\n        {\n          translateX: translationX.value,\n        },\n      ],\n    }),\n    [visible],\n  );\n\n  /**\n   * Simple background color animation on Y movement\n   */\n  const containerBackground = useAnimatedStyle<ViewStyle>(\n    () => ({\n      backgroundColor: backgroundColor || white_snow,\n      opacity: headerFooterOpacity.value,\n    }),\n    [headerFooterOpacity],\n  );\n\n  /**\n   * Show screen style as component is always rendered we hide it\n   * down and up and set opacity to 0 for good measure\n   */\n  const showScreenStyle = useAnimatedStyle<ViewStyle>(\n    () => ({\n      opacity: interpolate(showScreen.value, [0, 0.01, 1], [0, 1, 1]),\n      transform: [\n        {\n          translateY: interpolate(showScreen.value, [0, 1], [screenHeight, 0]),\n        },\n      ],\n    }),\n    [],\n  );\n\n  /**\n   * Functions to open and close BottomSheet with image grid\n   */\n  const closeGridView = () => {\n    if (bottomSheetRef.current) {\n      bottomSheetRef.current.close();\n    }\n  };\n  const openGridView = () => {\n    if (bottomSheetRef.current) {\n      bottomSheetRef.current.snapTo(1);\n    }\n  };\n\n  return (\n    <Animated.View\n      pointerEvents={visible ? 'auto' : 'none'}\n      style={[StyleSheet.absoluteFillObject, showScreenStyle]}\n    >\n      <Animated.View style={[StyleSheet.absoluteFillObject, containerBackground]} />\n      <TapGestureHandler\n        minPointers={1}\n        numberOfTaps={1}\n        onGestureEvent={onSingleTap}\n        ref={singleTapRef}\n        waitFor={[panRef, pinchRef, doubleTapRef]}\n      >\n        <Animated.View style={StyleSheet.absoluteFillObject}>\n          <TapGestureHandler\n            maxDeltaX={8}\n            maxDeltaY={8}\n            maxDist={8}\n            minPointers={1}\n            numberOfTaps={2}\n            onGestureEvent={onDoubleTap}\n            ref={doubleTapRef}\n          >\n            <Animated.View style={StyleSheet.absoluteFillObject}>\n              <PinchGestureHandler\n                onGestureEvent={onPinch}\n                ref={pinchRef}\n                simultaneousHandlers={[panRef]}\n              >\n                <Animated.View style={StyleSheet.absoluteFill}>\n                  <PanGestureHandler\n                    enabled={overlay === 'gallery'}\n                    maxPointers={isAndroid ? undefined : 1}\n                    minDist={10}\n                    onGestureEvent={onPan}\n                    ref={panRef}\n                    simultaneousHandlers={[pinchRef]}\n                  >\n                    <Animated.View style={StyleSheet.absoluteFill}>\n                      <Animated.View\n                        style={[\n                          styles.animatedContainer,\n                          pagerStyle,\n                          {\n                            transform: [\n                              { scaleX: -1 }, // Also only here for opening, wrong direction when not included\n                              {\n                                translateX: translationX.value, // Only here for opening, wrong index when this is not included\n                              },\n                            ],\n                          },\n                        ]}\n                      >\n                        {photos.map((photo, i) => (\n                          <AnimatedGalleryImage\n                            index={i}\n                            key={`${photo.uri}-${i}`}\n                            offsetScale={offsetScale}\n                            photo={photo}\n                            previous={selectedIndex > i}\n                            scale={scale}\n                            screenHeight={screenHeight}\n                            selected={selectedIndex === i}\n                            shouldRender={Math.abs(selectedIndex - i) < 4}\n                            style={{\n                              height: screenHeight * 8,\n                              marginRight: MARGIN,\n                              width: screenWidth * 8,\n                            }}\n                            translateX={translateX}\n                            translateY={translateY}\n                          />\n                        ))}\n                      </Animated.View>\n                    </Animated.View>\n                  </PanGestureHandler>\n                </Animated.View>\n              </PinchGestureHandler>\n            </Animated.View>\n          </TapGestureHandler>\n        </Animated.View>\n      </TapGestureHandler>\n      <ImageGalleryHeader<Us>\n        opacity={headerFooterOpacity}\n        photo={photos[selectedIndex]}\n        visible={headerFooterVisible}\n        {...imageGalleryCustomComponents?.header}\n      />\n      <ImageGalleryFooter<Us>\n        opacity={headerFooterOpacity}\n        openGridView={openGridView}\n        photo={photos[selectedIndex]}\n        photoLength={photoLength}\n        selectedIndex={selectedIndex}\n        visible={headerFooterVisible}\n        {...imageGalleryCustomComponents?.footer}\n      />\n      <ImageGalleryOverlay\n        animatedBottomSheetIndex={animatedBottomSheetIndex}\n        closeGridView={closeGridView}\n        currentBottomSheetIndex={currentBottomSheetIndex}\n      />\n      <BottomSheet\n        animatedIndex={animatedBottomSheetIndex}\n        containerHeight={fullScreenHeight}\n        handleComponent={() => (\n          <ImageGridHandle\n            closeGridView={closeGridView}\n            {...imageGalleryCustomComponents?.gridHandle}\n          />\n        )}\n        handleHeight={imageGalleryGridHandleHeight ?? 40}\n        index={0}\n        onChange={(index: number) => setCurrentBottomSheetIndex(index)}\n        ref={bottomSheetRef}\n        snapPoints={imageGalleryGridSnapPoints || snapPoints}\n      >\n        <ImageGrid\n          closeGridView={closeGridView}\n          numberOfImageGalleryGridColumns={numberOfImageGalleryGridColumns}\n          photos={photos}\n          resetVisibleValues={resetVisibleValues}\n          setImage={setImage}\n          {...imageGalleryCustomComponents?.grid}\n        />\n      </BottomSheet>\n    </Animated.View>\n  );\n};\n\n/**\n * Clamping worklet to clamp the scaling\n */\nexport const clamp = (value: number, lowerBound: number, upperBound: number) => {\n  'worklet';\n  return Math.min(Math.max(lowerBound, value), upperBound);\n};\n\nconst styles = StyleSheet.create({\n  animatedContainer: {\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n});\n\nexport type Photo<Us extends UnknownType = DefaultUserType> = {\n  id: string;\n  uri: string;\n  created_at?: string | Date;\n  messageId?: string;\n  user?: UserResponse<Us> | null;\n  user_id?: string;\n};\n\nImageGallery.displayName = 'ImageGallery{imageGallery}';\n"]}