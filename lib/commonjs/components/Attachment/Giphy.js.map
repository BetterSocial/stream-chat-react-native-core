{"version":3,"sources":["Giphy.tsx"],"names":["styles","StyleSheet","create","cancel","fontSize","fontWeight","paddingVertical","cancelContainer","alignItems","borderRightWidth","flex","justifyContent","container","overflow","width","giphy","borderTopLeftRadius","borderTopRightRadius","height","giphyContainer","borderRadius","flexDirection","giphyMask","bottom","left","position","giphyText","margin","row","selectionContainer","borderWidth","selector","borderBottomWidth","paddingBottom","paddingHorizontal","send","sendContainer","shuffleButton","title","fontStyle","GiphyWithContext","props","additionalTouchableProps","attachment","handleAction","onLongPress","onPress","onPressIn","preventPress","actions","image_url","thumb_url","type","theme","colors","accent_blue","black","border","grey","overlay_dark","white","messageSimple","titleStyle","uri","backgroundColor","borderColor","color","toUpperCase","borderBottomColor","name","value","borderRightColor","text","event","emitter","areEqual","prevProps","nextProps","prevActions","prevImageUrl","prevThumbUrl","nextActions","nextImageUrl","nextThumbUrl","imageUrlEqual","thumbUrlEqual","actionsEqual","Array","isArray","length","MemoizedGiphy","React","memo","Giphy","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Image, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nimport {\n  MessageContextValue,\n  useMessageContext,\n} from '../../contexts/messageContext/MessageContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../contexts/messagesContext/MessagesContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { Left } from '../../icons/Left';\nimport { Lightning } from '../../icons/Lightning';\nimport { Right } from '../../icons/Right';\nimport { makeImageCompatibleUrl } from '../../utils/utils';\n\nimport type { Attachment } from 'stream-chat';\n\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../types/types';\n\nconst styles = StyleSheet.create({\n  cancel: {\n    fontSize: 14,\n    fontWeight: '600',\n    paddingVertical: 16,\n  },\n  cancelContainer: {\n    alignItems: 'center',\n    borderRightWidth: 1,\n    flex: 1,\n    justifyContent: 'center',\n  },\n  container: {\n    overflow: 'hidden',\n    width: 256,\n  },\n  giphy: {\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8,\n    height: 140,\n  },\n  giphyContainer: {\n    alignItems: 'center',\n    borderRadius: 12,\n    flexDirection: 'row',\n    height: 24,\n    justifyContent: 'center',\n    width: 68,\n  },\n  giphyMask: {\n    bottom: 8,\n    left: 8,\n    position: 'absolute',\n  },\n  giphyText: { fontSize: 11, fontWeight: '600' },\n  margin: {\n    margin: 8,\n  },\n  row: { flexDirection: 'row' },\n  selectionContainer: {\n    borderRadius: 8,\n    borderWidth: 1,\n    overflow: 'hidden',\n    width: 250,\n  },\n  selector: {\n    alignItems: 'center',\n    borderBottomWidth: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingBottom: 8,\n    paddingHorizontal: 8,\n  },\n  send: {\n    fontSize: 14,\n    fontWeight: '600',\n    paddingVertical: 16,\n  },\n  sendContainer: { alignItems: 'center', flex: 1, justifyContent: 'center' },\n  shuffleButton: {\n    alignItems: 'center',\n    borderRadius: 16,\n    borderWidth: 1,\n    height: 32,\n    justifyContent: 'center',\n    width: 32,\n  },\n  title: {\n    fontSize: 14,\n    fontStyle: 'italic',\n    fontWeight: '500',\n  },\n});\n\nexport type GiphyPropsWithContext<\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n> = Pick<\n  MessageContextValue<At, Ch, Co, Ev, Me, Re, Us>,\n  'handleAction' | 'onLongPress' | 'onPress' | 'onPressIn' | 'preventPress'\n> &\n  Pick<MessagesContextValue<At, Ch, Co, Ev, Me, Re, Us>, 'additionalTouchableProps'> & {\n    attachment: Attachment<At>;\n  };\n\nconst GiphyWithContext = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  props: GiphyPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const {\n    additionalTouchableProps,\n    attachment,\n    handleAction,\n    onLongPress,\n    onPress,\n    onPressIn,\n    preventPress,\n  } = props;\n\n  const { actions, image_url, thumb_url, title, type } = attachment;\n\n  const {\n    theme: {\n      colors: { accent_blue, black, border, grey, overlay_dark, white },\n      messageSimple: {\n        giphy: {\n          cancel,\n          cancelContainer,\n          container,\n          giphy,\n          giphyContainer,\n          giphyMask,\n          giphyText,\n          selectionContainer,\n          selector,\n          send,\n          sendContainer,\n          shuffleButton,\n          title: titleStyle,\n        },\n      },\n    },\n  } = useTheme();\n\n  const uri = image_url || thumb_url;\n\n  if (!uri) return null;\n\n  return actions ? (\n    <View\n      style={[\n        styles.selectionContainer,\n        { backgroundColor: white, borderColor: `${black}0D` },\n        selectionContainer,\n      ]}\n    >\n      <View style={styles.margin}>\n        <Image\n          resizeMode='cover'\n          source={{ uri: makeImageCompatibleUrl(uri) }}\n          style={[styles.giphy, giphy]}\n        />\n        <View style={[styles.giphyMask, giphyMask]}>\n          <View style={[styles.giphyContainer, { backgroundColor: overlay_dark }, giphyContainer]}>\n            <Lightning height={16} pathFill={white} width={16} />\n            <Text style={[styles.giphyText, { color: white }, giphyText]}>\n              {type?.toUpperCase()}\n            </Text>\n          </View>\n        </View>\n      </View>\n      <View>\n        <View style={[styles.selector, { borderBottomColor: border }, selector]}>\n          <TouchableOpacity\n            onPress={() => handleAction('image_action', 'shuffle')}\n            style={[styles.shuffleButton, { borderColor: border }, shuffleButton]}\n          >\n            <Left />\n          </TouchableOpacity>\n          <Text style={[styles.title, { color: black }, titleStyle]}>{`\"${title}\"`}</Text>\n          <TouchableOpacity\n            onPress={() => {\n              if (actions?.[1].name && actions?.[1].value && handleAction) {\n                handleAction(actions[1].name, actions[1].value);\n              }\n            }}\n            style={[styles.shuffleButton, shuffleButton]}\n          >\n            <Right />\n          </TouchableOpacity>\n        </View>\n        <View style={styles.row}>\n          <TouchableOpacity\n            onPress={() => {\n              if (actions?.[2].name && actions?.[2].value && handleAction) {\n                handleAction(actions[2].name, actions[2].value);\n              }\n            }}\n            style={[styles.cancelContainer, { borderRightColor: border }, cancelContainer]}\n          >\n            <Text style={[styles.cancel, { color: grey }, cancel]}>{actions?.[2].text}</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => {\n              if (actions?.[0].name && actions?.[0].value && handleAction) {\n                handleAction(actions[0].name, actions[0].value);\n              }\n            }}\n            style={[styles.sendContainer, sendContainer]}\n          >\n            <Text style={[styles.send, { color: accent_blue }, send]}>{actions?.[0].text}</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </View>\n  ) : (\n    <TouchableOpacity\n      disabled={preventPress}\n      onLongPress={(event) => {\n        if (onLongPress) {\n          onLongPress({\n            emitter: 'giphy',\n            event,\n          });\n        }\n      }}\n      onPress={(event) => {\n        if (onPress) {\n          onPress({\n            emitter: 'giphy',\n            event,\n          });\n        }\n      }}\n      onPressIn={(event) => {\n        if (onPressIn) {\n          onPressIn({\n            emitter: 'giphy',\n            event,\n          });\n        }\n      }}\n      style={[styles.container, container]}\n      testID='giphy-attachment'\n      {...additionalTouchableProps}\n    >\n      <View>\n        <Image\n          resizeMode='cover'\n          source={{ uri: makeImageCompatibleUrl(uri) }}\n          style={[styles.giphy, giphy]}\n        />\n        <View style={[styles.giphyMask, giphyMask]}>\n          <View style={[styles.giphyContainer, { backgroundColor: overlay_dark }, giphyContainer]}>\n            <Lightning height={16} pathFill={white} width={16} />\n            <Text style={[styles.giphyText, { color: white }, giphyText]}>\n              {type?.toUpperCase()}\n            </Text>\n          </View>\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst areEqual = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  prevProps: GiphyPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n  nextProps: GiphyPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const {\n    attachment: { actions: prevActions, image_url: prevImageUrl, thumb_url: prevThumbUrl },\n  } = prevProps;\n  const {\n    attachment: { actions: nextActions, image_url: nextImageUrl, thumb_url: nextThumbUrl },\n  } = nextProps;\n\n  const imageUrlEqual = prevImageUrl === nextImageUrl;\n  if (!imageUrlEqual) return false;\n\n  const thumbUrlEqual = prevThumbUrl === nextThumbUrl;\n  if (!thumbUrlEqual) return false;\n\n  const actionsEqual =\n    Array.isArray(prevActions) === Array.isArray(nextActions) &&\n    ((Array.isArray(prevActions) &&\n      Array.isArray(nextActions) &&\n      prevActions.length === nextActions.length) ||\n      prevActions === nextActions);\n  if (!actionsEqual) return false;\n\n  return true;\n};\n\nconst MemoizedGiphy = React.memo(GiphyWithContext, areEqual) as typeof GiphyWithContext;\n\nexport type GiphyProps<\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n> = Partial<\n  Pick<MessageContextValue<At, Ch, Co, Ev, Me, Re, Us>, 'onLongPress' | 'onPressIn'> &\n    Pick<MessagesContextValue<At, Ch, Co, Ev, Me, Re, Us>, 'additionalTouchableProps'>\n> & {\n  attachment: Attachment<At>;\n};\n\n/**\n * UI component for card in attachments.\n */\nexport const Giphy = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  props: GiphyProps<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const { handleAction, onLongPress, onPress, onPressIn, preventPress } =\n    useMessageContext<At, Ch, Co, Ev, Me, Re, Us>();\n  const { additionalTouchableProps } = useMessagesContext<At, Ch, Co, Ev, Me, Re, Us>();\n\n  return (\n    <MemoizedGiphy\n      {...{\n        additionalTouchableProps,\n        handleAction,\n        onLongPress,\n        onPress,\n        onPressIn,\n        preventPress,\n      }}\n      {...props}\n    />\n  );\n};\n\nGiphy.displayName = 'Giphy{messageSimple{giphy}}';\n"]}