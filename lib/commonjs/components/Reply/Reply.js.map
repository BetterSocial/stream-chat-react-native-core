{"version":3,"sources":["Reply.tsx"],"names":["styles","StyleSheet","create","container","alignItems","flexDirection","fileAttachmentContainer","paddingLeft","paddingVertical","imageAttachment","borderRadius","height","marginLeft","marginVertical","width","messageContainer","borderBottomLeftRadius","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","flexGrow","flexShrink","text","fontSize","textContainer","maxWidth","undefined","paddingHorizontal","ReplyWithContext","props","FileAttachmentIcon","attachmentSize","MessageAvatar","quotedMessage","stylesProp","t","error","setError","theme","colors","blue_alice","border","grey","transparent","white","deletedText","messageSimple","content","reply","markdownStyles","lastAttachment","attachments","slice","messageType","type","title_link","og_scrape_url","image_url","thumb_url","hasImage","onlyEmojis","emojiRegex","test","backgroundColor","borderColor","borderWidth","mime_type","uri","deleted_at","em","color","length","title","marginRight","Number","areEqual","prevProps","nextProps","prevQuotedMessage","nextQuotedMessage","quotedMessageEqual","id","MemoizedReply","React","memo","Reply","message","FileIconDefault","MessageAvatarDefault","editing","quotedEditingMessage","quoted_message","displayName"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;AACA;;AAIA;;AAIA;;AAIA;;AACA;;;;;;;;;AAaA,IAAMA,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE,UADH;AAETC,IAAAA,aAAa,EAAE;AAFN,GADoB;AAK/BC,EAAAA,uBAAuB,EAAE;AAAEC,IAAAA,WAAW,EAAE,CAAf;AAAkBC,IAAAA,eAAe,EAAE;AAAnC,GALM;AAM/BC,EAAAA,eAAe,EAAE;AACfC,IAAAA,YAAY,EAAE,CADC;AAEfC,IAAAA,MAAM,EAAE,EAFO;AAGfC,IAAAA,UAAU,EAAE,CAHG;AAIfC,IAAAA,cAAc,EAAE,CAJD;AAKfC,IAAAA,KAAK,EAAE;AALQ,GANc;AAa/BC,EAAAA,gBAAgB,EAAE;AAChBX,IAAAA,UAAU,EAAE,YADI;AAEhBY,IAAAA,sBAAsB,EAAE,CAFR;AAGhBC,IAAAA,uBAAuB,EAAE,EAHT;AAIhBC,IAAAA,mBAAmB,EAAE,EAJL;AAKhBC,IAAAA,oBAAoB,EAAE,EALN;AAMhBd,IAAAA,aAAa,EAAE,KANC;AAOhBe,IAAAA,QAAQ,EAAE,CAPM;AAQhBC,IAAAA,UAAU,EAAE;AARI,GAba;AAuB/BC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAvByB;AAwB/BC,EAAAA,aAAa,EAAE;AAAEC,IAAAA,QAAQ,EAAEC,SAAZ;AAAuBC,IAAAA,iBAAiB,EAAE;AAA1C;AAxBgB,CAAlB,CAAf;;AAgDA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CASvBC,KATuB,EAUpB;AAAA;;AACH,MACEC,kBADF,GAOID,KAPJ,CACEC,kBADF;AAAA,8BAOID,KAPJ,CAEEE,cAFF;AAAA,MAEEA,cAFF,sCAEmB,EAFnB;AAAA,MAGEC,aAHF,GAOIH,KAPJ,CAGEG,aAHF;AAAA,MAIEC,aAJF,GAOIJ,KAPJ,CAIEI,aAJF;AAAA,sBAOIJ,KAPJ,CAKE7B,MALF;AAAA,MAKUkC,UALV,8BAKuB,EALvB;AAAA,MAMEC,CANF,GAOIN,KAPJ,CAMEM,CANF;;AASA,kBAA0B,qBAAS,KAAT,CAA1B;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AAEA,kBAeI,6BAfJ;AAAA,kCACEC,KADF;AAAA,8CAEIC,MAFJ;AAAA,MAEcC,UAFd,yBAEcA,UAFd;AAAA,MAE0BC,MAF1B,yBAE0BA,MAF1B;AAAA,MAEkCC,IAFlC,yBAEkCA,IAFlC;AAAA,MAEwCC,WAFxC,yBAEwCA,WAFxC;AAAA,MAEqDC,KAFrD,yBAEqDA,KAFrD;AAAA,MAIiBC,WAJjB,mBAGIC,aAHJ,CAIMC,OAJN,CAIiBF,WAJjB;AAAA,8CAMIG,KANJ;AAAA,MAOM7C,SAPN,yBAOMA,SAPN;AAAA,MAQMG,uBARN,yBAQMA,uBARN;AAAA,MASMG,eATN,yBASMA,eATN;AAAA,MAUMwC,cAVN,yBAUMA,cAVN;AAAA,MAWMlC,gBAXN,yBAWMA,gBAXN;AAAA,MAYMS,aAZN,yBAYMA,aAZN;;AAiBA,MAAI,OAAOS,aAAP,KAAyB,SAA7B,EAAwC,OAAO,IAAP;AAExC,MAAMiB,cAAc,4BAAGjB,aAAa,CAACkB,WAAjB,qBAAG,sBAA2BC,KAA3B,CAAiC,CAAC,CAAlC,EAAqC,CAArC,CAAvB;AAEA,MAAMC,WAAW,GAAGH,cAAc,GAC9BA,cAAc,CAACI,IAAf,KAAwB,MAAxB,IAAkCJ,cAAc,CAACI,IAAf,KAAwB,OAA1D,GACE,MADF,GAEEJ,cAAc,CAACI,IAAf,KAAwB,OAAxB,IACA,CAACJ,cAAc,CAACK,UADhB,IAEA,CAACL,cAAc,CAACM,aAFhB,GAGAN,cAAc,CAACO,SAAf,IAA4BP,cAAc,CAACQ,SAA3C,GACE,OADF,GAEEhC,SALF,GAMAwB,cAAc,CAACI,IAAf,KAAwB,OAAxB,IAAmCJ,cAAc,CAACI,IAAf,KAAwB,OAA3D,GACA,OADA,GAEA,OAX4B,GAY9B5B,SAZJ;AAcA,MAAMiC,QAAQ,GACZ,CAACvB,KAAD,IACAc,cADA,IAEAG,WAAW,KAAK,MAFhB,KAGCH,cAAc,CAACO,SAAf,IAA4BP,cAAc,CAACQ,SAA3C,IAAwDR,cAAc,CAACM,aAHxE,CADF;;AAMA,MAAMI,UAAU,GAAG,CAACV,cAAD,IAAmB,CAAC,CAACjB,aAAa,CAACX,IAAnC,IAA2CuC,kBAAWC,IAAX,CAAgB7B,aAAa,CAACX,IAA9B,CAA9D;;AAEA,SACE,gCAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACtB,MAAM,CAACG,SAAR,EAAmBA,SAAnB,EAA8B+B,UAAU,CAAC/B,SAAzC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,gCAAC,aAAD;AAAe,IAAA,SAAS,EAAE,MAA1B;AAAkC,IAAA,gBAAgB,MAAlD;AAAmD,IAAA,OAAO,EAAE8B,aAA5D;AAA2E,IAAA,IAAI,EAAE,EAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,gCAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACLjC,MAAM,CAACe,gBADF,EAEL;AACEgD,MAAAA,eAAe,EACbV,WAAW,KAAK,OAAhB,GAA0Bb,UAA1B,GAAuCa,WAAW,KAAK,OAAhB,GAA0BV,WAA1B,GAAwCC,KAFnF;AAGEoB,MAAAA,WAAW,EAAEvB,MAHf;AAIEwB,MAAAA,WAAW,EAAEZ,WAAW,KAAK,OAAhB,GAA0B,CAA1B,GAA8B;AAJ7C,KAFK,EAQLtC,gBARK,EASLmB,UAAU,CAACnB,gBATN,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaG,CAACqB,KAAD,IAAUc,cAAV,GACCG,WAAW,KAAK,MAAhB,GACE,gCAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACLrD,MAAM,CAACM,uBADF,EAELA,uBAFK,EAGL4B,UAAU,CAAC5B,uBAHN,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,gCAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAE4C,cAAc,CAACgB,SAA7C;AAAwD,IAAA,IAAI,EAAEnC,cAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,GAUI4B,QAAQ,GACV,gCAAC,kBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMtB,QAAQ,CAAC,IAAD,CAAd;AAAA,KADX;AAEE,IAAA,MAAM,EAAE;AACN8B,MAAAA,GAAG,EACDjB,cAAc,CAACO,SAAf,IACAP,cAAc,CAACQ,SADf,IAEAR,cAAc,CAACM;AAJX,KAFV;AAQE,IAAA,KAAK,EAAE,CAACxD,MAAM,CAACS,eAAR,EAAyBA,eAAzB,EAA0CyB,UAAU,CAACzB,eAArD,CART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU,GAWR,IAtBL,GAuBG,IApCN,EAqCE,gCAAC,0CAAD;AACE,IAAA,cAAc,EACZwB,aAAa,CAACmC,UAAd,GACI,uBAAM;AAAEC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,KAAK,EAAE5B;AAAT;AAAN,KAAN,EAA+BG,WAA/B,CADJ;AAEMvB,MAAAA,IAAI,EAAEtB,MAAM,CAACsB;AAFnB,OAE4B2B,cAF5B,CAFJ;AAME,IAAA,OAAO,gCACFhB,aADE;AAELX,MAAAA,IAAI,EAAEW,aAAa,CAACmC,UAAd,SACEjC,CAAC,CAAC,iBAAD,CADH,SAEFF,aAAa,CAACX,IAAd,GACAW,aAAa,CAACX,IAAd,CAAmBiD,MAAnB,GAA4B,GAA5B,GACKtC,aAAa,CAACX,IAAd,CAAmB8B,KAAnB,CAAyB,CAAzB,EAA4B,GAA5B,CADL,WAEEnB,aAAa,CAACX,IAHhB,GAIA+B,WAAW,KAAK,OAAhB,GACAlB,CAAC,CAAC,OAAD,CADD,GAEAkB,WAAW,KAAK,MAAhB,GACA,CAAAH,cAAc,QAAd,YAAAA,cAAc,CAAEsB,KAAhB,KAAyB,EADzB,GAEA;AAZC,MANT;AAoBE,IAAA,UAAU,EAAEZ,UApBd;AAqBE,IAAA,MAAM,EAAE;AACNpC,MAAAA,aAAa,EAAE,CACb;AACEiD,QAAAA,WAAW,EAAEd,QAAQ,GACjBe,MAAM,CACJ,0BAAAxC,UAAU,CAACzB,eAAX,2CAA4BE,MAA5B,KACEF,eAAe,CAACE,MADlB,IAEEX,MAAM,CAACS,eAAP,CAAuBE,MAHrB,CAAN,GAKA+D,MAAM,CACJ,2BAAAxC,UAAU,CAACzB,eAAX,4CAA4BG,UAA5B,KACEH,eAAe,CAACG,UADlB,IAEEZ,MAAM,CAACS,eAAP,CAAuBG,UAHrB,CANW,GAWjByC,WAAW,KAAK,MAAhB,GACAtB,cAAc,GACd2C,MAAM,CACJ,0BAAAxC,UAAU,CAAC5B,uBAAX,2CAAoCC,WAApC,KACED,uBAAuB,CAACC,WAD1B,IAEEP,MAAM,CAACM,uBAAP,CAA+BC,WAH7B,CAFN,GAOAmB;AAnBN,OADa,EAsBb1B,MAAM,CAACwB,aAtBM,EAuBbA,aAvBa,EAwBbU,UAAU,CAACV,aAxBE;AADT,KArBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArCF,CAFF,CADF;AA6FD,CA9JD;;AAgKA,IAAMmD,QAAQ,GAAG,SAAXA,QAAW,CASfC,SATe,EAUfC,SAVe,EAWZ;AACH,MAAuBC,iBAAvB,GAA6CF,SAA7C,CAAQ3C,aAAR;AACA,MAAuB8C,iBAAvB,GAA6CF,SAA7C,CAAQ5C,aAAR;AAEA,MAAM+C,kBAAkB,GACtB,CAAC,CAACF,iBAAF,IACA,CAAC,CAACC,iBADF,IAEA,OAAOD,iBAAP,KAA6B,SAF7B,IAGA,OAAOC,iBAAP,KAA6B,SAH7B,GAIID,iBAAiB,CAACG,EAAlB,KAAyBF,iBAAiB,CAACE,EAA3C,IACAH,iBAAiB,CAACV,UAAlB,KAAiCW,iBAAiB,CAACX,UALvD,GAMI,CAAC,CAACU,iBAAF,KAAwB,CAAC,CAACC,iBAPhC;AASA,MAAI,CAACC,kBAAL,EAAyB,OAAO,KAAP;AAEzB,SAAO,IAAP;AACD,CA3BD;;AA6BA,IAAME,aAAa,GAAGC,kBAAMC,IAAN,CAAWxD,gBAAX,EAA6B+C,QAA7B,CAAtB;;AAeO,IAAMU,KAAK,GAAG,SAARA,KAAQ,CASnBxD,KATmB,EAUhB;AACH,2BAAoB,wCAApB;AAAA,MAAQyD,OAAR,sBAAQA,OAAR;;AAEA,4BACE,0CADF;AAAA,kDAAQxD,kBAAR;AAAA,MAAQA,kBAAR,sCAA6ByD,kBAA7B;AAAA,kDAA8CvD,aAA9C;AAAA,MAA8CA,aAA9C,sCAA8DwD,4BAA9D;;AAGA,8BAAmC,kDAAnC;AAAA,MAAQC,OAAR,yBAAQA,OAAR;AAAA,MAAiBxD,aAAjB,yBAAiBA,aAAjB;;AAEA,MAAMyD,oBAAoB,GACxB,OAAOD,OAAP,KAAmB,SAAnB,GAA+B,CAAAA,OAAO,QAAP,YAAAA,OAAO,CAAEE,cAAT,KAA2B,KAA1D,GAAkE,KADpE;;AAIA,8BAAc,gDAAd;AAAA,MAAQxD,CAAR,yBAAQA,CAAR;;AAEA,SACE,gCAAC,aAAD;AAEIL,IAAAA,kBAAkB,EAAlBA,kBAFJ;AAGIE,IAAAA,aAAa,EAAbA,aAHJ;AAIIC,IAAAA,aAAa,EAAEqD,OAAO,GACjBA,OAAO,CAACK,cADS,GAUlB1D,aAAa,IAAIyD,oBAdzB;AAeIvD,IAAAA,CAAC,EAADA;AAfJ,KAiBMN,KAjBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAqBD,CA7CM;;;AA+CPwD,KAAK,CAACO,WAAN,GAAoB,cAApB","sourcesContent":["import React, { useState } from 'react';\nimport { Image, ImageStyle, StyleSheet, View, ViewStyle } from 'react-native';\nimport merge from 'lodash/merge';\n\nimport { FileIcon as FileIconDefault } from '../Attachment/FileIcon';\nimport { MessageAvatar as MessageAvatarDefault } from '../Message/MessageSimple/MessageAvatar';\nimport { MessageTextContainer } from '../Message/MessageSimple/MessageTextContainer';\n\nimport { useMessageContext } from '../../contexts/messageContext/MessageContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../contexts/messagesContext/MessagesContext';\nimport {\n  MessageInputContextValue,\n  useMessageInputContext,\n} from '../../contexts/messageInputContext/MessageInputContext';\nimport {\n  TranslationContextValue,\n  useTranslationContext,\n} from '../../contexts/translationContext/TranslationContext';\nimport { useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { emojiRegex } from '../../utils/utils';\n\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../types/types';\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'flex-end',\n    flexDirection: 'row',\n  },\n  fileAttachmentContainer: { paddingLeft: 8, paddingVertical: 8 },\n  imageAttachment: {\n    borderRadius: 8,\n    height: 32,\n    marginLeft: 8,\n    marginVertical: 8,\n    width: 32,\n  },\n  messageContainer: {\n    alignItems: 'flex-start',\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 12,\n    borderTopLeftRadius: 12,\n    borderTopRightRadius: 12,\n    flexDirection: 'row',\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n  text: { fontSize: 12 },\n  textContainer: { maxWidth: undefined, paddingHorizontal: 8 },\n});\n\ntype ReplyPropsWithContext<\n  At extends DefaultAttachmentType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n> = Pick<MessageInputContextValue<At, Ch, Co, Ev, Me, Re, Us>, 'quotedMessage'> &\n  Pick<MessagesContextValue<At, Ch, Co, Ev, Me, Re, Us>, 'FileAttachmentIcon' | 'MessageAvatar'> &\n  Pick<TranslationContextValue, 't'> & {\n    attachmentSize?: number;\n    styles?: Partial<{\n      container: ViewStyle;\n      fileAttachmentContainer: ViewStyle;\n      imageAttachment: ImageStyle;\n      messageContainer: ViewStyle;\n      textContainer: ViewStyle;\n    }>;\n  };\n\nconst ReplyWithContext = <\n  At extends DefaultAttachmentType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends DefaultUserType = DefaultUserType,\n>(\n  props: ReplyPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const {\n    FileAttachmentIcon,\n    attachmentSize = 40,\n    MessageAvatar,\n    quotedMessage,\n    styles: stylesProp = {},\n    t,\n  } = props;\n\n  const [error, setError] = useState(false);\n\n  const {\n    theme: {\n      colors: { blue_alice, border, grey, transparent, white },\n      messageSimple: {\n        content: { deletedText },\n      },\n      reply: {\n        container,\n        fileAttachmentContainer,\n        imageAttachment,\n        markdownStyles,\n        messageContainer,\n        textContainer,\n      },\n    },\n  } = useTheme();\n\n  if (typeof quotedMessage === 'boolean') return null;\n\n  const lastAttachment = quotedMessage.attachments?.slice(-1)[0];\n\n  const messageType = lastAttachment\n    ? lastAttachment.type === 'file' || lastAttachment.type === 'audio'\n      ? 'file'\n      : lastAttachment.type === 'image' &&\n        !lastAttachment.title_link &&\n        !lastAttachment.og_scrape_url\n      ? lastAttachment.image_url || lastAttachment.thumb_url\n        ? 'image'\n        : undefined\n      : lastAttachment.type === 'giphy' || lastAttachment.type === 'imgur'\n      ? 'giphy'\n      : 'other'\n    : undefined;\n\n  const hasImage =\n    !error &&\n    lastAttachment &&\n    messageType !== 'file' &&\n    (lastAttachment.image_url || lastAttachment.thumb_url || lastAttachment.og_scrape_url);\n\n  const onlyEmojis = !lastAttachment && !!quotedMessage.text && emojiRegex.test(quotedMessage.text);\n\n  return (\n    <View style={[styles.container, container, stylesProp.container]}>\n      <MessageAvatar alignment={'left'} lastGroupMessage message={quotedMessage} size={24} />\n      <View\n        style={[\n          styles.messageContainer,\n          {\n            backgroundColor:\n              messageType === 'other' ? blue_alice : messageType === 'giphy' ? transparent : white,\n            borderColor: border,\n            borderWidth: messageType === 'other' ? 0 : 1,\n          },\n          messageContainer,\n          stylesProp.messageContainer,\n        ]}\n      >\n        {!error && lastAttachment ? (\n          messageType === 'file' ? (\n            <View\n              style={[\n                styles.fileAttachmentContainer,\n                fileAttachmentContainer,\n                stylesProp.fileAttachmentContainer,\n              ]}\n            >\n              <FileAttachmentIcon mimeType={lastAttachment.mime_type} size={attachmentSize} />\n            </View>\n          ) : hasImage ? (\n            <Image\n              onError={() => setError(true)}\n              source={{\n                uri:\n                  lastAttachment.image_url ||\n                  lastAttachment.thumb_url ||\n                  lastAttachment.og_scrape_url,\n              }}\n              style={[styles.imageAttachment, imageAttachment, stylesProp.imageAttachment]}\n            />\n          ) : null\n        ) : null}\n        <MessageTextContainer<At, Ch, Co, Ev, Me, Re, Us>\n          markdownStyles={\n            quotedMessage.deleted_at\n              ? merge({ em: { color: grey } }, deletedText)\n              : { text: styles.text, ...markdownStyles }\n          }\n          message={{\n            ...quotedMessage,\n            text: quotedMessage.deleted_at\n              ? `_${t('Message deleted')}_`\n              : quotedMessage.text\n              ? quotedMessage.text.length > 170\n                ? `${quotedMessage.text.slice(0, 170)}...`\n                : quotedMessage.text\n              : messageType === 'image'\n              ? t('Photo')\n              : messageType === 'file'\n              ? lastAttachment?.title || ''\n              : '',\n          }}\n          onlyEmojis={onlyEmojis}\n          styles={{\n            textContainer: [\n              {\n                marginRight: hasImage\n                  ? Number(\n                      stylesProp.imageAttachment?.height ||\n                        imageAttachment.height ||\n                        styles.imageAttachment.height,\n                    ) +\n                    Number(\n                      stylesProp.imageAttachment?.marginLeft ||\n                        imageAttachment.marginLeft ||\n                        styles.imageAttachment.marginLeft,\n                    )\n                  : messageType === 'file'\n                  ? attachmentSize +\n                    Number(\n                      stylesProp.fileAttachmentContainer?.paddingLeft ||\n                        fileAttachmentContainer.paddingLeft ||\n                        styles.fileAttachmentContainer.paddingLeft,\n                    )\n                  : undefined,\n              },\n              styles.textContainer,\n              textContainer,\n              stylesProp.textContainer,\n            ],\n          }}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst areEqual = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  prevProps: ReplyPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n  nextProps: ReplyPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const { quotedMessage: prevQuotedMessage } = prevProps;\n  const { quotedMessage: nextQuotedMessage } = nextProps;\n\n  const quotedMessageEqual =\n    !!prevQuotedMessage &&\n    !!nextQuotedMessage &&\n    typeof prevQuotedMessage !== 'boolean' &&\n    typeof nextQuotedMessage !== 'boolean'\n      ? prevQuotedMessage.id === nextQuotedMessage.id &&\n        prevQuotedMessage.deleted_at === nextQuotedMessage.deleted_at\n      : !!prevQuotedMessage === !!nextQuotedMessage;\n\n  if (!quotedMessageEqual) return false;\n\n  return true;\n};\n\nconst MemoizedReply = React.memo(ReplyWithContext, areEqual) as typeof ReplyWithContext;\n\nexport type ReplyProps<\n  At extends DefaultAttachmentType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n> = Partial<ReplyPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>>;\n\n/**\n * UI Component for reply\n */\nexport const Reply = <\n  At extends DefaultAttachmentType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  props: ReplyProps<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const { message } = useMessageContext<At, Ch, Co, Ev, Me, Re, Us>();\n\n  const { FileAttachmentIcon = FileIconDefault, MessageAvatar = MessageAvatarDefault } =\n    useMessagesContext<At, Ch, Co, Ev, Me, Re, Us>();\n\n  const { editing, quotedMessage } = useMessageInputContext<At, Ch, Co, Ev, Me, Re, Us>();\n\n  const quotedEditingMessage = (\n    typeof editing !== 'boolean' ? editing?.quoted_message || false : false\n  ) as MessageInputContextValue<At, Ch, Co, Ev, Me, Re, Us>['quotedMessage'];\n\n  const { t } = useTranslationContext();\n\n  return (\n    <MemoizedReply\n      {...{\n        FileAttachmentIcon,\n        MessageAvatar,\n        quotedMessage: message\n          ? (message.quoted_message as MessageInputContextValue<\n              At,\n              Ch,\n              Co,\n              Ev,\n              Me,\n              Re,\n              Us\n            >['quotedMessage'])\n          : quotedMessage || quotedEditingMessage,\n        t,\n      }}\n      {...props}\n    />\n  );\n};\n\nReply.displayName = 'Reply{reply}';\n"]}