{"version":3,"sources":["MessageDeleted.tsx"],"names":["styles","StyleSheet","create","containerInner","borderTopLeftRadius","borderTopRightRadius","borderWidth","overflow","leftAlignItems","alignItems","rightAlignItems","MessageDeletedWithContext","props","alignment","formattedDate","groupStyle","message","MessageFooter","noBorder","onLayout","t","theme","colors","grey","grey_whisper","messageSimple","content","container","borderRadiusL","borderRadiusS","deletedContainer","deletedContainerInner","deletedText","backgroundColor","borderBottomLeftRadius","borderBottomRightRadius","borderColor","em","color","text","areEqual","prevProps","nextProps","prevAlignment","prevFormattedDate","prevMessage","nextAlignment","nextFormattedDate","nextMessage","alignmentEqual","messageEqual","deleted_at","reply_count","status","type","formattedDateEqual","MemoizedMessageDeleted","React","memo","MessageDeleted","displayName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { LayoutChangeEvent, StyleSheet, View } from 'react-native';\nimport merge from 'lodash/merge';\n\nimport { MessageTextContainer } from './MessageTextContainer';\n\nimport {\n  Alignment,\n  MessageContextValue,\n  useMessageContext,\n} from '../../../contexts/messageContext/MessageContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../../contexts/messagesContext/MessagesContext';\nimport { useTheme } from '../../../contexts/themeContext/ThemeContext';\nimport {\n  TranslationContextValue,\n  useTranslationContext,\n} from '../../../contexts/translationContext/TranslationContext';\n\nimport type { MessageFooterProps } from './MessageFooter';\n\nimport type { MessageType } from '../../MessageList/hooks/useMessageList';\n\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../../types/types';\n\nconst styles = StyleSheet.create({\n  containerInner: {\n    borderTopLeftRadius: 16,\n    borderTopRightRadius: 16,\n    borderWidth: 1,\n    overflow: 'hidden',\n  },\n  leftAlignItems: {\n    alignItems: 'flex-start',\n  },\n  rightAlignItems: {\n    alignItems: 'flex-end',\n  },\n});\n\ntype MessageDeletedComponentProps = {\n  formattedDate: string | Date;\n  groupStyle: string;\n  noBorder: boolean;\n  onLayout: (event: LayoutChangeEvent) => void;\n};\n\ntype MessageDeletedPropsWithContext<\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n> = Pick<MessageContextValue<At, Ch, Co, Ev, Me, Re, Us>, 'alignment' | 'message'> &\n  Pick<MessagesContextValue<At, Ch, Co, Ev, Me, Re, Us>, 'MessageFooter'> &\n  Pick<TranslationContextValue, 't'> &\n  MessageDeletedComponentProps;\n\nconst MessageDeletedWithContext = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  props: MessageDeletedPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const { alignment, formattedDate, groupStyle, message, MessageFooter, noBorder, onLayout, t } =\n    props;\n\n  const {\n    theme: {\n      colors: { grey, grey_whisper },\n      messageSimple: {\n        content: {\n          container: { borderRadiusL, borderRadiusS },\n          deletedContainer,\n          deletedContainerInner,\n          deletedText,\n        },\n      },\n    },\n  } = useTheme();\n\n  return (\n    <View\n      onLayout={onLayout}\n      style={[\n        alignment === 'left' ? styles.leftAlignItems : styles.rightAlignItems,\n        deletedContainer,\n      ]}\n    >\n      <View\n        style={[\n          styles.containerInner,\n          {\n            backgroundColor: grey_whisper,\n            borderBottomLeftRadius:\n              groupStyle === 'left_bottom' || groupStyle === 'left_single'\n                ? borderRadiusS\n                : borderRadiusL,\n            borderBottomRightRadius:\n              groupStyle === 'right_bottom' || groupStyle === 'right_single'\n                ? borderRadiusS\n                : borderRadiusL,\n            borderColor: grey_whisper,\n          },\n          noBorder ? { borderWidth: 0 } : {},\n          deletedContainerInner,\n        ]}\n        testID='message-content-wrapper'\n      >\n        <MessageTextContainer<At, Ch, Co, Ev, Me, Re, Us>\n          markdownStyles={merge({ em: { color: grey } }, deletedText)}\n          message={{ ...message, text: `_${t('Message deleted')}_` }}\n        />\n      </View>\n      <MessageFooter formattedDate={formattedDate} isDeleted />\n    </View>\n  );\n};\n\nconst areEqual = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  prevProps: MessageDeletedPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n  nextProps: MessageDeletedPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const {\n    alignment: prevAlignment,\n    formattedDate: prevFormattedDate,\n    message: prevMessage,\n  } = prevProps;\n  const {\n    alignment: nextAlignment,\n    formattedDate: nextFormattedDate,\n    message: nextMessage,\n  } = nextProps;\n\n  const alignmentEqual = prevAlignment === nextAlignment;\n  if (!alignmentEqual) return false;\n\n  const messageEqual =\n    prevMessage.deleted_at === nextMessage.deleted_at &&\n    prevMessage.reply_count === nextMessage.reply_count &&\n    prevMessage.status === nextMessage.status &&\n    prevMessage.type === nextMessage.type &&\n    prevMessage.text === nextMessage.text;\n  if (!messageEqual) return false;\n\n  const formattedDateEqual = prevFormattedDate === nextFormattedDate;\n  if (!formattedDateEqual) return false;\n\n  return true;\n};\n\nconst MemoizedMessageDeleted = React.memo(\n  MessageDeletedWithContext,\n  areEqual,\n) as typeof MessageDeletedWithContext;\n\nexport type MessageDeletedProps<\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends DefaultUserType = DefaultUserType,\n> = MessageDeletedComponentProps & {\n  alignment?: Alignment;\n  message?: MessageType<At, Ch, Co, Ev, Me, Re, Us>;\n  MessageFooter?: React.ComponentType<MessageFooterProps<At, Ch, Co, Ev, Me, Re, Us>>;\n};\n\nexport const MessageDeleted = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends DefaultUserType = DefaultUserType,\n>(\n  props: MessageDeletedProps<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const { alignment, message } = useMessageContext<At, Ch, Co, Ev, Me, Re, Us>();\n\n  const { MessageFooter } = useMessagesContext<At, Ch, Co, Ev, Me, Re, Us>();\n\n  const { t } = useTranslationContext();\n\n  return (\n    <MemoizedMessageDeleted\n      {...{\n        alignment,\n        message,\n        MessageFooter,\n        t,\n      }}\n      {...props}\n    />\n  );\n};\n\nMessageDeleted.displayName = 'MessageDeleted{messageSimple{content}}';\n"]}