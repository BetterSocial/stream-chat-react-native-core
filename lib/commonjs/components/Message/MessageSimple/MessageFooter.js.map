{"version":3,"sources":["MessageFooter.tsx"],"names":["MessageFooterWithContext","props","alignment","formattedDate","isDeleted","lastGroupMessage","members","message","MessageStatus","otherAttachments","showMessageStatus","theme","grey","colors","messageSimple","content","deletedMetaText","eyeIcon","messageUser","metaContainer","metaText","t","undefined","color","textAlign","length","actions","Object","keys","user","name","areEqual","prevProps","nextProps","prevAlignment","prevFormattedDate","prevLastGroupMessage","prevMembers","prevMessage","prevOtherAttachments","prevShowMessageStatus","nextAlignment","nextFormattedDate","nextLastGroupMessage","nextMembers","nextMessage","nextOtherAttachments","nextShowMessageStatus","alignmentEqual","membersEqual","lastGroupMessageEqual","messageEqual","deleted_at","reply_count","status","type","text","otherAttachmentsEqual","showMessageStatusEqual","formattedDateEqual","MemoizedMessageFooter","React","memo","MessageFooter"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View } from 'react-native';\n\nimport {\n  Alignment,\n  MessageContextValue,\n  useMessageContext,\n} from '../../../contexts/messageContext/MessageContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../../contexts/messagesContext/MessagesContext';\n\nimport { useTheme } from '../../../contexts/themeContext/ThemeContext';\nimport { useTranslationContext } from '../../../contexts/translationContext/TranslationContext';\nimport { Eye } from '../../../icons';\n\nimport type { Attachment } from 'stream-chat';\n\nimport type { MessageStatusProps } from './MessageStatus';\n\nimport type { MessageType } from '../../MessageList/hooks/useMessageList';\n\nimport type { ChannelContextValue } from '../../../contexts/channelContext/ChannelContext';\nimport type {\n  DefaultAttachmentType,\n  DefaultChannelType,\n  DefaultCommandType,\n  DefaultEventType,\n  DefaultMessageType,\n  DefaultReactionType,\n  DefaultUserType,\n  UnknownType,\n} from '../../../types/types';\n\ntype MessageFooterComponentProps = {\n  formattedDate: string | Date;\n  isDeleted?: boolean;\n};\n\ntype MessageFooterPropsWithContext<\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n> = Pick<\n  MessageContextValue<At, Ch, Co, Ev, Me, Re, Us>,\n  | 'alignment'\n  | 'members'\n  | 'message'\n  | 'otherAttachments'\n  | 'showMessageStatus'\n  | 'lastGroupMessage'\n> &\n  Pick<MessagesContextValue<At, Ch, Co, Ev, Me, Re, Us>, 'MessageStatus'> &\n  MessageFooterComponentProps;\n\nconst MessageFooterWithContext = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  props: MessageFooterPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const {\n    alignment,\n    formattedDate,\n    isDeleted,\n    lastGroupMessage,\n    members,\n    message,\n    MessageStatus,\n    otherAttachments,\n    showMessageStatus,\n  } = props;\n\n  const {\n    theme: {\n      colors: { grey },\n      messageSimple: {\n        content: { deletedMetaText, eyeIcon, messageUser, metaContainer, metaText },\n      },\n    },\n  } = useTheme();\n  const { t } = useTranslationContext();\n\n  if (isDeleted) {\n    return (\n      <View style={metaContainer} testID='message-deleted'>\n        <Eye pathFill={isDeleted ? undefined : grey} {...eyeIcon} />\n        <Text\n          style={[\n            {\n              color: grey,\n              textAlign: alignment,\n            },\n            metaText,\n            deletedMetaText,\n          ]}\n        >\n          {t('Only visible to you')}\n        </Text>\n        <Text\n          style={[\n            {\n              color: grey,\n              textAlign: alignment,\n            },\n            metaText,\n          ]}\n        >\n          {formattedDate}\n        </Text>\n      </View>\n    );\n  }\n\n  if (lastGroupMessage === false) {\n    return null;\n  }\n\n  return (\n    <View style={metaContainer} testID='message-status-time'>\n      {otherAttachments.length && otherAttachments[0].actions ? (\n        <>\n          <Eye {...eyeIcon} />\n          <Text\n            style={[\n              {\n                color: grey,\n                textAlign: alignment,\n              },\n              metaText,\n              deletedMetaText,\n            ]}\n          >\n            {t('Only visible to you')}\n          </Text>\n        </>\n      ) : null}\n      {Object.keys(members).length > 2 && alignment === 'left' && message.user?.name ? (\n        <Text style={[{ color: grey }, messageUser]}>{message.user.name}</Text>\n      ) : null}\n      {showMessageStatus && <MessageStatus />}\n      <Text style={[{ color: grey, textAlign: alignment }, metaText]}>{formattedDate}</Text>\n    </View>\n  );\n};\n\nconst areEqual = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends UnknownType = DefaultUserType,\n>(\n  prevProps: MessageFooterPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n  nextProps: MessageFooterPropsWithContext<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const {\n    alignment: prevAlignment,\n    formattedDate: prevFormattedDate,\n    lastGroupMessage: prevLastGroupMessage,\n    members: prevMembers,\n    message: prevMessage,\n    otherAttachments: prevOtherAttachments,\n    showMessageStatus: prevShowMessageStatus,\n  } = prevProps;\n  const {\n    alignment: nextAlignment,\n    formattedDate: nextFormattedDate,\n    lastGroupMessage: nextLastGroupMessage,\n    members: nextMembers,\n    message: nextMessage,\n    otherAttachments: nextOtherAttachments,\n    showMessageStatus: nextShowMessageStatus,\n  } = nextProps;\n\n  const alignmentEqual = prevAlignment === nextAlignment;\n  if (!alignmentEqual) return false;\n\n  const membersEqual = Object.keys(prevMembers).length === Object.keys(nextMembers).length;\n  if (!membersEqual) return false;\n\n  const lastGroupMessageEqual = prevLastGroupMessage === nextLastGroupMessage;\n  if (!lastGroupMessageEqual) return false;\n\n  const messageEqual =\n    prevMessage.deleted_at === nextMessage.deleted_at &&\n    prevMessage.reply_count === nextMessage.reply_count &&\n    prevMessage.status === nextMessage.status &&\n    prevMessage.type === nextMessage.type &&\n    prevMessage.text === nextMessage.text;\n  if (!messageEqual) return false;\n\n  const otherAttachmentsEqual =\n    prevOtherAttachments.length === nextOtherAttachments.length &&\n    prevOtherAttachments?.[0]?.actions?.length === nextOtherAttachments?.[0]?.actions?.length;\n  if (!otherAttachmentsEqual) return false;\n\n  const showMessageStatusEqual = prevShowMessageStatus === nextShowMessageStatus;\n  if (!showMessageStatusEqual) return false;\n\n  const formattedDateEqual = prevFormattedDate === nextFormattedDate;\n  if (!formattedDateEqual) return false;\n\n  return true;\n};\n\nconst MemoizedMessageFooter = React.memo(\n  MessageFooterWithContext,\n  areEqual,\n) as typeof MessageFooterWithContext;\n\nexport type MessageFooterProps<\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends DefaultUserType = DefaultUserType,\n> = Partial<Pick<ChannelContextValue<At, Ch, Co, Ev, Me, Re, Us>, 'members'>> &\n  MessageFooterComponentProps & {\n    alignment?: Alignment;\n    lastGroupMessage?: boolean;\n    message?: MessageType<At, Ch, Co, Ev, Me, Re, Us>;\n    MessageStatus?: React.ComponentType<MessageStatusProps<At, Ch, Co, Ev, Me, Re, Us>>;\n    otherAttachments?: Attachment<At>[];\n    showMessageStatus?: boolean;\n  };\n\nexport const MessageFooter = <\n  At extends UnknownType = DefaultAttachmentType,\n  Ch extends UnknownType = DefaultChannelType,\n  Co extends string = DefaultCommandType,\n  Ev extends UnknownType = DefaultEventType,\n  Me extends UnknownType = DefaultMessageType,\n  Re extends UnknownType = DefaultReactionType,\n  Us extends DefaultUserType = DefaultUserType,\n>(\n  props: MessageFooterProps<At, Ch, Co, Ev, Me, Re, Us>,\n) => {\n  const { alignment, lastGroupMessage, members, message, otherAttachments, showMessageStatus } =\n    useMessageContext<At, Ch, Co, Ev, Me, Re, Us>();\n\n  const { MessageStatus } = useMessagesContext<At, Ch, Co, Ev, Me, Re, Us>();\n\n  return (\n    <MemoizedMessageFooter\n      {...{\n        alignment,\n        lastGroupMessage,\n        members,\n        message,\n        MessageStatus,\n        otherAttachments,\n        showMessageStatus,\n      }}\n      {...props}\n    />\n  );\n};\n"]}